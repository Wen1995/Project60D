package com.game.framework.protocol;

option optimize_for = SPEED;

message TCSSaveMessage {
	// 工会Id
	optional int64 groupId = 1;
	// 消息类型
	optional int32 type = 2;
	// 僵尸入侵消息
	optional ZombieInfo zombieInfo = 3;
	// 入侵结果消息
	optional FightingInfo fightingInfo = 4;
}

message ZombieInfo {
	// 僵尸configId
	optional int32 configId = 1;
	// 入侵时间
	optional int64 zombieInvadeTime = 2;
}

message FightingInfo {
	// 战斗结果
	repeated InvadeResultInfo invadeResultInfos = 1;
	// 全部损失信息
	repeated LossInfo lossInfos = 2;
	// 开始时玩家信息
	repeated UserInfo userInfos = 3;
	// 损失信息
	optional LossInfo lossInfo = 4;
}

message InvadeResultInfo {
	// Id类型
	optional int32 type = 1;
	// 玩家或建筑Id
	optional int64 id = 2;
	// 杀死僵尸数量
	optional int32 num = 3;
	// 大门的耐久或玩家的血量
	optional int32 blood = 4;
}

message LossInfo {
	// 玩家Id
	optional int64 uid = 1;
	// 资源损失
	optional int32 resource = 2;
	// 金币损失
	optional double gold = 3;
}

message UserInfo {
	// 玩家Id
	optional int64 uid = 1;
	// 名字
	optional string account = 2;
	// 血量
	optional int32 blood = 3;
	// 健康
	optional int32 health = 4;
	// 贡献
	optional int32 contribution = 5;
}

message TCSGetPageCount {
	// 工会Id
	optional int64 groupId = 1;
}
message TSCGetPageCount {
	// 页数
	optional int32 pageCount = 1;
}

message TCSGetPageList {
	// 第几页
	optional int32 currentPage = 1;
	// 工会Id
	optional int64 groupId = 2;
}
message TSCGetPageList {
	// 消息内容
	repeated MessageInfo messageInfo = 1;
}

message MessageInfo {
	// 消息Id
	optional int64 id = 1;
	// 消息类型
	optional int32 type = 2;
	// 僵尸入侵消息
	optional ZombieInfo zombieInfo = 3;
	// 入侵结果消息
	optional FightingInfo fightingInfo = 4;
	// 发送时间
	optional int64 time = 5;
	// 是否读过
	optional bool isRead = 6;
}

message TCSGetMessageTag {

}
message TSCGetMessageTag {
	// 未读数量
	optional int32 messageNum = 1;
}

message TCSSendMessageTag {
	// 邮件Id
	optional int64 messageId = 1;
}