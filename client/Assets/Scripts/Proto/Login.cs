// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.nkm.common.proto.client {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Login {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_com_nkm_common_proto_client_TCSLogin__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.nkm.common.proto.client.TCSLogin, global::com.nkm.common.proto.client.TCSLogin.Builder> internal__static_com_nkm_common_proto_client_TCSLogin__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_nkm_common_proto_client_TSCLogin__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.nkm.common.proto.client.TSCLogin, global::com.nkm.common.proto.client.TSCLogin.Builder> internal__static_com_nkm_common_proto_client_TSCLogin__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Login() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgtsb2dpbi5wcm90bxIbY29tLm5rbS5jb21tb24ucHJvdG8uY2xpZW50IhsK", 
            "CFRDU0xvZ2luEg8KB2FjY291bnQYASABKAkiMgoIVFNDTG9naW4SCwoDdWlk", 
          "GAEgASgDEhkKEXN5c3RlbUN1cnJlbnRUaW1lGAIgASgDQgJIAQ=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_com_nkm_common_proto_client_TCSLogin__Descriptor = Descriptor.MessageTypes[0];
        internal__static_com_nkm_common_proto_client_TCSLogin__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.nkm.common.proto.client.TCSLogin, global::com.nkm.common.proto.client.TCSLogin.Builder>(internal__static_com_nkm_common_proto_client_TCSLogin__Descriptor,
                new string[] { "Account", });
        internal__static_com_nkm_common_proto_client_TSCLogin__Descriptor = Descriptor.MessageTypes[1];
        internal__static_com_nkm_common_proto_client_TSCLogin__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.nkm.common.proto.client.TSCLogin, global::com.nkm.common.proto.client.TSCLogin.Builder>(internal__static_com_nkm_common_proto_client_TSCLogin__Descriptor,
                new string[] { "Uid", "SystemCurrentTime", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TCSLogin : pb::GeneratedMessage<TCSLogin, TCSLogin.Builder> {
    private TCSLogin() { }
    private static readonly TCSLogin defaultInstance = new TCSLogin().MakeReadOnly();
    private static readonly string[] _tCSLoginFieldNames = new string[] { "account" };
    private static readonly uint[] _tCSLoginFieldTags = new uint[] { 10 };
    public static TCSLogin DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TCSLogin DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TCSLogin ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.nkm.common.proto.client.Login.internal__static_com_nkm_common_proto_client_TCSLogin__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TCSLogin, TCSLogin.Builder> InternalFieldAccessors {
      get { return global::com.nkm.common.proto.client.Login.internal__static_com_nkm_common_proto_client_TCSLogin__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private string account_ = "";
    public bool HasAccount {
      get { return hasAccount; }
    }
    public string Account {
      get { return account_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tCSLoginFieldNames;
      if (hasAccount) {
        output.WriteString(1, field_names[0], Account);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccount) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Account);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TCSLogin ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TCSLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TCSLogin ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TCSLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TCSLogin ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TCSLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TCSLogin ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TCSLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TCSLogin ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TCSLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TCSLogin MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TCSLogin prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TCSLogin, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TCSLogin cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TCSLogin result;
      
      private TCSLogin PrepareBuilder() {
        if (resultIsReadOnly) {
          TCSLogin original = result;
          result = new TCSLogin();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TCSLogin MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.nkm.common.proto.client.TCSLogin.Descriptor; }
      }
      
      public override TCSLogin DefaultInstanceForType {
        get { return global::com.nkm.common.proto.client.TCSLogin.DefaultInstance; }
      }
      
      public override TCSLogin BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TCSLogin) {
          return MergeFrom((TCSLogin) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TCSLogin other) {
        if (other == global::com.nkm.common.proto.client.TCSLogin.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          Account = other.Account;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tCSLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tCSLoginFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccount = input.ReadString(ref result.account_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public string Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = "";
        return this;
      }
    }
    static TCSLogin() {
      object.ReferenceEquals(global::com.nkm.common.proto.client.Login.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TSCLogin : pb::GeneratedMessage<TSCLogin, TSCLogin.Builder> {
    private TSCLogin() { }
    private static readonly TSCLogin defaultInstance = new TSCLogin().MakeReadOnly();
    private static readonly string[] _tSCLoginFieldNames = new string[] { "systemCurrentTime", "uid" };
    private static readonly uint[] _tSCLoginFieldTags = new uint[] { 16, 8 };
    public static TSCLogin DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TSCLogin DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TSCLogin ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.nkm.common.proto.client.Login.internal__static_com_nkm_common_proto_client_TSCLogin__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TSCLogin, TSCLogin.Builder> InternalFieldAccessors {
      get { return global::com.nkm.common.proto.client.Login.internal__static_com_nkm_common_proto_client_TSCLogin__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private long uid_;
    public bool HasUid {
      get { return hasUid; }
    }
    public long Uid {
      get { return uid_; }
    }
    
    public const int SystemCurrentTimeFieldNumber = 2;
    private bool hasSystemCurrentTime;
    private long systemCurrentTime_;
    public bool HasSystemCurrentTime {
      get { return hasSystemCurrentTime; }
    }
    public long SystemCurrentTime {
      get { return systemCurrentTime_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tSCLoginFieldNames;
      if (hasUid) {
        output.WriteInt64(1, field_names[1], Uid);
      }
      if (hasSystemCurrentTime) {
        output.WriteInt64(2, field_names[0], SystemCurrentTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Uid);
      }
      if (hasSystemCurrentTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, SystemCurrentTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TSCLogin ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TSCLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TSCLogin ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TSCLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TSCLogin ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TSCLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TSCLogin ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TSCLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TSCLogin ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TSCLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TSCLogin MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TSCLogin prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TSCLogin, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TSCLogin cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TSCLogin result;
      
      private TSCLogin PrepareBuilder() {
        if (resultIsReadOnly) {
          TSCLogin original = result;
          result = new TSCLogin();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TSCLogin MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.nkm.common.proto.client.TSCLogin.Descriptor; }
      }
      
      public override TSCLogin DefaultInstanceForType {
        get { return global::com.nkm.common.proto.client.TSCLogin.DefaultInstance; }
      }
      
      public override TSCLogin BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TSCLogin) {
          return MergeFrom((TSCLogin) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TSCLogin other) {
        if (other == global::com.nkm.common.proto.client.TSCLogin.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.HasSystemCurrentTime) {
          SystemCurrentTime = other.SystemCurrentTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tSCLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tSCLoginFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUid = input.ReadInt64(ref result.uid_);
              break;
            }
            case 16: {
              result.hasSystemCurrentTime = input.ReadInt64(ref result.systemCurrentTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public long Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(long value) {
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = 0L;
        return this;
      }
      
      public bool HasSystemCurrentTime {
        get { return result.hasSystemCurrentTime; }
      }
      public long SystemCurrentTime {
        get { return result.SystemCurrentTime; }
        set { SetSystemCurrentTime(value); }
      }
      public Builder SetSystemCurrentTime(long value) {
        PrepareBuilder();
        result.hasSystemCurrentTime = true;
        result.systemCurrentTime_ = value;
        return this;
      }
      public Builder ClearSystemCurrentTime() {
        PrepareBuilder();
        result.hasSystemCurrentTime = false;
        result.systemCurrentTime_ = 0L;
        return this;
      }
    }
    static TSCLogin() {
      object.ReferenceEquals(global::com.nkm.common.proto.client.Login.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
