package com.game.framework.protocol;

option optimize_for = SPEED;

message TCSGetSceneInfo {

}
message TSCGetSceneInfo {
	// 所有建筑信息
	repeated BuildingInfo buildingInfos = 1;
}

message TCSGetBuildingInfo {
	// 建筑ID
	optional int64 buildingId = 1;
}
message TSCGetBuildingInfo {
	// 当前建筑信息
	optional BuildingInfo buildingInfo = 1;
}

message BuildingInfo {
	// 建筑ID
	optional int64 buildingId = 1;
	// 建筑configId
	optional int32 configId = 2;
	// 升级完成时间，值为 0 则没在升级中
	optional int64 finishTime = 3;
	// 升级人
	optional int64 uid = 4;
	// 还未领取资源数量
	optional int32 number = 5;
}

message TCSUpgrade {
	// 建筑ID
	optional int64 buildingId = 1;
}
message TSCUpgrade {
	// 建筑是否在升级
	optional bool isState = 1;
	// 公司实力是否满足
	optional bool isGroup = 2;
	// 资源是否满足
	optional bool isResource = 3;
	// 是否有空闲的建筑队列
	optional bool isProduction = 4;
	// 升级完成时间
	optional int64 finishTime = 5;
	// 建筑ID
	optional int64 buildingId = 6;
}

message TCSFinishUpgrade {
	// 建筑ID
	optional int64 buildingId = 1;
}
message TSCFinishUpgrade {
	// 建筑ID
	optional int64 buildingId = 1;
}

message TCSUnlock {
	// 建筑configId
	optional int32 configId = 1;
}
message TSCUnlock {
	// 建筑ID
	optional int64 buildingId = 1;
	// 公司实力是否满足
	optional bool isGroup = 2;
	// 资源是否满足
	optional bool isResource = 3;
	// 是否有空闲的建筑队列
	optional bool isProduction = 4;
	// 升级完成时间
	optional int64 finishTime = 5;
}

message TCSFinishUnlock {
	// 建筑ID
	optional int64 buildingId = 1;
}
message TSCFinishUnlock {
	// 建筑ID
	optional int64 buildingId = 1;
}

message TCSReceive {
	// 建筑ID
	optional int64 buildingId = 1;
}
message TSCReceive {
	// 建筑ID
	optional int64 buildingId = 1;
	// 资源configId
	optional int32 configId = 2;
	// 资源数量
	optional int32 number = 3;
}
