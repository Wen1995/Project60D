<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nkm.framework.dbcache.model.GroupMapper">
  <resultMap id="BaseResultMap" type="com.nkm.framework.dbcache.model.Group">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="people_number" jdbcType="INTEGER" property="peopleNumber" />
    <result column="total_contribution" jdbcType="INTEGER" property="totalContribution" />
    <result column="group_gold" jdbcType="INTEGER" property="groupGold" />
    <result column="storehouse_id" jdbcType="BIGINT" property="storehouseId" />
    <result column="battery_id" jdbcType="BIGINT" property="batteryId" />
    <result column="invade_time" jdbcType="TIMESTAMP" property="invadeTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, people_number, total_contribution, group_gold, storehouse_id, battery_id, 
    invade_time
  </sql>
  <select id="selectByExample" parameterType="com.nkm.framework.dbcache.model.GroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_group
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_group
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nkm.framework.dbcache.model.GroupExample">
    delete from t_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nkm.framework.dbcache.model.Group">
    insert into t_group (id, name, people_number, 
      total_contribution, group_gold, storehouse_id, 
      battery_id, invade_time)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{peopleNumber,jdbcType=INTEGER}, 
      #{totalContribution,jdbcType=INTEGER}, #{groupGold,jdbcType=INTEGER}, #{storehouseId,jdbcType=BIGINT}, 
      #{batteryId,jdbcType=BIGINT}, #{invadeTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.nkm.framework.dbcache.model.Group">
    insert into t_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="peopleNumber != null">
        people_number,
      </if>
      <if test="totalContribution != null">
        total_contribution,
      </if>
      <if test="groupGold != null">
        group_gold,
      </if>
      <if test="storehouseId != null">
        storehouse_id,
      </if>
      <if test="batteryId != null">
        battery_id,
      </if>
      <if test="invadeTime != null">
        invade_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="peopleNumber != null">
        #{peopleNumber,jdbcType=INTEGER},
      </if>
      <if test="totalContribution != null">
        #{totalContribution,jdbcType=INTEGER},
      </if>
      <if test="groupGold != null">
        #{groupGold,jdbcType=INTEGER},
      </if>
      <if test="storehouseId != null">
        #{storehouseId,jdbcType=BIGINT},
      </if>
      <if test="batteryId != null">
        #{batteryId,jdbcType=BIGINT},
      </if>
      <if test="invadeTime != null">
        #{invadeTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nkm.framework.dbcache.model.GroupExample" resultType="java.lang.Long">
    select count(*) from t_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_group
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.peopleNumber != null">
        people_number = #{record.peopleNumber,jdbcType=INTEGER},
      </if>
      <if test="record.totalContribution != null">
        total_contribution = #{record.totalContribution,jdbcType=INTEGER},
      </if>
      <if test="record.groupGold != null">
        group_gold = #{record.groupGold,jdbcType=INTEGER},
      </if>
      <if test="record.storehouseId != null">
        storehouse_id = #{record.storehouseId,jdbcType=BIGINT},
      </if>
      <if test="record.batteryId != null">
        battery_id = #{record.batteryId,jdbcType=BIGINT},
      </if>
      <if test="record.invadeTime != null">
        invade_time = #{record.invadeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_group
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      people_number = #{record.peopleNumber,jdbcType=INTEGER},
      total_contribution = #{record.totalContribution,jdbcType=INTEGER},
      group_gold = #{record.groupGold,jdbcType=INTEGER},
      storehouse_id = #{record.storehouseId,jdbcType=BIGINT},
      battery_id = #{record.batteryId,jdbcType=BIGINT},
      invade_time = #{record.invadeTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nkm.framework.dbcache.model.Group">
    update t_group
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="peopleNumber != null">
        people_number = #{peopleNumber,jdbcType=INTEGER},
      </if>
      <if test="totalContribution != null">
        total_contribution = #{totalContribution,jdbcType=INTEGER},
      </if>
      <if test="groupGold != null">
        group_gold = #{groupGold,jdbcType=INTEGER},
      </if>
      <if test="storehouseId != null">
        storehouse_id = #{storehouseId,jdbcType=BIGINT},
      </if>
      <if test="batteryId != null">
        battery_id = #{batteryId,jdbcType=BIGINT},
      </if>
      <if test="invadeTime != null">
        invade_time = #{invadeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nkm.framework.dbcache.model.Group">
    update t_group
    set name = #{name,jdbcType=VARCHAR},
      people_number = #{peopleNumber,jdbcType=INTEGER},
      total_contribution = #{totalContribution,jdbcType=INTEGER},
      group_gold = #{groupGold,jdbcType=INTEGER},
      storehouse_id = #{storehouseId,jdbcType=BIGINT},
      battery_id = #{batteryId,jdbcType=BIGINT},
      invade_time = #{invadeTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>