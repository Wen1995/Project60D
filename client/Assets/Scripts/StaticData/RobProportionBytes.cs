// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=null.  DO NOT EDIT!
#pragma warning disable
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.nkm.framework.resource.data {
  
  public static partial class RobProportionBytes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    #endregion
    #region Extensions
    internal static readonly object Descriptor;
    static RobProportionBytes() {
      Descriptor = null;
    }
    #endregion
    
  }
  #region Messages
  public sealed partial class ROB_PROPORTION : pb::GeneratedMessageLite<ROB_PROPORTION, ROB_PROPORTION.Builder> {
    private ROB_PROPORTION() { }
    private static readonly ROB_PROPORTION defaultInstance = new ROB_PROPORTION().MakeReadOnly();
    private static readonly string[] _rOBPROPORTIONFieldNames = new string[] { "big_warehouse", "bw_lim", "gold_lim", "gold_prop", "id", "transit_depot" };
    private static readonly uint[] _rOBPROPORTIONFieldTags = new uint[] { 24, 32, 48, 40, 8, 16 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override ROB_PROPORTION DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ROB_PROPORTION ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int TransitDepotFieldNumber = 2;
    private bool hasTransitDepot;
    private int transitDepot_;
    public bool HasTransitDepot {
      get { return hasTransitDepot; }
    }
    public int TransitDepot {
      get { return transitDepot_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BigWarehouseFieldNumber = 3;
    private bool hasBigWarehouse;
    private int bigWarehouse_;
    public bool HasBigWarehouse {
      get { return hasBigWarehouse; }
    }
    public int BigWarehouse {
      get { return bigWarehouse_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BwLimFieldNumber = 4;
    private bool hasBwLim;
    private int bwLim_;
    public bool HasBwLim {
      get { return hasBwLim; }
    }
    public int BwLim {
      get { return bwLim_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int GoldPropFieldNumber = 5;
    private bool hasGoldProp;
    private int goldProp_;
    public bool HasGoldProp {
      get { return hasGoldProp; }
    }
    public int GoldProp {
      get { return goldProp_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int GoldLimFieldNumber = 6;
    private bool hasGoldLim;
    private int goldLim_;
    public bool HasGoldLim {
      get { return hasGoldLim; }
    }
    public int GoldLim {
      get { return goldLim_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _rOBPROPORTIONFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[4], Id);
      }
      if (hasTransitDepot) {
        output.WriteInt32(2, field_names[5], TransitDepot);
      }
      if (hasBigWarehouse) {
        output.WriteInt32(3, field_names[0], BigWarehouse);
      }
      if (hasBwLim) {
        output.WriteInt32(4, field_names[1], BwLim);
      }
      if (hasGoldProp) {
        output.WriteInt32(5, field_names[3], GoldProp);
      }
      if (hasGoldLim) {
        output.WriteInt32(6, field_names[2], GoldLim);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasTransitDepot) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, TransitDepot);
        }
        if (hasBigWarehouse) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, BigWarehouse);
        }
        if (hasBwLim) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, BwLim);
        }
        if (hasGoldProp) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, GoldProp);
        }
        if (hasGoldLim) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, GoldLim);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasId) hash ^= id_.GetHashCode();
      if (hasTransitDepot) hash ^= transitDepot_.GetHashCode();
      if (hasBigWarehouse) hash ^= bigWarehouse_.GetHashCode();
      if (hasBwLim) hash ^= bwLim_.GetHashCode();
      if (hasGoldProp) hash ^= goldProp_.GetHashCode();
      if (hasGoldLim) hash ^= goldLim_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      ROB_PROPORTION other = obj as ROB_PROPORTION;
      if (other == null) return false;
      if (hasId != other.hasId || (hasId && !id_.Equals(other.id_))) return false;
      if (hasTransitDepot != other.hasTransitDepot || (hasTransitDepot && !transitDepot_.Equals(other.transitDepot_))) return false;
      if (hasBigWarehouse != other.hasBigWarehouse || (hasBigWarehouse && !bigWarehouse_.Equals(other.bigWarehouse_))) return false;
      if (hasBwLim != other.hasBwLim || (hasBwLim && !bwLim_.Equals(other.bwLim_))) return false;
      if (hasGoldProp != other.hasGoldProp || (hasGoldProp && !goldProp_.Equals(other.goldProp_))) return false;
      if (hasGoldLim != other.hasGoldLim || (hasGoldLim && !goldLim_.Equals(other.goldLim_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ROB_PROPORTION MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(ROB_PROPORTION prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<ROB_PROPORTION, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ROB_PROPORTION cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ROB_PROPORTION result;
      
      private ROB_PROPORTION PrepareBuilder() {
        if (resultIsReadOnly) {
          ROB_PROPORTION original = result;
          result = new ROB_PROPORTION();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ROB_PROPORTION MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override ROB_PROPORTION DefaultInstanceForType {
        get { return global::com.nkm.framework.resource.data.ROB_PROPORTION.DefaultInstance; }
      }
      
      public override ROB_PROPORTION BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is ROB_PROPORTION) {
          return MergeFrom((ROB_PROPORTION) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ROB_PROPORTION other) {
        if (other == global::com.nkm.framework.resource.data.ROB_PROPORTION.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasTransitDepot) {
          TransitDepot = other.TransitDepot;
        }
        if (other.HasBigWarehouse) {
          BigWarehouse = other.BigWarehouse;
        }
        if (other.HasBwLim) {
          BwLim = other.BwLim;
        }
        if (other.HasGoldProp) {
          GoldProp = other.GoldProp;
        }
        if (other.HasGoldLim) {
          GoldLim = other.GoldLim;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rOBPROPORTIONFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rOBPROPORTIONFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 16: {
              result.hasTransitDepot = input.ReadInt32(ref result.transitDepot_);
              break;
            }
            case 24: {
              result.hasBigWarehouse = input.ReadInt32(ref result.bigWarehouse_);
              break;
            }
            case 32: {
              result.hasBwLim = input.ReadInt32(ref result.bwLim_);
              break;
            }
            case 40: {
              result.hasGoldProp = input.ReadInt32(ref result.goldProp_);
              break;
            }
            case 48: {
              result.hasGoldLim = input.ReadInt32(ref result.goldLim_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasTransitDepot {
        get { return result.hasTransitDepot; }
      }
      public int TransitDepot {
        get { return result.TransitDepot; }
        set { SetTransitDepot(value); }
      }
      public Builder SetTransitDepot(int value) {
        PrepareBuilder();
        result.hasTransitDepot = true;
        result.transitDepot_ = value;
        return this;
      }
      public Builder ClearTransitDepot() {
        PrepareBuilder();
        result.hasTransitDepot = false;
        result.transitDepot_ = 0;
        return this;
      }
      
      public bool HasBigWarehouse {
        get { return result.hasBigWarehouse; }
      }
      public int BigWarehouse {
        get { return result.BigWarehouse; }
        set { SetBigWarehouse(value); }
      }
      public Builder SetBigWarehouse(int value) {
        PrepareBuilder();
        result.hasBigWarehouse = true;
        result.bigWarehouse_ = value;
        return this;
      }
      public Builder ClearBigWarehouse() {
        PrepareBuilder();
        result.hasBigWarehouse = false;
        result.bigWarehouse_ = 0;
        return this;
      }
      
      public bool HasBwLim {
        get { return result.hasBwLim; }
      }
      public int BwLim {
        get { return result.BwLim; }
        set { SetBwLim(value); }
      }
      public Builder SetBwLim(int value) {
        PrepareBuilder();
        result.hasBwLim = true;
        result.bwLim_ = value;
        return this;
      }
      public Builder ClearBwLim() {
        PrepareBuilder();
        result.hasBwLim = false;
        result.bwLim_ = 0;
        return this;
      }
      
      public bool HasGoldProp {
        get { return result.hasGoldProp; }
      }
      public int GoldProp {
        get { return result.GoldProp; }
        set { SetGoldProp(value); }
      }
      public Builder SetGoldProp(int value) {
        PrepareBuilder();
        result.hasGoldProp = true;
        result.goldProp_ = value;
        return this;
      }
      public Builder ClearGoldProp() {
        PrepareBuilder();
        result.hasGoldProp = false;
        result.goldProp_ = 0;
        return this;
      }
      
      public bool HasGoldLim {
        get { return result.hasGoldLim; }
      }
      public int GoldLim {
        get { return result.GoldLim; }
        set { SetGoldLim(value); }
      }
      public Builder SetGoldLim(int value) {
        PrepareBuilder();
        result.hasGoldLim = true;
        result.goldLim_ = value;
        return this;
      }
      public Builder ClearGoldLim() {
        PrepareBuilder();
        result.hasGoldLim = false;
        result.goldLim_ = 0;
        return this;
      }
    }
    static ROB_PROPORTION() {
      object.ReferenceEquals(global::com.nkm.framework.resource.data.RobProportionBytes.Descriptor, null);
    }
  }
  
  public sealed partial class ROB_PROPORTION_ARRAY : pb::GeneratedMessageLite<ROB_PROPORTION_ARRAY, ROB_PROPORTION_ARRAY.Builder> {
    private ROB_PROPORTION_ARRAY() { }
    private static readonly ROB_PROPORTION_ARRAY defaultInstance = new ROB_PROPORTION_ARRAY().MakeReadOnly();
    private static readonly string[] _rOBPROPORTIONARRAYFieldNames = new string[] { "items" };
    private static readonly uint[] _rOBPROPORTIONARRAYFieldTags = new uint[] { 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION_ARRAY DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override ROB_PROPORTION_ARRAY DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ROB_PROPORTION_ARRAY ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ItemsFieldNumber = 1;
    private pbc::PopsicleList<global::com.nkm.framework.resource.data.ROB_PROPORTION> items_ = new pbc::PopsicleList<global::com.nkm.framework.resource.data.ROB_PROPORTION>();
    public scg::IList<global::com.nkm.framework.resource.data.ROB_PROPORTION> ItemsList {
      get { return items_; }
    }
    public int ItemsCount {
      get { return items_.Count; }
    }
    public global::com.nkm.framework.resource.data.ROB_PROPORTION GetItems(int index) {
      return items_[index];
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        foreach (global::com.nkm.framework.resource.data.ROB_PROPORTION element in ItemsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _rOBPROPORTIONARRAYFieldNames;
      if (items_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], items_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.nkm.framework.resource.data.ROB_PROPORTION element in ItemsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      foreach(global::com.nkm.framework.resource.data.ROB_PROPORTION i in items_)
        hash ^= i.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      ROB_PROPORTION_ARRAY other = obj as ROB_PROPORTION_ARRAY;
      if (other == null) return false;
      if(items_.Count != other.items_.Count) return false;
      for(int ix=0; ix < items_.Count; ix++)
        if(!items_[ix].Equals(other.items_[ix])) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION_ARRAY ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION_ARRAY ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION_ARRAY ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION_ARRAY ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION_ARRAY ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION_ARRAY ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION_ARRAY ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION_ARRAY ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION_ARRAY ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ROB_PROPORTION_ARRAY ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ROB_PROPORTION_ARRAY MakeReadOnly() {
      items_.MakeReadOnly();
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(ROB_PROPORTION_ARRAY prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<ROB_PROPORTION_ARRAY, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ROB_PROPORTION_ARRAY cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ROB_PROPORTION_ARRAY result;
      
      private ROB_PROPORTION_ARRAY PrepareBuilder() {
        if (resultIsReadOnly) {
          ROB_PROPORTION_ARRAY original = result;
          result = new ROB_PROPORTION_ARRAY();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ROB_PROPORTION_ARRAY MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override ROB_PROPORTION_ARRAY DefaultInstanceForType {
        get { return global::com.nkm.framework.resource.data.ROB_PROPORTION_ARRAY.DefaultInstance; }
      }
      
      public override ROB_PROPORTION_ARRAY BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is ROB_PROPORTION_ARRAY) {
          return MergeFrom((ROB_PROPORTION_ARRAY) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ROB_PROPORTION_ARRAY other) {
        if (other == global::com.nkm.framework.resource.data.ROB_PROPORTION_ARRAY.DefaultInstance) return this;
        PrepareBuilder();
        if (other.items_.Count != 0) {
          result.items_.Add(other.items_);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rOBPROPORTIONARRAYFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rOBPROPORTIONARRAYFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.items_, global::com.nkm.framework.resource.data.ROB_PROPORTION.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.nkm.framework.resource.data.ROB_PROPORTION> ItemsList {
        get { return PrepareBuilder().items_; }
      }
      public int ItemsCount {
        get { return result.ItemsCount; }
      }
      public global::com.nkm.framework.resource.data.ROB_PROPORTION GetItems(int index) {
        return result.GetItems(index);
      }
      public Builder SetItems(int index, global::com.nkm.framework.resource.data.ROB_PROPORTION value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_[index] = value;
        return this;
      }
      public Builder SetItems(int index, global::com.nkm.framework.resource.data.ROB_PROPORTION.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddItems(global::com.nkm.framework.resource.data.ROB_PROPORTION value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_.Add(value);
        return this;
      }
      public Builder AddItems(global::com.nkm.framework.resource.data.ROB_PROPORTION.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeItems(scg::IEnumerable<global::com.nkm.framework.resource.data.ROB_PROPORTION> values) {
        PrepareBuilder();
        result.items_.Add(values);
        return this;
      }
      public Builder ClearItems() {
        PrepareBuilder();
        result.items_.Clear();
        return this;
      }
    }
    static ROB_PROPORTION_ARRAY() {
      object.ReferenceEquals(global::com.nkm.framework.resource.data.RobProportionBytes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
#pragma warning restore
