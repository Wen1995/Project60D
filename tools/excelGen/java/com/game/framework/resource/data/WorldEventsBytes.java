// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/world_events_bytes.proto

package com.game.framework.resource.data;

public final class WorldEventsBytes {
  private WorldEventsBytes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface WORLD_EVENTSOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.framework.resource.data.WORLD_EVENTS)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1 [default = 0];</code>
     *
     * <pre>
     ** id 
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1 [default = 0];</code>
     *
     * <pre>
     ** id 
     * </pre>
     */
    int getId();

    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    boolean hasEventName();
    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    java.lang.String getEventName();
    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    com.google.protobuf.ByteString
        getEventNameBytes();

    /**
     * <code>optional string event_desc = 3 [default = ""];</code>
     *
     * <pre>
     ** 事件描述 
     * </pre>
     */
    boolean hasEventDesc();
    /**
     * <code>optional string event_desc = 3 [default = ""];</code>
     *
     * <pre>
     ** 事件描述 
     * </pre>
     */
    java.lang.String getEventDesc();
    /**
     * <code>optional string event_desc = 3 [default = ""];</code>
     *
     * <pre>
     ** 事件描述 
     * </pre>
     */
    com.google.protobuf.ByteString
        getEventDescBytes();

    /**
     * <code>optional int32 event_duration = 4 [default = 0];</code>
     *
     * <pre>
     ** 持续时间（min） 
     * </pre>
     */
    boolean hasEventDuration();
    /**
     * <code>optional int32 event_duration = 4 [default = 0];</code>
     *
     * <pre>
     ** 持续时间（min） 
     * </pre>
     */
    int getEventDuration();

    /**
     * <code>optional string event_icon = 5 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    boolean hasEventIcon();
    /**
     * <code>optional string event_icon = 5 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    java.lang.String getEventIcon();
    /**
     * <code>optional string event_icon = 5 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    com.google.protobuf.ByteString
        getEventIconBytes();

    /**
     * <code>optional int32 event_prob = 6 [default = 0];</code>
     *
     * <pre>
     ** 每分钟概率*100000 
     * </pre>
     */
    boolean hasEventProb();
    /**
     * <code>optional int32 event_prob = 6 [default = 0];</code>
     *
     * <pre>
     ** 每分钟概率*100000 
     * </pre>
     */
    int getEventProb();

    /**
     * <code>optional int32 zombie_atk = 7 [default = 0];</code>
     *
     * <pre>
     ** 攻击 
     * </pre>
     */
    boolean hasZombieAtk();
    /**
     * <code>optional int32 zombie_atk = 7 [default = 0];</code>
     *
     * <pre>
     ** 攻击 
     * </pre>
     */
    int getZombieAtk();

    /**
     * <code>optional int32 zombie_def = 8 [default = 0];</code>
     *
     * <pre>
     ** 防御 
     * </pre>
     */
    boolean hasZombieDef();
    /**
     * <code>optional int32 zombie_def = 8 [default = 0];</code>
     *
     * <pre>
     ** 防御 
     * </pre>
     */
    int getZombieDef();

    /**
     * <code>optional int32 zombie_hp = 9 [default = 0];</code>
     *
     * <pre>
     ** 血量 
     * </pre>
     */
    boolean hasZombieHp();
    /**
     * <code>optional int32 zombie_hp = 9 [default = 0];</code>
     *
     * <pre>
     ** 血量 
     * </pre>
     */
    int getZombieHp();

    /**
     * <code>optional int32 zombie_num = 10 [default = 0];</code>
     *
     * <pre>
     ** 僵尸数量 
     * </pre>
     */
    boolean hasZombieNum();
    /**
     * <code>optional int32 zombie_num = 10 [default = 0];</code>
     *
     * <pre>
     ** 僵尸数量 
     * </pre>
     */
    int getZombieNum();

    /**
     * <code>optional int32 healthkey = 11 [default = 0];</code>
     *
     * <pre>
     ** 健康 
     * </pre>
     */
    boolean hasHealthkey();
    /**
     * <code>optional int32 healthkey = 11 [default = 0];</code>
     *
     * <pre>
     ** 健康 
     * </pre>
     */
    int getHealthkey();

    /**
     * <code>optional int32 moodkey = 12 [default = 0];</code>
     *
     * <pre>
     ** 心情 
     * </pre>
     */
    boolean hasMoodkey();
    /**
     * <code>optional int32 moodkey = 12 [default = 0];</code>
     *
     * <pre>
     ** 心情 
     * </pre>
     */
    int getMoodkey();

    /**
     * <code>optional int32 dami_bldg = 13 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场 
     * </pre>
     */
    boolean hasDamiBldg();
    /**
     * <code>optional int32 dami_bldg = 13 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场 
     * </pre>
     */
    int getDamiBldg();

    /**
     * <code>optional int32 shucai_bldg = 14 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场 
     * </pre>
     */
    boolean hasShucaiBldg();
    /**
     * <code>optional int32 shucai_bldg = 14 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场 
     * </pre>
     */
    int getShucaiBldg();

    /**
     * <code>optional int32 shuiguo_bldg = 15 [default = 0];</code>
     *
     * <pre>
     ** 水果园 
     * </pre>
     */
    boolean hasShuiguoBldg();
    /**
     * <code>optional int32 shuiguo_bldg = 15 [default = 0];</code>
     *
     * <pre>
     ** 水果园 
     * </pre>
     */
    int getShuiguoBldg();

    /**
     * <code>optional int32 jing_bldg = 16 [default = 0];</code>
     *
     * <pre>
     ** 井 
     * </pre>
     */
    boolean hasJingBldg();
    /**
     * <code>optional int32 jing_bldg = 16 [default = 0];</code>
     *
     * <pre>
     ** 井 
     * </pre>
     */
    int getJingBldg();

    /**
     * <code>optional int32 lushui_bldg = 17 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器 
     * </pre>
     */
    boolean hasLushuiBldg();
    /**
     * <code>optional int32 lushui_bldg = 17 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器 
     * </pre>
     */
    int getLushuiBldg();

    /**
     * <code>optional int32 songshu_bldg = 18 [default = 0];</code>
     *
     * <pre>
     ** 松树林 
     * </pre>
     */
    boolean hasSongshuBldg();
    /**
     * <code>optional int32 songshu_bldg = 18 [default = 0];</code>
     *
     * <pre>
     ** 松树林 
     * </pre>
     */
    int getSongshuBldg();

    /**
     * <code>optional int32 wuxiandian_bldg = 19 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    boolean hasWuxiandianBldg();
    /**
     * <code>optional int32 wuxiandian_bldg = 19 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    int getWuxiandianBldg();

    /**
     * <code>optional int32 leida_bldg = 20 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    boolean hasLeidaBldg();
    /**
     * <code>optional int32 leida_bldg = 20 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    int getLeidaBldg();

    /**
     * <code>optional int32 fengneng_bldg = 21 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    boolean hasFengnengBldg();
    /**
     * <code>optional int32 fengneng_bldg = 21 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    int getFengnengBldg();

    /**
     * <code>optional int32 tax_coeff = 22 [default = 0];</code>
     *
     * <pre>
     ** 交易税率系数 
     * </pre>
     */
    boolean hasTaxCoeff();
    /**
     * <code>optional int32 tax_coeff = 22 [default = 0];</code>
     *
     * <pre>
     ** 交易税率系数 
     * </pre>
     */
    int getTaxCoeff();

    /**
     * <code>optional int32 damikey = 23 [default = 0];</code>
     *
     * <pre>
     ** 大米 
     * </pre>
     */
    boolean hasDamikey();
    /**
     * <code>optional int32 damikey = 23 [default = 0];</code>
     *
     * <pre>
     ** 大米 
     * </pre>
     */
    int getDamikey();

    /**
     * <code>optional int32 shucaikey = 24 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜 
     * </pre>
     */
    boolean hasShucaikey();
    /**
     * <code>optional int32 shucaikey = 24 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜 
     * </pre>
     */
    int getShucaikey();

    /**
     * <code>optional int32 shuiguokey = 25 [default = 0];</code>
     *
     * <pre>
     ** 水果 
     * </pre>
     */
    boolean hasShuiguokey();
    /**
     * <code>optional int32 shuiguokey = 25 [default = 0];</code>
     *
     * <pre>
     ** 水果 
     * </pre>
     */
    int getShuiguokey();

    /**
     * <code>optional int32 huafeikey = 26 [default = 0];</code>
     *
     * <pre>
     ** 化肥 
     * </pre>
     */
    boolean hasHuafeikey();
    /**
     * <code>optional int32 huafeikey = 26 [default = 0];</code>
     *
     * <pre>
     ** 化肥 
     * </pre>
     */
    int getHuafeikey();

    /**
     * <code>optional int32 shuikey = 27 [default = 0];</code>
     *
     * <pre>
     ** 纯净水 
     * </pre>
     */
    boolean hasShuikey();
    /**
     * <code>optional int32 shuikey = 27 [default = 0];</code>
     *
     * <pre>
     ** 纯净水 
     * </pre>
     */
    int getShuikey();

    /**
     * <code>optional int32 songmukey = 28 [default = 0];</code>
     *
     * <pre>
     ** 松木 
     * </pre>
     */
    boolean hasSongmukey();
    /**
     * <code>optional int32 songmukey = 28 [default = 0];</code>
     *
     * <pre>
     ** 松木 
     * </pre>
     */
    int getSongmukey();

    /**
     * <code>optional int32 shuinikey = 29 [default = 0];</code>
     *
     * <pre>
     ** 水泥 
     * </pre>
     */
    boolean hasShuinikey();
    /**
     * <code>optional int32 shuinikey = 29 [default = 0];</code>
     *
     * <pre>
     ** 水泥 
     * </pre>
     */
    int getShuinikey();

    /**
     * <code>optional int32 caokey = 30 [default = 0];</code>
     *
     * <pre>
     ** 草 
     * </pre>
     */
    boolean hasCaokey();
    /**
     * <code>optional int32 caokey = 30 [default = 0];</code>
     *
     * <pre>
     ** 草 
     * </pre>
     */
    int getCaokey();

    /**
     * <code>optional int32 yuanyoukey = 31 [default = 0];</code>
     *
     * <pre>
     ** 原油 
     * </pre>
     */
    boolean hasYuanyoukey();
    /**
     * <code>optional int32 yuanyoukey = 31 [default = 0];</code>
     *
     * <pre>
     ** 原油 
     * </pre>
     */
    int getYuanyoukey();

    /**
     * <code>optional int32 tiekey = 32 [default = 0];</code>
     *
     * <pre>
     ** 铁 
     * </pre>
     */
    boolean hasTiekey();
    /**
     * <code>optional int32 tiekey = 32 [default = 0];</code>
     *
     * <pre>
     ** 铁 
     * </pre>
     */
    int getTiekey();

    /**
     * <code>optional int32 jijiubaokey = 33 [default = 0];</code>
     *
     * <pre>
     ** 急救包 
     * </pre>
     */
    boolean hasJijiubaokey();
    /**
     * <code>optional int32 jijiubaokey = 33 [default = 0];</code>
     *
     * <pre>
     ** 急救包 
     * </pre>
     */
    int getJijiubaokey();

    /**
     * <code>optional int32 rizhikey = 34 [default = 0];</code>
     *
     * <pre>
     ** 庄园日志 
     * </pre>
     */
    boolean hasRizhikey();
    /**
     * <code>optional int32 rizhikey = 34 [default = 0];</code>
     *
     * <pre>
     ** 庄园日志 
     * </pre>
     */
    int getRizhikey();

    /**
     * <code>optional int32 jiqiangtuzhikey = 35 [default = 0];</code>
     *
     * <pre>
     ** 重机枪图纸 
     * </pre>
     */
    boolean hasJiqiangtuzhikey();
    /**
     * <code>optional int32 jiqiangtuzhikey = 35 [default = 0];</code>
     *
     * <pre>
     ** 重机枪图纸 
     * </pre>
     */
    int getJiqiangtuzhikey();

    /**
     * <code>optional int32 jujituzhikey = 36 [default = 0];</code>
     *
     * <pre>
     ** 狙击枪图纸 
     * </pre>
     */
    boolean hasJujituzhikey();
    /**
     * <code>optional int32 jujituzhikey = 36 [default = 0];</code>
     *
     * <pre>
     ** 狙击枪图纸 
     * </pre>
     */
    int getJujituzhikey();

    /**
     * <code>optional int32 jipaotuzhikey = 37 [default = 0];</code>
     *
     * <pre>
     ** 机炮设计图 
     * </pre>
     */
    boolean hasJipaotuzhikey();
    /**
     * <code>optional int32 jipaotuzhikey = 37 [default = 0];</code>
     *
     * <pre>
     ** 机炮设计图 
     * </pre>
     */
    int getJipaotuzhikey();

    /**
     * <code>optional int32 yuanlongpingkey = 38 [default = 0];</code>
     *
     * <pre>
     ** 《袁隆平传》 
     * </pre>
     */
    boolean hasYuanlongpingkey();
    /**
     * <code>optional int32 yuanlongpingkey = 38 [default = 0];</code>
     *
     * <pre>
     ** 《袁隆平传》 
     * </pre>
     */
    int getYuanlongpingkey();

    /**
     * <code>optional int32 huafeigongyekey = 39 [default = 0];</code>
     *
     * <pre>
     ** 《化肥工业概论》 
     * </pre>
     */
    boolean hasHuafeigongyekey();
    /**
     * <code>optional int32 huafeigongyekey = 39 [default = 0];</code>
     *
     * <pre>
     ** 《化肥工业概论》 
     * </pre>
     */
    int getHuafeigongyekey();

    /**
     * <code>optional int32 yangzhukey = 40 [default = 0];</code>
     *
     * <pre>
     ** 《论如何养猪》 
     * </pre>
     */
    boolean hasYangzhukey();
    /**
     * <code>optional int32 yangzhukey = 40 [default = 0];</code>
     *
     * <pre>
     ** 《论如何养猪》 
     * </pre>
     */
    int getYangzhukey();

    /**
     * <code>optional int32 cangchukey = 41 [default = 0];</code>
     *
     * <pre>
     ** 《仓储管理》 
     * </pre>
     */
    boolean hasCangchukey();
    /**
     * <code>optional int32 cangchukey = 41 [default = 0];</code>
     *
     * <pre>
     ** 《仓储管理》 
     * </pre>
     */
    int getCangchukey();

    /**
     * <code>optional int32 tesilakey = 42 [default = 0];</code>
     *
     * <pre>
     ** 《特斯拉传》 
     * </pre>
     */
    boolean hasTesilakey();
    /**
     * <code>optional int32 tesilakey = 42 [default = 0];</code>
     *
     * <pre>
     ** 《特斯拉传》 
     * </pre>
     */
    int getTesilakey();

    /**
     * <code>optional int32 luokefeilekey = 43 [default = 0];</code>
     *
     * <pre>
     ** 《洛克菲勒传》 
     * </pre>
     */
    boolean hasLuokefeilekey();
    /**
     * <code>optional int32 luokefeilekey = 43 [default = 0];</code>
     *
     * <pre>
     ** 《洛克菲勒传》 
     * </pre>
     */
    int getLuokefeilekey();

    /**
     * <code>optional int32 kanaijikey = 44 [default = 0];</code>
     *
     * <pre>
     ** 《卡耐基传》 
     * </pre>
     */
    boolean hasKanaijikey();
    /**
     * <code>optional int32 kanaijikey = 44 [default = 0];</code>
     *
     * <pre>
     ** 《卡耐基传》 
     * </pre>
     */
    int getKanaijikey();

    /**
     * <code>optional int32 lubankey = 45 [default = 0];</code>
     *
     * <pre>
     ** 《鲁班传》 
     * </pre>
     */
    boolean hasLubankey();
    /**
     * <code>optional int32 lubankey = 45 [default = 0];</code>
     *
     * <pre>
     ** 《鲁班传》 
     * </pre>
     */
    int getLubankey();

    /**
     * <code>optional int32 tumukey = 46 [default = 0];</code>
     *
     * <pre>
     ** 《土木工程概论》 
     * </pre>
     */
    boolean hasTumukey();
    /**
     * <code>optional int32 tumukey = 46 [default = 0];</code>
     *
     * <pre>
     ** 《土木工程概论》 
     * </pre>
     */
    int getTumukey();

    /**
     * <code>optional int32 fangdaokey = 47 [default = 0];</code>
     *
     * <pre>
     ** 《防盗门技术》 
     * </pre>
     */
    boolean hasFangdaokey();
    /**
     * <code>optional int32 fangdaokey = 47 [default = 0];</code>
     *
     * <pre>
     ** 《防盗门技术》 
     * </pre>
     */
    int getFangdaokey();

    /**
     * <code>optional int32 makeqinkey = 48 [default = 0];</code>
     *
     * <pre>
     ** 《马克沁传》 
     * </pre>
     */
    boolean hasMakeqinkey();
    /**
     * <code>optional int32 makeqinkey = 48 [default = 0];</code>
     *
     * <pre>
     ** 《马克沁传》 
     * </pre>
     */
    int getMakeqinkey();

    /**
     * <code>optional int32 wodefendoukey = 49 [default = 0];</code>
     *
     * <pre>
     ** 《我的奋斗》 
     * </pre>
     */
    boolean hasWodefendoukey();
    /**
     * <code>optional int32 wodefendoukey = 49 [default = 0];</code>
     *
     * <pre>
     ** 《我的奋斗》 
     * </pre>
     */
    int getWodefendoukey();

    /**
     * <code>optional int32 jiatelinkey = 50 [default = 0];</code>
     *
     * <pre>
     ** 《加特林传》 
     * </pre>
     */
    boolean hasJiatelinkey();
    /**
     * <code>optional int32 jiatelinkey = 50 [default = 0];</code>
     *
     * <pre>
     ** 《加特林传》 
     * </pre>
     */
    int getJiatelinkey();

    /**
     * <code>optional int32 wbaleitekey = 51 [default = 0];</code>
     *
     * <pre>
     ** 《巴雷特的笔记》 
     * </pre>
     */
    boolean hasWbaleitekey();
    /**
     * <code>optional int32 wbaleitekey = 51 [default = 0];</code>
     *
     * <pre>
     ** 《巴雷特的笔记》 
     * </pre>
     */
    int getWbaleitekey();

    /**
     * <code>optional int32 guanrenkey = 52 [default = 0];</code>
     *
     * <pre>
     ** 《官人吃鸡指南》 
     * </pre>
     */
    boolean hasGuanrenkey();
    /**
     * <code>optional int32 guanrenkey = 52 [default = 0];</code>
     *
     * <pre>
     ** 《官人吃鸡指南》 
     * </pre>
     */
    int getGuanrenkey();

    /**
     * <code>optional int32 toukui1key = 53 [default = 0];</code>
     *
     * <pre>
     ** 1级头盔 
     * </pre>
     */
    boolean hasToukui1Key();
    /**
     * <code>optional int32 toukui1key = 53 [default = 0];</code>
     *
     * <pre>
     ** 1级头盔 
     * </pre>
     */
    int getToukui1Key();

    /**
     * <code>optional int32 toukui2key = 54 [default = 0];</code>
     *
     * <pre>
     ** 2级头盔 
     * </pre>
     */
    boolean hasToukui2Key();
    /**
     * <code>optional int32 toukui2key = 54 [default = 0];</code>
     *
     * <pre>
     ** 2级头盔 
     * </pre>
     */
    int getToukui2Key();

    /**
     * <code>optional int32 toukui3key = 55 [default = 0];</code>
     *
     * <pre>
     ** 3级头盔 
     * </pre>
     */
    boolean hasToukui3Key();
    /**
     * <code>optional int32 toukui3key = 55 [default = 0];</code>
     *
     * <pre>
     ** 3级头盔 
     * </pre>
     */
    int getToukui3Key();

    /**
     * <code>optional int32 shouqiang1key = 56 [default = 0];</code>
     *
     * <pre>
     ** 手枪 
     * </pre>
     */
    boolean hasShouqiang1Key();
    /**
     * <code>optional int32 shouqiang1key = 56 [default = 0];</code>
     *
     * <pre>
     ** 手枪 
     * </pre>
     */
    int getShouqiang1Key();

    /**
     * <code>optional int32 buqiang1key = 57 [default = 0];</code>
     *
     * <pre>
     ** 步枪 
     * </pre>
     */
    boolean hasBuqiang1Key();
    /**
     * <code>optional int32 buqiang1key = 57 [default = 0];</code>
     *
     * <pre>
     ** 步枪 
     * </pre>
     */
    int getBuqiang1Key();

    /**
     * <code>optional int32 qingjiqiang1key = 58 [default = 0];</code>
     *
     * <pre>
     ** 轻机枪 
     * </pre>
     */
    boolean hasQingjiqiang1Key();
    /**
     * <code>optional int32 qingjiqiang1key = 58 [default = 0];</code>
     *
     * <pre>
     ** 轻机枪 
     * </pre>
     */
    int getQingjiqiang1Key();

    /**
     * <code>optional int32 fangdanyi1key = 59 [default = 0];</code>
     *
     * <pre>
     ** 1级防弹衣 
     * </pre>
     */
    boolean hasFangdanyi1Key();
    /**
     * <code>optional int32 fangdanyi1key = 59 [default = 0];</code>
     *
     * <pre>
     ** 1级防弹衣 
     * </pre>
     */
    int getFangdanyi1Key();

    /**
     * <code>optional int32 fangdanyi2key = 60 [default = 0];</code>
     *
     * <pre>
     ** 2级防弹衣 
     * </pre>
     */
    boolean hasFangdanyi2Key();
    /**
     * <code>optional int32 fangdanyi2key = 60 [default = 0];</code>
     *
     * <pre>
     ** 2级防弹衣 
     * </pre>
     */
    int getFangdanyi2Key();

    /**
     * <code>optional int32 fangdanyi3key = 61 [default = 0];</code>
     *
     * <pre>
     ** 3级防弹衣 
     * </pre>
     */
    boolean hasFangdanyi3Key();
    /**
     * <code>optional int32 fangdanyi3key = 61 [default = 0];</code>
     *
     * <pre>
     ** 3级防弹衣 
     * </pre>
     */
    int getFangdanyi3Key();

    /**
     * <code>optional int32 kuzi1key = 62 [default = 0];</code>
     *
     * <pre>
     ** 1级作训裤 
     * </pre>
     */
    boolean hasKuzi1Key();
    /**
     * <code>optional int32 kuzi1key = 62 [default = 0];</code>
     *
     * <pre>
     ** 1级作训裤 
     * </pre>
     */
    int getKuzi1Key();

    /**
     * <code>optional int32 kuzi2key = 63 [default = 0];</code>
     *
     * <pre>
     ** 2级作训裤 
     * </pre>
     */
    boolean hasKuzi2Key();
    /**
     * <code>optional int32 kuzi2key = 63 [default = 0];</code>
     *
     * <pre>
     ** 2级作训裤 
     * </pre>
     */
    int getKuzi2Key();

    /**
     * <code>optional int32 kuzi3key = 64 [default = 0];</code>
     *
     * <pre>
     ** 3级作训裤 
     * </pre>
     */
    boolean hasKuzi3Key();
    /**
     * <code>optional int32 kuzi3key = 64 [default = 0];</code>
     *
     * <pre>
     ** 3级作训裤 
     * </pre>
     */
    int getKuzi3Key();

    /**
     * <code>optional int32 xiezi1key = 65 [default = 0];</code>
     *
     * <pre>
     ** 1级越野靴 
     * </pre>
     */
    boolean hasXiezi1Key();
    /**
     * <code>optional int32 xiezi1key = 65 [default = 0];</code>
     *
     * <pre>
     ** 1级越野靴 
     * </pre>
     */
    int getXiezi1Key();

    /**
     * <code>optional int32 xiezi2key = 66 [default = 0];</code>
     *
     * <pre>
     ** 2级越野靴 
     * </pre>
     */
    boolean hasXiezi2Key();
    /**
     * <code>optional int32 xiezi2key = 66 [default = 0];</code>
     *
     * <pre>
     ** 2级越野靴 
     * </pre>
     */
    int getXiezi2Key();

    /**
     * <code>optional int32 xiezi3key = 67 [default = 0];</code>
     *
     * <pre>
     ** 3级越野靴 
     * </pre>
     */
    boolean hasXiezi3Key();
    /**
     * <code>optional int32 xiezi3key = 67 [default = 0];</code>
     *
     * <pre>
     ** 3级越野靴 
     * </pre>
     */
    int getXiezi3Key();

    /**
     * <code>optional int32 kuangquanshuikey = 68 [default = 0];</code>
     *
     * <pre>
     ** 矿物质水 
     * </pre>
     */
    boolean hasKuangquanshuikey();
    /**
     * <code>optional int32 kuangquanshuikey = 68 [default = 0];</code>
     *
     * <pre>
     ** 矿物质水 
     * </pre>
     */
    int getKuangquanshuikey();

    /**
     * <code>optional int32 siliaokey = 69 [default = 0];</code>
     *
     * <pre>
     ** 饲料 
     * </pre>
     */
    boolean hasSiliaokey();
    /**
     * <code>optional int32 siliaokey = 69 [default = 0];</code>
     *
     * <pre>
     ** 饲料 
     * </pre>
     */
    int getSiliaokey();

    /**
     * <code>optional int32 zhuroukey = 70 [default = 0];</code>
     *
     * <pre>
     ** 猪肉 
     * </pre>
     */
    boolean hasZhuroukey();
    /**
     * <code>optional int32 zhuroukey = 70 [default = 0];</code>
     *
     * <pre>
     ** 猪肉 
     * </pre>
     */
    int getZhuroukey();

    /**
     * <code>optional int32 qiyoukey = 71 [default = 0];</code>
     *
     * <pre>
     ** 汽油 
     * </pre>
     */
    boolean hasQiyoukey();
    /**
     * <code>optional int32 qiyoukey = 71 [default = 0];</code>
     *
     * <pre>
     ** 汽油 
     * </pre>
     */
    int getQiyoukey();

    /**
     * <code>optional int32 gangkey = 72 [default = 0];</code>
     *
     * <pre>
     ** 钢 
     * </pre>
     */
    boolean hasGangkey();
    /**
     * <code>optional int32 gangkey = 72 [default = 0];</code>
     *
     * <pre>
     ** 钢 
     * </pre>
     */
    int getGangkey();

    /**
     * <code>optional int32 songmubankey = 73 [default = 0];</code>
     *
     * <pre>
     ** 松木板 
     * </pre>
     */
    boolean hasSongmubankey();
    /**
     * <code>optional int32 songmubankey = 73 [default = 0];</code>
     *
     * <pre>
     ** 松木板 
     * </pre>
     */
    int getSongmubankey();

    /**
     * <code>optional int32 hunningtukey = 74 [default = 0];</code>
     *
     * <pre>
     ** 混凝土 
     * </pre>
     */
    boolean hasHunningtukey();
    /**
     * <code>optional int32 hunningtukey = 74 [default = 0];</code>
     *
     * <pre>
     ** 混凝土 
     * </pre>
     */
    int getHunningtukey();
  }
  /**
   * Protobuf type {@code com.game.framework.resource.data.WORLD_EVENTS}
   */
  public static final class WORLD_EVENTS extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.game.framework.resource.data.WORLD_EVENTS)
      WORLD_EVENTSOrBuilder {
    // Use WORLD_EVENTS.newBuilder() to construct.
    private WORLD_EVENTS(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WORLD_EVENTS(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WORLD_EVENTS defaultInstance;
    public static WORLD_EVENTS getDefaultInstance() {
      return defaultInstance;
    }

    public WORLD_EVENTS getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WORLD_EVENTS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              eventName_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              eventDesc_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              eventDuration_ = input.readInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              eventIcon_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              eventProb_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              zombieAtk_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              zombieDef_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              zombieHp_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              zombieNum_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              healthkey_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              moodkey_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              damiBldg_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              shucaiBldg_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              shuiguoBldg_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              jingBldg_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              lushuiBldg_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              songshuBldg_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              wuxiandianBldg_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              leidaBldg_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              fengnengBldg_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              taxCoeff_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              damikey_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              shucaikey_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              shuiguokey_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              huafeikey_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              shuikey_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              songmukey_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              shuinikey_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              caokey_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              yuanyoukey_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              tiekey_ = input.readInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              jijiubaokey_ = input.readInt32();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              rizhikey_ = input.readInt32();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              jiqiangtuzhikey_ = input.readInt32();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              jujituzhikey_ = input.readInt32();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000010;
              jipaotuzhikey_ = input.readInt32();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000020;
              yuanlongpingkey_ = input.readInt32();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000040;
              huafeigongyekey_ = input.readInt32();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000080;
              yangzhukey_ = input.readInt32();
              break;
            }
            case 328: {
              bitField1_ |= 0x00000100;
              cangchukey_ = input.readInt32();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000200;
              tesilakey_ = input.readInt32();
              break;
            }
            case 344: {
              bitField1_ |= 0x00000400;
              luokefeilekey_ = input.readInt32();
              break;
            }
            case 352: {
              bitField1_ |= 0x00000800;
              kanaijikey_ = input.readInt32();
              break;
            }
            case 360: {
              bitField1_ |= 0x00001000;
              lubankey_ = input.readInt32();
              break;
            }
            case 368: {
              bitField1_ |= 0x00002000;
              tumukey_ = input.readInt32();
              break;
            }
            case 376: {
              bitField1_ |= 0x00004000;
              fangdaokey_ = input.readInt32();
              break;
            }
            case 384: {
              bitField1_ |= 0x00008000;
              makeqinkey_ = input.readInt32();
              break;
            }
            case 392: {
              bitField1_ |= 0x00010000;
              wodefendoukey_ = input.readInt32();
              break;
            }
            case 400: {
              bitField1_ |= 0x00020000;
              jiatelinkey_ = input.readInt32();
              break;
            }
            case 408: {
              bitField1_ |= 0x00040000;
              wbaleitekey_ = input.readInt32();
              break;
            }
            case 416: {
              bitField1_ |= 0x00080000;
              guanrenkey_ = input.readInt32();
              break;
            }
            case 424: {
              bitField1_ |= 0x00100000;
              toukui1Key_ = input.readInt32();
              break;
            }
            case 432: {
              bitField1_ |= 0x00200000;
              toukui2Key_ = input.readInt32();
              break;
            }
            case 440: {
              bitField1_ |= 0x00400000;
              toukui3Key_ = input.readInt32();
              break;
            }
            case 448: {
              bitField1_ |= 0x00800000;
              shouqiang1Key_ = input.readInt32();
              break;
            }
            case 456: {
              bitField1_ |= 0x01000000;
              buqiang1Key_ = input.readInt32();
              break;
            }
            case 464: {
              bitField1_ |= 0x02000000;
              qingjiqiang1Key_ = input.readInt32();
              break;
            }
            case 472: {
              bitField1_ |= 0x04000000;
              fangdanyi1Key_ = input.readInt32();
              break;
            }
            case 480: {
              bitField1_ |= 0x08000000;
              fangdanyi2Key_ = input.readInt32();
              break;
            }
            case 488: {
              bitField1_ |= 0x10000000;
              fangdanyi3Key_ = input.readInt32();
              break;
            }
            case 496: {
              bitField1_ |= 0x20000000;
              kuzi1Key_ = input.readInt32();
              break;
            }
            case 504: {
              bitField1_ |= 0x40000000;
              kuzi2Key_ = input.readInt32();
              break;
            }
            case 512: {
              bitField1_ |= 0x80000000;
              kuzi3Key_ = input.readInt32();
              break;
            }
            case 520: {
              bitField2_ |= 0x00000001;
              xiezi1Key_ = input.readInt32();
              break;
            }
            case 528: {
              bitField2_ |= 0x00000002;
              xiezi2Key_ = input.readInt32();
              break;
            }
            case 536: {
              bitField2_ |= 0x00000004;
              xiezi3Key_ = input.readInt32();
              break;
            }
            case 544: {
              bitField2_ |= 0x00000008;
              kuangquanshuikey_ = input.readInt32();
              break;
            }
            case 552: {
              bitField2_ |= 0x00000010;
              siliaokey_ = input.readInt32();
              break;
            }
            case 560: {
              bitField2_ |= 0x00000020;
              zhuroukey_ = input.readInt32();
              break;
            }
            case 568: {
              bitField2_ |= 0x00000040;
              qiyoukey_ = input.readInt32();
              break;
            }
            case 576: {
              bitField2_ |= 0x00000080;
              gangkey_ = input.readInt32();
              break;
            }
            case 584: {
              bitField2_ |= 0x00000100;
              songmubankey_ = input.readInt32();
              break;
            }
            case 592: {
              bitField2_ |= 0x00000200;
              hunningtukey_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.class, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder.class);
    }

    public static com.google.protobuf.Parser<WORLD_EVENTS> PARSER =
        new com.google.protobuf.AbstractParser<WORLD_EVENTS>() {
      public WORLD_EVENTS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WORLD_EVENTS(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WORLD_EVENTS> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1 [default = 0];</code>
     *
     * <pre>
     ** id 
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1 [default = 0];</code>
     *
     * <pre>
     ** id 
     * </pre>
     */
    public int getId() {
      return id_;
    }

    public static final int EVENT_NAME_FIELD_NUMBER = 2;
    private java.lang.Object eventName_;
    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    public boolean hasEventName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    public java.lang.String getEventName() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEventNameBytes() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_DESC_FIELD_NUMBER = 3;
    private java.lang.Object eventDesc_;
    /**
     * <code>optional string event_desc = 3 [default = ""];</code>
     *
     * <pre>
     ** 事件描述 
     * </pre>
     */
    public boolean hasEventDesc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string event_desc = 3 [default = ""];</code>
     *
     * <pre>
     ** 事件描述 
     * </pre>
     */
    public java.lang.String getEventDesc() {
      java.lang.Object ref = eventDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventDesc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_desc = 3 [default = ""];</code>
     *
     * <pre>
     ** 事件描述 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEventDescBytes() {
      java.lang.Object ref = eventDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_DURATION_FIELD_NUMBER = 4;
    private int eventDuration_;
    /**
     * <code>optional int32 event_duration = 4 [default = 0];</code>
     *
     * <pre>
     ** 持续时间（min） 
     * </pre>
     */
    public boolean hasEventDuration() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 event_duration = 4 [default = 0];</code>
     *
     * <pre>
     ** 持续时间（min） 
     * </pre>
     */
    public int getEventDuration() {
      return eventDuration_;
    }

    public static final int EVENT_ICON_FIELD_NUMBER = 5;
    private java.lang.Object eventIcon_;
    /**
     * <code>optional string event_icon = 5 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    public boolean hasEventIcon() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string event_icon = 5 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    public java.lang.String getEventIcon() {
      java.lang.Object ref = eventIcon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventIcon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_icon = 5 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEventIconBytes() {
      java.lang.Object ref = eventIcon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventIcon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_PROB_FIELD_NUMBER = 6;
    private int eventProb_;
    /**
     * <code>optional int32 event_prob = 6 [default = 0];</code>
     *
     * <pre>
     ** 每分钟概率*100000 
     * </pre>
     */
    public boolean hasEventProb() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 event_prob = 6 [default = 0];</code>
     *
     * <pre>
     ** 每分钟概率*100000 
     * </pre>
     */
    public int getEventProb() {
      return eventProb_;
    }

    public static final int ZOMBIE_ATK_FIELD_NUMBER = 7;
    private int zombieAtk_;
    /**
     * <code>optional int32 zombie_atk = 7 [default = 0];</code>
     *
     * <pre>
     ** 攻击 
     * </pre>
     */
    public boolean hasZombieAtk() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 zombie_atk = 7 [default = 0];</code>
     *
     * <pre>
     ** 攻击 
     * </pre>
     */
    public int getZombieAtk() {
      return zombieAtk_;
    }

    public static final int ZOMBIE_DEF_FIELD_NUMBER = 8;
    private int zombieDef_;
    /**
     * <code>optional int32 zombie_def = 8 [default = 0];</code>
     *
     * <pre>
     ** 防御 
     * </pre>
     */
    public boolean hasZombieDef() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 zombie_def = 8 [default = 0];</code>
     *
     * <pre>
     ** 防御 
     * </pre>
     */
    public int getZombieDef() {
      return zombieDef_;
    }

    public static final int ZOMBIE_HP_FIELD_NUMBER = 9;
    private int zombieHp_;
    /**
     * <code>optional int32 zombie_hp = 9 [default = 0];</code>
     *
     * <pre>
     ** 血量 
     * </pre>
     */
    public boolean hasZombieHp() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 zombie_hp = 9 [default = 0];</code>
     *
     * <pre>
     ** 血量 
     * </pre>
     */
    public int getZombieHp() {
      return zombieHp_;
    }

    public static final int ZOMBIE_NUM_FIELD_NUMBER = 10;
    private int zombieNum_;
    /**
     * <code>optional int32 zombie_num = 10 [default = 0];</code>
     *
     * <pre>
     ** 僵尸数量 
     * </pre>
     */
    public boolean hasZombieNum() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 zombie_num = 10 [default = 0];</code>
     *
     * <pre>
     ** 僵尸数量 
     * </pre>
     */
    public int getZombieNum() {
      return zombieNum_;
    }

    public static final int HEALTHKEY_FIELD_NUMBER = 11;
    private int healthkey_;
    /**
     * <code>optional int32 healthkey = 11 [default = 0];</code>
     *
     * <pre>
     ** 健康 
     * </pre>
     */
    public boolean hasHealthkey() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 healthkey = 11 [default = 0];</code>
     *
     * <pre>
     ** 健康 
     * </pre>
     */
    public int getHealthkey() {
      return healthkey_;
    }

    public static final int MOODKEY_FIELD_NUMBER = 12;
    private int moodkey_;
    /**
     * <code>optional int32 moodkey = 12 [default = 0];</code>
     *
     * <pre>
     ** 心情 
     * </pre>
     */
    public boolean hasMoodkey() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 moodkey = 12 [default = 0];</code>
     *
     * <pre>
     ** 心情 
     * </pre>
     */
    public int getMoodkey() {
      return moodkey_;
    }

    public static final int DAMI_BLDG_FIELD_NUMBER = 13;
    private int damiBldg_;
    /**
     * <code>optional int32 dami_bldg = 13 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场 
     * </pre>
     */
    public boolean hasDamiBldg() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 dami_bldg = 13 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场 
     * </pre>
     */
    public int getDamiBldg() {
      return damiBldg_;
    }

    public static final int SHUCAI_BLDG_FIELD_NUMBER = 14;
    private int shucaiBldg_;
    /**
     * <code>optional int32 shucai_bldg = 14 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场 
     * </pre>
     */
    public boolean hasShucaiBldg() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 shucai_bldg = 14 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场 
     * </pre>
     */
    public int getShucaiBldg() {
      return shucaiBldg_;
    }

    public static final int SHUIGUO_BLDG_FIELD_NUMBER = 15;
    private int shuiguoBldg_;
    /**
     * <code>optional int32 shuiguo_bldg = 15 [default = 0];</code>
     *
     * <pre>
     ** 水果园 
     * </pre>
     */
    public boolean hasShuiguoBldg() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 shuiguo_bldg = 15 [default = 0];</code>
     *
     * <pre>
     ** 水果园 
     * </pre>
     */
    public int getShuiguoBldg() {
      return shuiguoBldg_;
    }

    public static final int JING_BLDG_FIELD_NUMBER = 16;
    private int jingBldg_;
    /**
     * <code>optional int32 jing_bldg = 16 [default = 0];</code>
     *
     * <pre>
     ** 井 
     * </pre>
     */
    public boolean hasJingBldg() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 jing_bldg = 16 [default = 0];</code>
     *
     * <pre>
     ** 井 
     * </pre>
     */
    public int getJingBldg() {
      return jingBldg_;
    }

    public static final int LUSHUI_BLDG_FIELD_NUMBER = 17;
    private int lushuiBldg_;
    /**
     * <code>optional int32 lushui_bldg = 17 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器 
     * </pre>
     */
    public boolean hasLushuiBldg() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 lushui_bldg = 17 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器 
     * </pre>
     */
    public int getLushuiBldg() {
      return lushuiBldg_;
    }

    public static final int SONGSHU_BLDG_FIELD_NUMBER = 18;
    private int songshuBldg_;
    /**
     * <code>optional int32 songshu_bldg = 18 [default = 0];</code>
     *
     * <pre>
     ** 松树林 
     * </pre>
     */
    public boolean hasSongshuBldg() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 songshu_bldg = 18 [default = 0];</code>
     *
     * <pre>
     ** 松树林 
     * </pre>
     */
    public int getSongshuBldg() {
      return songshuBldg_;
    }

    public static final int WUXIANDIAN_BLDG_FIELD_NUMBER = 19;
    private int wuxiandianBldg_;
    /**
     * <code>optional int32 wuxiandian_bldg = 19 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    public boolean hasWuxiandianBldg() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 wuxiandian_bldg = 19 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    public int getWuxiandianBldg() {
      return wuxiandianBldg_;
    }

    public static final int LEIDA_BLDG_FIELD_NUMBER = 20;
    private int leidaBldg_;
    /**
     * <code>optional int32 leida_bldg = 20 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    public boolean hasLeidaBldg() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 leida_bldg = 20 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    public int getLeidaBldg() {
      return leidaBldg_;
    }

    public static final int FENGNENG_BLDG_FIELD_NUMBER = 21;
    private int fengnengBldg_;
    /**
     * <code>optional int32 fengneng_bldg = 21 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    public boolean hasFengnengBldg() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 fengneng_bldg = 21 [default = 0];</code>
     *
     * <pre>
     **  
     * </pre>
     */
    public int getFengnengBldg() {
      return fengnengBldg_;
    }

    public static final int TAX_COEFF_FIELD_NUMBER = 22;
    private int taxCoeff_;
    /**
     * <code>optional int32 tax_coeff = 22 [default = 0];</code>
     *
     * <pre>
     ** 交易税率系数 
     * </pre>
     */
    public boolean hasTaxCoeff() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 tax_coeff = 22 [default = 0];</code>
     *
     * <pre>
     ** 交易税率系数 
     * </pre>
     */
    public int getTaxCoeff() {
      return taxCoeff_;
    }

    public static final int DAMIKEY_FIELD_NUMBER = 23;
    private int damikey_;
    /**
     * <code>optional int32 damikey = 23 [default = 0];</code>
     *
     * <pre>
     ** 大米 
     * </pre>
     */
    public boolean hasDamikey() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 damikey = 23 [default = 0];</code>
     *
     * <pre>
     ** 大米 
     * </pre>
     */
    public int getDamikey() {
      return damikey_;
    }

    public static final int SHUCAIKEY_FIELD_NUMBER = 24;
    private int shucaikey_;
    /**
     * <code>optional int32 shucaikey = 24 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜 
     * </pre>
     */
    public boolean hasShucaikey() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 shucaikey = 24 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜 
     * </pre>
     */
    public int getShucaikey() {
      return shucaikey_;
    }

    public static final int SHUIGUOKEY_FIELD_NUMBER = 25;
    private int shuiguokey_;
    /**
     * <code>optional int32 shuiguokey = 25 [default = 0];</code>
     *
     * <pre>
     ** 水果 
     * </pre>
     */
    public boolean hasShuiguokey() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 shuiguokey = 25 [default = 0];</code>
     *
     * <pre>
     ** 水果 
     * </pre>
     */
    public int getShuiguokey() {
      return shuiguokey_;
    }

    public static final int HUAFEIKEY_FIELD_NUMBER = 26;
    private int huafeikey_;
    /**
     * <code>optional int32 huafeikey = 26 [default = 0];</code>
     *
     * <pre>
     ** 化肥 
     * </pre>
     */
    public boolean hasHuafeikey() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 huafeikey = 26 [default = 0];</code>
     *
     * <pre>
     ** 化肥 
     * </pre>
     */
    public int getHuafeikey() {
      return huafeikey_;
    }

    public static final int SHUIKEY_FIELD_NUMBER = 27;
    private int shuikey_;
    /**
     * <code>optional int32 shuikey = 27 [default = 0];</code>
     *
     * <pre>
     ** 纯净水 
     * </pre>
     */
    public boolean hasShuikey() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 shuikey = 27 [default = 0];</code>
     *
     * <pre>
     ** 纯净水 
     * </pre>
     */
    public int getShuikey() {
      return shuikey_;
    }

    public static final int SONGMUKEY_FIELD_NUMBER = 28;
    private int songmukey_;
    /**
     * <code>optional int32 songmukey = 28 [default = 0];</code>
     *
     * <pre>
     ** 松木 
     * </pre>
     */
    public boolean hasSongmukey() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 songmukey = 28 [default = 0];</code>
     *
     * <pre>
     ** 松木 
     * </pre>
     */
    public int getSongmukey() {
      return songmukey_;
    }

    public static final int SHUINIKEY_FIELD_NUMBER = 29;
    private int shuinikey_;
    /**
     * <code>optional int32 shuinikey = 29 [default = 0];</code>
     *
     * <pre>
     ** 水泥 
     * </pre>
     */
    public boolean hasShuinikey() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 shuinikey = 29 [default = 0];</code>
     *
     * <pre>
     ** 水泥 
     * </pre>
     */
    public int getShuinikey() {
      return shuinikey_;
    }

    public static final int CAOKEY_FIELD_NUMBER = 30;
    private int caokey_;
    /**
     * <code>optional int32 caokey = 30 [default = 0];</code>
     *
     * <pre>
     ** 草 
     * </pre>
     */
    public boolean hasCaokey() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 caokey = 30 [default = 0];</code>
     *
     * <pre>
     ** 草 
     * </pre>
     */
    public int getCaokey() {
      return caokey_;
    }

    public static final int YUANYOUKEY_FIELD_NUMBER = 31;
    private int yuanyoukey_;
    /**
     * <code>optional int32 yuanyoukey = 31 [default = 0];</code>
     *
     * <pre>
     ** 原油 
     * </pre>
     */
    public boolean hasYuanyoukey() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 yuanyoukey = 31 [default = 0];</code>
     *
     * <pre>
     ** 原油 
     * </pre>
     */
    public int getYuanyoukey() {
      return yuanyoukey_;
    }

    public static final int TIEKEY_FIELD_NUMBER = 32;
    private int tiekey_;
    /**
     * <code>optional int32 tiekey = 32 [default = 0];</code>
     *
     * <pre>
     ** 铁 
     * </pre>
     */
    public boolean hasTiekey() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 tiekey = 32 [default = 0];</code>
     *
     * <pre>
     ** 铁 
     * </pre>
     */
    public int getTiekey() {
      return tiekey_;
    }

    public static final int JIJIUBAOKEY_FIELD_NUMBER = 33;
    private int jijiubaokey_;
    /**
     * <code>optional int32 jijiubaokey = 33 [default = 0];</code>
     *
     * <pre>
     ** 急救包 
     * </pre>
     */
    public boolean hasJijiubaokey() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 jijiubaokey = 33 [default = 0];</code>
     *
     * <pre>
     ** 急救包 
     * </pre>
     */
    public int getJijiubaokey() {
      return jijiubaokey_;
    }

    public static final int RIZHIKEY_FIELD_NUMBER = 34;
    private int rizhikey_;
    /**
     * <code>optional int32 rizhikey = 34 [default = 0];</code>
     *
     * <pre>
     ** 庄园日志 
     * </pre>
     */
    public boolean hasRizhikey() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 rizhikey = 34 [default = 0];</code>
     *
     * <pre>
     ** 庄园日志 
     * </pre>
     */
    public int getRizhikey() {
      return rizhikey_;
    }

    public static final int JIQIANGTUZHIKEY_FIELD_NUMBER = 35;
    private int jiqiangtuzhikey_;
    /**
     * <code>optional int32 jiqiangtuzhikey = 35 [default = 0];</code>
     *
     * <pre>
     ** 重机枪图纸 
     * </pre>
     */
    public boolean hasJiqiangtuzhikey() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 jiqiangtuzhikey = 35 [default = 0];</code>
     *
     * <pre>
     ** 重机枪图纸 
     * </pre>
     */
    public int getJiqiangtuzhikey() {
      return jiqiangtuzhikey_;
    }

    public static final int JUJITUZHIKEY_FIELD_NUMBER = 36;
    private int jujituzhikey_;
    /**
     * <code>optional int32 jujituzhikey = 36 [default = 0];</code>
     *
     * <pre>
     ** 狙击枪图纸 
     * </pre>
     */
    public boolean hasJujituzhikey() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 jujituzhikey = 36 [default = 0];</code>
     *
     * <pre>
     ** 狙击枪图纸 
     * </pre>
     */
    public int getJujituzhikey() {
      return jujituzhikey_;
    }

    public static final int JIPAOTUZHIKEY_FIELD_NUMBER = 37;
    private int jipaotuzhikey_;
    /**
     * <code>optional int32 jipaotuzhikey = 37 [default = 0];</code>
     *
     * <pre>
     ** 机炮设计图 
     * </pre>
     */
    public boolean hasJipaotuzhikey() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 jipaotuzhikey = 37 [default = 0];</code>
     *
     * <pre>
     ** 机炮设计图 
     * </pre>
     */
    public int getJipaotuzhikey() {
      return jipaotuzhikey_;
    }

    public static final int YUANLONGPINGKEY_FIELD_NUMBER = 38;
    private int yuanlongpingkey_;
    /**
     * <code>optional int32 yuanlongpingkey = 38 [default = 0];</code>
     *
     * <pre>
     ** 《袁隆平传》 
     * </pre>
     */
    public boolean hasYuanlongpingkey() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 yuanlongpingkey = 38 [default = 0];</code>
     *
     * <pre>
     ** 《袁隆平传》 
     * </pre>
     */
    public int getYuanlongpingkey() {
      return yuanlongpingkey_;
    }

    public static final int HUAFEIGONGYEKEY_FIELD_NUMBER = 39;
    private int huafeigongyekey_;
    /**
     * <code>optional int32 huafeigongyekey = 39 [default = 0];</code>
     *
     * <pre>
     ** 《化肥工业概论》 
     * </pre>
     */
    public boolean hasHuafeigongyekey() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 huafeigongyekey = 39 [default = 0];</code>
     *
     * <pre>
     ** 《化肥工业概论》 
     * </pre>
     */
    public int getHuafeigongyekey() {
      return huafeigongyekey_;
    }

    public static final int YANGZHUKEY_FIELD_NUMBER = 40;
    private int yangzhukey_;
    /**
     * <code>optional int32 yangzhukey = 40 [default = 0];</code>
     *
     * <pre>
     ** 《论如何养猪》 
     * </pre>
     */
    public boolean hasYangzhukey() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 yangzhukey = 40 [default = 0];</code>
     *
     * <pre>
     ** 《论如何养猪》 
     * </pre>
     */
    public int getYangzhukey() {
      return yangzhukey_;
    }

    public static final int CANGCHUKEY_FIELD_NUMBER = 41;
    private int cangchukey_;
    /**
     * <code>optional int32 cangchukey = 41 [default = 0];</code>
     *
     * <pre>
     ** 《仓储管理》 
     * </pre>
     */
    public boolean hasCangchukey() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 cangchukey = 41 [default = 0];</code>
     *
     * <pre>
     ** 《仓储管理》 
     * </pre>
     */
    public int getCangchukey() {
      return cangchukey_;
    }

    public static final int TESILAKEY_FIELD_NUMBER = 42;
    private int tesilakey_;
    /**
     * <code>optional int32 tesilakey = 42 [default = 0];</code>
     *
     * <pre>
     ** 《特斯拉传》 
     * </pre>
     */
    public boolean hasTesilakey() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 tesilakey = 42 [default = 0];</code>
     *
     * <pre>
     ** 《特斯拉传》 
     * </pre>
     */
    public int getTesilakey() {
      return tesilakey_;
    }

    public static final int LUOKEFEILEKEY_FIELD_NUMBER = 43;
    private int luokefeilekey_;
    /**
     * <code>optional int32 luokefeilekey = 43 [default = 0];</code>
     *
     * <pre>
     ** 《洛克菲勒传》 
     * </pre>
     */
    public boolean hasLuokefeilekey() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 luokefeilekey = 43 [default = 0];</code>
     *
     * <pre>
     ** 《洛克菲勒传》 
     * </pre>
     */
    public int getLuokefeilekey() {
      return luokefeilekey_;
    }

    public static final int KANAIJIKEY_FIELD_NUMBER = 44;
    private int kanaijikey_;
    /**
     * <code>optional int32 kanaijikey = 44 [default = 0];</code>
     *
     * <pre>
     ** 《卡耐基传》 
     * </pre>
     */
    public boolean hasKanaijikey() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 kanaijikey = 44 [default = 0];</code>
     *
     * <pre>
     ** 《卡耐基传》 
     * </pre>
     */
    public int getKanaijikey() {
      return kanaijikey_;
    }

    public static final int LUBANKEY_FIELD_NUMBER = 45;
    private int lubankey_;
    /**
     * <code>optional int32 lubankey = 45 [default = 0];</code>
     *
     * <pre>
     ** 《鲁班传》 
     * </pre>
     */
    public boolean hasLubankey() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 lubankey = 45 [default = 0];</code>
     *
     * <pre>
     ** 《鲁班传》 
     * </pre>
     */
    public int getLubankey() {
      return lubankey_;
    }

    public static final int TUMUKEY_FIELD_NUMBER = 46;
    private int tumukey_;
    /**
     * <code>optional int32 tumukey = 46 [default = 0];</code>
     *
     * <pre>
     ** 《土木工程概论》 
     * </pre>
     */
    public boolean hasTumukey() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 tumukey = 46 [default = 0];</code>
     *
     * <pre>
     ** 《土木工程概论》 
     * </pre>
     */
    public int getTumukey() {
      return tumukey_;
    }

    public static final int FANGDAOKEY_FIELD_NUMBER = 47;
    private int fangdaokey_;
    /**
     * <code>optional int32 fangdaokey = 47 [default = 0];</code>
     *
     * <pre>
     ** 《防盗门技术》 
     * </pre>
     */
    public boolean hasFangdaokey() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 fangdaokey = 47 [default = 0];</code>
     *
     * <pre>
     ** 《防盗门技术》 
     * </pre>
     */
    public int getFangdaokey() {
      return fangdaokey_;
    }

    public static final int MAKEQINKEY_FIELD_NUMBER = 48;
    private int makeqinkey_;
    /**
     * <code>optional int32 makeqinkey = 48 [default = 0];</code>
     *
     * <pre>
     ** 《马克沁传》 
     * </pre>
     */
    public boolean hasMakeqinkey() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 makeqinkey = 48 [default = 0];</code>
     *
     * <pre>
     ** 《马克沁传》 
     * </pre>
     */
    public int getMakeqinkey() {
      return makeqinkey_;
    }

    public static final int WODEFENDOUKEY_FIELD_NUMBER = 49;
    private int wodefendoukey_;
    /**
     * <code>optional int32 wodefendoukey = 49 [default = 0];</code>
     *
     * <pre>
     ** 《我的奋斗》 
     * </pre>
     */
    public boolean hasWodefendoukey() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 wodefendoukey = 49 [default = 0];</code>
     *
     * <pre>
     ** 《我的奋斗》 
     * </pre>
     */
    public int getWodefendoukey() {
      return wodefendoukey_;
    }

    public static final int JIATELINKEY_FIELD_NUMBER = 50;
    private int jiatelinkey_;
    /**
     * <code>optional int32 jiatelinkey = 50 [default = 0];</code>
     *
     * <pre>
     ** 《加特林传》 
     * </pre>
     */
    public boolean hasJiatelinkey() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 jiatelinkey = 50 [default = 0];</code>
     *
     * <pre>
     ** 《加特林传》 
     * </pre>
     */
    public int getJiatelinkey() {
      return jiatelinkey_;
    }

    public static final int WBALEITEKEY_FIELD_NUMBER = 51;
    private int wbaleitekey_;
    /**
     * <code>optional int32 wbaleitekey = 51 [default = 0];</code>
     *
     * <pre>
     ** 《巴雷特的笔记》 
     * </pre>
     */
    public boolean hasWbaleitekey() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 wbaleitekey = 51 [default = 0];</code>
     *
     * <pre>
     ** 《巴雷特的笔记》 
     * </pre>
     */
    public int getWbaleitekey() {
      return wbaleitekey_;
    }

    public static final int GUANRENKEY_FIELD_NUMBER = 52;
    private int guanrenkey_;
    /**
     * <code>optional int32 guanrenkey = 52 [default = 0];</code>
     *
     * <pre>
     ** 《官人吃鸡指南》 
     * </pre>
     */
    public boolean hasGuanrenkey() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 guanrenkey = 52 [default = 0];</code>
     *
     * <pre>
     ** 《官人吃鸡指南》 
     * </pre>
     */
    public int getGuanrenkey() {
      return guanrenkey_;
    }

    public static final int TOUKUI1KEY_FIELD_NUMBER = 53;
    private int toukui1Key_;
    /**
     * <code>optional int32 toukui1key = 53 [default = 0];</code>
     *
     * <pre>
     ** 1级头盔 
     * </pre>
     */
    public boolean hasToukui1Key() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 toukui1key = 53 [default = 0];</code>
     *
     * <pre>
     ** 1级头盔 
     * </pre>
     */
    public int getToukui1Key() {
      return toukui1Key_;
    }

    public static final int TOUKUI2KEY_FIELD_NUMBER = 54;
    private int toukui2Key_;
    /**
     * <code>optional int32 toukui2key = 54 [default = 0];</code>
     *
     * <pre>
     ** 2级头盔 
     * </pre>
     */
    public boolean hasToukui2Key() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 toukui2key = 54 [default = 0];</code>
     *
     * <pre>
     ** 2级头盔 
     * </pre>
     */
    public int getToukui2Key() {
      return toukui2Key_;
    }

    public static final int TOUKUI3KEY_FIELD_NUMBER = 55;
    private int toukui3Key_;
    /**
     * <code>optional int32 toukui3key = 55 [default = 0];</code>
     *
     * <pre>
     ** 3级头盔 
     * </pre>
     */
    public boolean hasToukui3Key() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 toukui3key = 55 [default = 0];</code>
     *
     * <pre>
     ** 3级头盔 
     * </pre>
     */
    public int getToukui3Key() {
      return toukui3Key_;
    }

    public static final int SHOUQIANG1KEY_FIELD_NUMBER = 56;
    private int shouqiang1Key_;
    /**
     * <code>optional int32 shouqiang1key = 56 [default = 0];</code>
     *
     * <pre>
     ** 手枪 
     * </pre>
     */
    public boolean hasShouqiang1Key() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 shouqiang1key = 56 [default = 0];</code>
     *
     * <pre>
     ** 手枪 
     * </pre>
     */
    public int getShouqiang1Key() {
      return shouqiang1Key_;
    }

    public static final int BUQIANG1KEY_FIELD_NUMBER = 57;
    private int buqiang1Key_;
    /**
     * <code>optional int32 buqiang1key = 57 [default = 0];</code>
     *
     * <pre>
     ** 步枪 
     * </pre>
     */
    public boolean hasBuqiang1Key() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 buqiang1key = 57 [default = 0];</code>
     *
     * <pre>
     ** 步枪 
     * </pre>
     */
    public int getBuqiang1Key() {
      return buqiang1Key_;
    }

    public static final int QINGJIQIANG1KEY_FIELD_NUMBER = 58;
    private int qingjiqiang1Key_;
    /**
     * <code>optional int32 qingjiqiang1key = 58 [default = 0];</code>
     *
     * <pre>
     ** 轻机枪 
     * </pre>
     */
    public boolean hasQingjiqiang1Key() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 qingjiqiang1key = 58 [default = 0];</code>
     *
     * <pre>
     ** 轻机枪 
     * </pre>
     */
    public int getQingjiqiang1Key() {
      return qingjiqiang1Key_;
    }

    public static final int FANGDANYI1KEY_FIELD_NUMBER = 59;
    private int fangdanyi1Key_;
    /**
     * <code>optional int32 fangdanyi1key = 59 [default = 0];</code>
     *
     * <pre>
     ** 1级防弹衣 
     * </pre>
     */
    public boolean hasFangdanyi1Key() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 fangdanyi1key = 59 [default = 0];</code>
     *
     * <pre>
     ** 1级防弹衣 
     * </pre>
     */
    public int getFangdanyi1Key() {
      return fangdanyi1Key_;
    }

    public static final int FANGDANYI2KEY_FIELD_NUMBER = 60;
    private int fangdanyi2Key_;
    /**
     * <code>optional int32 fangdanyi2key = 60 [default = 0];</code>
     *
     * <pre>
     ** 2级防弹衣 
     * </pre>
     */
    public boolean hasFangdanyi2Key() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 fangdanyi2key = 60 [default = 0];</code>
     *
     * <pre>
     ** 2级防弹衣 
     * </pre>
     */
    public int getFangdanyi2Key() {
      return fangdanyi2Key_;
    }

    public static final int FANGDANYI3KEY_FIELD_NUMBER = 61;
    private int fangdanyi3Key_;
    /**
     * <code>optional int32 fangdanyi3key = 61 [default = 0];</code>
     *
     * <pre>
     ** 3级防弹衣 
     * </pre>
     */
    public boolean hasFangdanyi3Key() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 fangdanyi3key = 61 [default = 0];</code>
     *
     * <pre>
     ** 3级防弹衣 
     * </pre>
     */
    public int getFangdanyi3Key() {
      return fangdanyi3Key_;
    }

    public static final int KUZI1KEY_FIELD_NUMBER = 62;
    private int kuzi1Key_;
    /**
     * <code>optional int32 kuzi1key = 62 [default = 0];</code>
     *
     * <pre>
     ** 1级作训裤 
     * </pre>
     */
    public boolean hasKuzi1Key() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 kuzi1key = 62 [default = 0];</code>
     *
     * <pre>
     ** 1级作训裤 
     * </pre>
     */
    public int getKuzi1Key() {
      return kuzi1Key_;
    }

    public static final int KUZI2KEY_FIELD_NUMBER = 63;
    private int kuzi2Key_;
    /**
     * <code>optional int32 kuzi2key = 63 [default = 0];</code>
     *
     * <pre>
     ** 2级作训裤 
     * </pre>
     */
    public boolean hasKuzi2Key() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 kuzi2key = 63 [default = 0];</code>
     *
     * <pre>
     ** 2级作训裤 
     * </pre>
     */
    public int getKuzi2Key() {
      return kuzi2Key_;
    }

    public static final int KUZI3KEY_FIELD_NUMBER = 64;
    private int kuzi3Key_;
    /**
     * <code>optional int32 kuzi3key = 64 [default = 0];</code>
     *
     * <pre>
     ** 3级作训裤 
     * </pre>
     */
    public boolean hasKuzi3Key() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 kuzi3key = 64 [default = 0];</code>
     *
     * <pre>
     ** 3级作训裤 
     * </pre>
     */
    public int getKuzi3Key() {
      return kuzi3Key_;
    }

    public static final int XIEZI1KEY_FIELD_NUMBER = 65;
    private int xiezi1Key_;
    /**
     * <code>optional int32 xiezi1key = 65 [default = 0];</code>
     *
     * <pre>
     ** 1级越野靴 
     * </pre>
     */
    public boolean hasXiezi1Key() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 xiezi1key = 65 [default = 0];</code>
     *
     * <pre>
     ** 1级越野靴 
     * </pre>
     */
    public int getXiezi1Key() {
      return xiezi1Key_;
    }

    public static final int XIEZI2KEY_FIELD_NUMBER = 66;
    private int xiezi2Key_;
    /**
     * <code>optional int32 xiezi2key = 66 [default = 0];</code>
     *
     * <pre>
     ** 2级越野靴 
     * </pre>
     */
    public boolean hasXiezi2Key() {
      return ((bitField2_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 xiezi2key = 66 [default = 0];</code>
     *
     * <pre>
     ** 2级越野靴 
     * </pre>
     */
    public int getXiezi2Key() {
      return xiezi2Key_;
    }

    public static final int XIEZI3KEY_FIELD_NUMBER = 67;
    private int xiezi3Key_;
    /**
     * <code>optional int32 xiezi3key = 67 [default = 0];</code>
     *
     * <pre>
     ** 3级越野靴 
     * </pre>
     */
    public boolean hasXiezi3Key() {
      return ((bitField2_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 xiezi3key = 67 [default = 0];</code>
     *
     * <pre>
     ** 3级越野靴 
     * </pre>
     */
    public int getXiezi3Key() {
      return xiezi3Key_;
    }

    public static final int KUANGQUANSHUIKEY_FIELD_NUMBER = 68;
    private int kuangquanshuikey_;
    /**
     * <code>optional int32 kuangquanshuikey = 68 [default = 0];</code>
     *
     * <pre>
     ** 矿物质水 
     * </pre>
     */
    public boolean hasKuangquanshuikey() {
      return ((bitField2_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 kuangquanshuikey = 68 [default = 0];</code>
     *
     * <pre>
     ** 矿物质水 
     * </pre>
     */
    public int getKuangquanshuikey() {
      return kuangquanshuikey_;
    }

    public static final int SILIAOKEY_FIELD_NUMBER = 69;
    private int siliaokey_;
    /**
     * <code>optional int32 siliaokey = 69 [default = 0];</code>
     *
     * <pre>
     ** 饲料 
     * </pre>
     */
    public boolean hasSiliaokey() {
      return ((bitField2_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 siliaokey = 69 [default = 0];</code>
     *
     * <pre>
     ** 饲料 
     * </pre>
     */
    public int getSiliaokey() {
      return siliaokey_;
    }

    public static final int ZHUROUKEY_FIELD_NUMBER = 70;
    private int zhuroukey_;
    /**
     * <code>optional int32 zhuroukey = 70 [default = 0];</code>
     *
     * <pre>
     ** 猪肉 
     * </pre>
     */
    public boolean hasZhuroukey() {
      return ((bitField2_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 zhuroukey = 70 [default = 0];</code>
     *
     * <pre>
     ** 猪肉 
     * </pre>
     */
    public int getZhuroukey() {
      return zhuroukey_;
    }

    public static final int QIYOUKEY_FIELD_NUMBER = 71;
    private int qiyoukey_;
    /**
     * <code>optional int32 qiyoukey = 71 [default = 0];</code>
     *
     * <pre>
     ** 汽油 
     * </pre>
     */
    public boolean hasQiyoukey() {
      return ((bitField2_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 qiyoukey = 71 [default = 0];</code>
     *
     * <pre>
     ** 汽油 
     * </pre>
     */
    public int getQiyoukey() {
      return qiyoukey_;
    }

    public static final int GANGKEY_FIELD_NUMBER = 72;
    private int gangkey_;
    /**
     * <code>optional int32 gangkey = 72 [default = 0];</code>
     *
     * <pre>
     ** 钢 
     * </pre>
     */
    public boolean hasGangkey() {
      return ((bitField2_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 gangkey = 72 [default = 0];</code>
     *
     * <pre>
     ** 钢 
     * </pre>
     */
    public int getGangkey() {
      return gangkey_;
    }

    public static final int SONGMUBANKEY_FIELD_NUMBER = 73;
    private int songmubankey_;
    /**
     * <code>optional int32 songmubankey = 73 [default = 0];</code>
     *
     * <pre>
     ** 松木板 
     * </pre>
     */
    public boolean hasSongmubankey() {
      return ((bitField2_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 songmubankey = 73 [default = 0];</code>
     *
     * <pre>
     ** 松木板 
     * </pre>
     */
    public int getSongmubankey() {
      return songmubankey_;
    }

    public static final int HUNNINGTUKEY_FIELD_NUMBER = 74;
    private int hunningtukey_;
    /**
     * <code>optional int32 hunningtukey = 74 [default = 0];</code>
     *
     * <pre>
     ** 混凝土 
     * </pre>
     */
    public boolean hasHunningtukey() {
      return ((bitField2_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 hunningtukey = 74 [default = 0];</code>
     *
     * <pre>
     ** 混凝土 
     * </pre>
     */
    public int getHunningtukey() {
      return hunningtukey_;
    }

    private void initFields() {
      id_ = 0;
      eventName_ = "";
      eventDesc_ = "";
      eventDuration_ = 0;
      eventIcon_ = "";
      eventProb_ = 0;
      zombieAtk_ = 0;
      zombieDef_ = 0;
      zombieHp_ = 0;
      zombieNum_ = 0;
      healthkey_ = 0;
      moodkey_ = 0;
      damiBldg_ = 0;
      shucaiBldg_ = 0;
      shuiguoBldg_ = 0;
      jingBldg_ = 0;
      lushuiBldg_ = 0;
      songshuBldg_ = 0;
      wuxiandianBldg_ = 0;
      leidaBldg_ = 0;
      fengnengBldg_ = 0;
      taxCoeff_ = 0;
      damikey_ = 0;
      shucaikey_ = 0;
      shuiguokey_ = 0;
      huafeikey_ = 0;
      shuikey_ = 0;
      songmukey_ = 0;
      shuinikey_ = 0;
      caokey_ = 0;
      yuanyoukey_ = 0;
      tiekey_ = 0;
      jijiubaokey_ = 0;
      rizhikey_ = 0;
      jiqiangtuzhikey_ = 0;
      jujituzhikey_ = 0;
      jipaotuzhikey_ = 0;
      yuanlongpingkey_ = 0;
      huafeigongyekey_ = 0;
      yangzhukey_ = 0;
      cangchukey_ = 0;
      tesilakey_ = 0;
      luokefeilekey_ = 0;
      kanaijikey_ = 0;
      lubankey_ = 0;
      tumukey_ = 0;
      fangdaokey_ = 0;
      makeqinkey_ = 0;
      wodefendoukey_ = 0;
      jiatelinkey_ = 0;
      wbaleitekey_ = 0;
      guanrenkey_ = 0;
      toukui1Key_ = 0;
      toukui2Key_ = 0;
      toukui3Key_ = 0;
      shouqiang1Key_ = 0;
      buqiang1Key_ = 0;
      qingjiqiang1Key_ = 0;
      fangdanyi1Key_ = 0;
      fangdanyi2Key_ = 0;
      fangdanyi3Key_ = 0;
      kuzi1Key_ = 0;
      kuzi2Key_ = 0;
      kuzi3Key_ = 0;
      xiezi1Key_ = 0;
      xiezi2Key_ = 0;
      xiezi3Key_ = 0;
      kuangquanshuikey_ = 0;
      siliaokey_ = 0;
      zhuroukey_ = 0;
      qiyoukey_ = 0;
      gangkey_ = 0;
      songmubankey_ = 0;
      hunningtukey_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEventNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getEventDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, eventDuration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getEventIconBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, eventProb_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, zombieAtk_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, zombieDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, zombieHp_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, zombieNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, healthkey_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, moodkey_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, damiBldg_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, shucaiBldg_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, shuiguoBldg_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, jingBldg_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, lushuiBldg_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, songshuBldg_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, wuxiandianBldg_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, leidaBldg_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, fengnengBldg_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, taxCoeff_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, damikey_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(24, shucaikey_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, shuiguokey_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(26, huafeikey_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(27, shuikey_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(28, songmukey_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(29, shuinikey_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(30, caokey_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(31, yuanyoukey_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(32, tiekey_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(33, jijiubaokey_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(34, rizhikey_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(35, jiqiangtuzhikey_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(36, jujituzhikey_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(37, jipaotuzhikey_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(38, yuanlongpingkey_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(39, huafeigongyekey_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(40, yangzhukey_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(41, cangchukey_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(42, tesilakey_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(43, luokefeilekey_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(44, kanaijikey_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(45, lubankey_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(46, tumukey_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(47, fangdaokey_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(48, makeqinkey_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(49, wodefendoukey_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(50, jiatelinkey_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(51, wbaleitekey_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(52, guanrenkey_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(53, toukui1Key_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(54, toukui2Key_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(55, toukui3Key_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(56, shouqiang1Key_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(57, buqiang1Key_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(58, qingjiqiang1Key_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(59, fangdanyi1Key_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(60, fangdanyi2Key_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(61, fangdanyi3Key_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(62, kuzi1Key_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(63, kuzi2Key_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(64, kuzi3Key_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(65, xiezi1Key_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(66, xiezi2Key_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(67, xiezi3Key_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(68, kuangquanshuikey_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(69, siliaokey_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(70, zhuroukey_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(71, qiyoukey_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(72, gangkey_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(73, songmubankey_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(74, hunningtukey_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEventNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getEventDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, eventDuration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getEventIconBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, eventProb_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, zombieAtk_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, zombieDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, zombieHp_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, zombieNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, healthkey_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, moodkey_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, damiBldg_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, shucaiBldg_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, shuiguoBldg_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, jingBldg_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, lushuiBldg_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, songshuBldg_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, wuxiandianBldg_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, leidaBldg_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, fengnengBldg_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, taxCoeff_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, damikey_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, shucaikey_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, shuiguokey_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, huafeikey_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, shuikey_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, songmukey_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, shuinikey_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, caokey_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, yuanyoukey_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, tiekey_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, jijiubaokey_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, rizhikey_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(35, jiqiangtuzhikey_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, jujituzhikey_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, jipaotuzhikey_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, yuanlongpingkey_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, huafeigongyekey_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(40, yangzhukey_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(41, cangchukey_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(42, tesilakey_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(43, luokefeilekey_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(44, kanaijikey_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(45, lubankey_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, tumukey_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(47, fangdaokey_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, makeqinkey_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(49, wodefendoukey_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(50, jiatelinkey_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(51, wbaleitekey_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(52, guanrenkey_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(53, toukui1Key_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(54, toukui2Key_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(55, toukui3Key_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(56, shouqiang1Key_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(57, buqiang1Key_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(58, qingjiqiang1Key_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(59, fangdanyi1Key_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(60, fangdanyi2Key_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(61, fangdanyi3Key_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(62, kuzi1Key_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(63, kuzi2Key_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(64, kuzi3Key_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(65, xiezi1Key_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(66, xiezi2Key_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(67, xiezi3Key_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(68, kuangquanshuikey_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(69, siliaokey_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(70, zhuroukey_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(71, qiyoukey_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(72, gangkey_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(73, songmubankey_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(74, hunningtukey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.game.framework.resource.data.WORLD_EVENTS}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.framework.resource.data.WORLD_EVENTS)
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.class, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder.class);
      }

      // Construct using com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        eventDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        eventDuration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        eventIcon_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        eventProb_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        zombieAtk_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        zombieDef_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        zombieHp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        zombieNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        healthkey_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        moodkey_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        damiBldg_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        shucaiBldg_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        shuiguoBldg_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        jingBldg_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        lushuiBldg_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        songshuBldg_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        wuxiandianBldg_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        leidaBldg_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        fengnengBldg_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        taxCoeff_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        damikey_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        shucaikey_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        shuiguokey_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        huafeikey_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        shuikey_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        songmukey_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        shuinikey_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        caokey_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        yuanyoukey_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        tiekey_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        jijiubaokey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        rizhikey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        jiqiangtuzhikey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        jujituzhikey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        jipaotuzhikey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        yuanlongpingkey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        huafeigongyekey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        yangzhukey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        cangchukey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000100);
        tesilakey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        luokefeilekey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000400);
        kanaijikey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000800);
        lubankey_ = 0;
        bitField1_ = (bitField1_ & ~0x00001000);
        tumukey_ = 0;
        bitField1_ = (bitField1_ & ~0x00002000);
        fangdaokey_ = 0;
        bitField1_ = (bitField1_ & ~0x00004000);
        makeqinkey_ = 0;
        bitField1_ = (bitField1_ & ~0x00008000);
        wodefendoukey_ = 0;
        bitField1_ = (bitField1_ & ~0x00010000);
        jiatelinkey_ = 0;
        bitField1_ = (bitField1_ & ~0x00020000);
        wbaleitekey_ = 0;
        bitField1_ = (bitField1_ & ~0x00040000);
        guanrenkey_ = 0;
        bitField1_ = (bitField1_ & ~0x00080000);
        toukui1Key_ = 0;
        bitField1_ = (bitField1_ & ~0x00100000);
        toukui2Key_ = 0;
        bitField1_ = (bitField1_ & ~0x00200000);
        toukui3Key_ = 0;
        bitField1_ = (bitField1_ & ~0x00400000);
        shouqiang1Key_ = 0;
        bitField1_ = (bitField1_ & ~0x00800000);
        buqiang1Key_ = 0;
        bitField1_ = (bitField1_ & ~0x01000000);
        qingjiqiang1Key_ = 0;
        bitField1_ = (bitField1_ & ~0x02000000);
        fangdanyi1Key_ = 0;
        bitField1_ = (bitField1_ & ~0x04000000);
        fangdanyi2Key_ = 0;
        bitField1_ = (bitField1_ & ~0x08000000);
        fangdanyi3Key_ = 0;
        bitField1_ = (bitField1_ & ~0x10000000);
        kuzi1Key_ = 0;
        bitField1_ = (bitField1_ & ~0x20000000);
        kuzi2Key_ = 0;
        bitField1_ = (bitField1_ & ~0x40000000);
        kuzi3Key_ = 0;
        bitField1_ = (bitField1_ & ~0x80000000);
        xiezi1Key_ = 0;
        bitField2_ = (bitField2_ & ~0x00000001);
        xiezi2Key_ = 0;
        bitField2_ = (bitField2_ & ~0x00000002);
        xiezi3Key_ = 0;
        bitField2_ = (bitField2_ & ~0x00000004);
        kuangquanshuikey_ = 0;
        bitField2_ = (bitField2_ & ~0x00000008);
        siliaokey_ = 0;
        bitField2_ = (bitField2_ & ~0x00000010);
        zhuroukey_ = 0;
        bitField2_ = (bitField2_ & ~0x00000020);
        qiyoukey_ = 0;
        bitField2_ = (bitField2_ & ~0x00000040);
        gangkey_ = 0;
        bitField2_ = (bitField2_ & ~0x00000080);
        songmubankey_ = 0;
        bitField2_ = (bitField2_ & ~0x00000100);
        hunningtukey_ = 0;
        bitField2_ = (bitField2_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor;
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS getDefaultInstanceForType() {
        return com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.getDefaultInstance();
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS build() {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS buildPartial() {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS result = new com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        int to_bitField2_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventName_ = eventName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.eventDesc_ = eventDesc_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.eventDuration_ = eventDuration_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.eventIcon_ = eventIcon_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.eventProb_ = eventProb_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.zombieAtk_ = zombieAtk_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.zombieDef_ = zombieDef_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.zombieHp_ = zombieHp_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.zombieNum_ = zombieNum_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.healthkey_ = healthkey_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.moodkey_ = moodkey_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.damiBldg_ = damiBldg_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.shucaiBldg_ = shucaiBldg_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.shuiguoBldg_ = shuiguoBldg_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.jingBldg_ = jingBldg_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.lushuiBldg_ = lushuiBldg_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.songshuBldg_ = songshuBldg_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.wuxiandianBldg_ = wuxiandianBldg_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.leidaBldg_ = leidaBldg_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.fengnengBldg_ = fengnengBldg_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.taxCoeff_ = taxCoeff_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.damikey_ = damikey_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.shucaikey_ = shucaikey_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.shuiguokey_ = shuiguokey_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.huafeikey_ = huafeikey_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.shuikey_ = shuikey_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.songmukey_ = songmukey_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.shuinikey_ = shuinikey_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.caokey_ = caokey_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.yuanyoukey_ = yuanyoukey_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.tiekey_ = tiekey_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.jijiubaokey_ = jijiubaokey_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.rizhikey_ = rizhikey_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.jiqiangtuzhikey_ = jiqiangtuzhikey_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.jujituzhikey_ = jujituzhikey_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.jipaotuzhikey_ = jipaotuzhikey_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.yuanlongpingkey_ = yuanlongpingkey_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.huafeigongyekey_ = huafeigongyekey_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.yangzhukey_ = yangzhukey_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.cangchukey_ = cangchukey_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        result.tesilakey_ = tesilakey_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        result.luokefeilekey_ = luokefeilekey_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000800;
        }
        result.kanaijikey_ = kanaijikey_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.lubankey_ = lubankey_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.tumukey_ = tumukey_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.fangdaokey_ = fangdaokey_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.makeqinkey_ = makeqinkey_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.wodefendoukey_ = wodefendoukey_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00020000;
        }
        result.jiatelinkey_ = jiatelinkey_;
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.wbaleitekey_ = wbaleitekey_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.guanrenkey_ = guanrenkey_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00100000;
        }
        result.toukui1Key_ = toukui1Key_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00200000;
        }
        result.toukui2Key_ = toukui2Key_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00400000;
        }
        result.toukui3Key_ = toukui3Key_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00800000;
        }
        result.shouqiang1Key_ = shouqiang1Key_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x01000000;
        }
        result.buqiang1Key_ = buqiang1Key_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x02000000;
        }
        result.qingjiqiang1Key_ = qingjiqiang1Key_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x04000000;
        }
        result.fangdanyi1Key_ = fangdanyi1Key_;
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x08000000;
        }
        result.fangdanyi2Key_ = fangdanyi2Key_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x10000000;
        }
        result.fangdanyi3Key_ = fangdanyi3Key_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x20000000;
        }
        result.kuzi1Key_ = kuzi1Key_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x40000000;
        }
        result.kuzi2Key_ = kuzi2Key_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x80000000;
        }
        result.kuzi3Key_ = kuzi3Key_;
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField2_ |= 0x00000001;
        }
        result.xiezi1Key_ = xiezi1Key_;
        if (((from_bitField2_ & 0x00000002) == 0x00000002)) {
          to_bitField2_ |= 0x00000002;
        }
        result.xiezi2Key_ = xiezi2Key_;
        if (((from_bitField2_ & 0x00000004) == 0x00000004)) {
          to_bitField2_ |= 0x00000004;
        }
        result.xiezi3Key_ = xiezi3Key_;
        if (((from_bitField2_ & 0x00000008) == 0x00000008)) {
          to_bitField2_ |= 0x00000008;
        }
        result.kuangquanshuikey_ = kuangquanshuikey_;
        if (((from_bitField2_ & 0x00000010) == 0x00000010)) {
          to_bitField2_ |= 0x00000010;
        }
        result.siliaokey_ = siliaokey_;
        if (((from_bitField2_ & 0x00000020) == 0x00000020)) {
          to_bitField2_ |= 0x00000020;
        }
        result.zhuroukey_ = zhuroukey_;
        if (((from_bitField2_ & 0x00000040) == 0x00000040)) {
          to_bitField2_ |= 0x00000040;
        }
        result.qiyoukey_ = qiyoukey_;
        if (((from_bitField2_ & 0x00000080) == 0x00000080)) {
          to_bitField2_ |= 0x00000080;
        }
        result.gangkey_ = gangkey_;
        if (((from_bitField2_ & 0x00000100) == 0x00000100)) {
          to_bitField2_ |= 0x00000100;
        }
        result.songmubankey_ = songmubankey_;
        if (((from_bitField2_ & 0x00000200) == 0x00000200)) {
          to_bitField2_ |= 0x00000200;
        }
        result.hunningtukey_ = hunningtukey_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.bitField2_ = to_bitField2_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS) {
          return mergeFrom((com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS other) {
        if (other == com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasEventName()) {
          bitField0_ |= 0x00000002;
          eventName_ = other.eventName_;
          onChanged();
        }
        if (other.hasEventDesc()) {
          bitField0_ |= 0x00000004;
          eventDesc_ = other.eventDesc_;
          onChanged();
        }
        if (other.hasEventDuration()) {
          setEventDuration(other.getEventDuration());
        }
        if (other.hasEventIcon()) {
          bitField0_ |= 0x00000010;
          eventIcon_ = other.eventIcon_;
          onChanged();
        }
        if (other.hasEventProb()) {
          setEventProb(other.getEventProb());
        }
        if (other.hasZombieAtk()) {
          setZombieAtk(other.getZombieAtk());
        }
        if (other.hasZombieDef()) {
          setZombieDef(other.getZombieDef());
        }
        if (other.hasZombieHp()) {
          setZombieHp(other.getZombieHp());
        }
        if (other.hasZombieNum()) {
          setZombieNum(other.getZombieNum());
        }
        if (other.hasHealthkey()) {
          setHealthkey(other.getHealthkey());
        }
        if (other.hasMoodkey()) {
          setMoodkey(other.getMoodkey());
        }
        if (other.hasDamiBldg()) {
          setDamiBldg(other.getDamiBldg());
        }
        if (other.hasShucaiBldg()) {
          setShucaiBldg(other.getShucaiBldg());
        }
        if (other.hasShuiguoBldg()) {
          setShuiguoBldg(other.getShuiguoBldg());
        }
        if (other.hasJingBldg()) {
          setJingBldg(other.getJingBldg());
        }
        if (other.hasLushuiBldg()) {
          setLushuiBldg(other.getLushuiBldg());
        }
        if (other.hasSongshuBldg()) {
          setSongshuBldg(other.getSongshuBldg());
        }
        if (other.hasWuxiandianBldg()) {
          setWuxiandianBldg(other.getWuxiandianBldg());
        }
        if (other.hasLeidaBldg()) {
          setLeidaBldg(other.getLeidaBldg());
        }
        if (other.hasFengnengBldg()) {
          setFengnengBldg(other.getFengnengBldg());
        }
        if (other.hasTaxCoeff()) {
          setTaxCoeff(other.getTaxCoeff());
        }
        if (other.hasDamikey()) {
          setDamikey(other.getDamikey());
        }
        if (other.hasShucaikey()) {
          setShucaikey(other.getShucaikey());
        }
        if (other.hasShuiguokey()) {
          setShuiguokey(other.getShuiguokey());
        }
        if (other.hasHuafeikey()) {
          setHuafeikey(other.getHuafeikey());
        }
        if (other.hasShuikey()) {
          setShuikey(other.getShuikey());
        }
        if (other.hasSongmukey()) {
          setSongmukey(other.getSongmukey());
        }
        if (other.hasShuinikey()) {
          setShuinikey(other.getShuinikey());
        }
        if (other.hasCaokey()) {
          setCaokey(other.getCaokey());
        }
        if (other.hasYuanyoukey()) {
          setYuanyoukey(other.getYuanyoukey());
        }
        if (other.hasTiekey()) {
          setTiekey(other.getTiekey());
        }
        if (other.hasJijiubaokey()) {
          setJijiubaokey(other.getJijiubaokey());
        }
        if (other.hasRizhikey()) {
          setRizhikey(other.getRizhikey());
        }
        if (other.hasJiqiangtuzhikey()) {
          setJiqiangtuzhikey(other.getJiqiangtuzhikey());
        }
        if (other.hasJujituzhikey()) {
          setJujituzhikey(other.getJujituzhikey());
        }
        if (other.hasJipaotuzhikey()) {
          setJipaotuzhikey(other.getJipaotuzhikey());
        }
        if (other.hasYuanlongpingkey()) {
          setYuanlongpingkey(other.getYuanlongpingkey());
        }
        if (other.hasHuafeigongyekey()) {
          setHuafeigongyekey(other.getHuafeigongyekey());
        }
        if (other.hasYangzhukey()) {
          setYangzhukey(other.getYangzhukey());
        }
        if (other.hasCangchukey()) {
          setCangchukey(other.getCangchukey());
        }
        if (other.hasTesilakey()) {
          setTesilakey(other.getTesilakey());
        }
        if (other.hasLuokefeilekey()) {
          setLuokefeilekey(other.getLuokefeilekey());
        }
        if (other.hasKanaijikey()) {
          setKanaijikey(other.getKanaijikey());
        }
        if (other.hasLubankey()) {
          setLubankey(other.getLubankey());
        }
        if (other.hasTumukey()) {
          setTumukey(other.getTumukey());
        }
        if (other.hasFangdaokey()) {
          setFangdaokey(other.getFangdaokey());
        }
        if (other.hasMakeqinkey()) {
          setMakeqinkey(other.getMakeqinkey());
        }
        if (other.hasWodefendoukey()) {
          setWodefendoukey(other.getWodefendoukey());
        }
        if (other.hasJiatelinkey()) {
          setJiatelinkey(other.getJiatelinkey());
        }
        if (other.hasWbaleitekey()) {
          setWbaleitekey(other.getWbaleitekey());
        }
        if (other.hasGuanrenkey()) {
          setGuanrenkey(other.getGuanrenkey());
        }
        if (other.hasToukui1Key()) {
          setToukui1Key(other.getToukui1Key());
        }
        if (other.hasToukui2Key()) {
          setToukui2Key(other.getToukui2Key());
        }
        if (other.hasToukui3Key()) {
          setToukui3Key(other.getToukui3Key());
        }
        if (other.hasShouqiang1Key()) {
          setShouqiang1Key(other.getShouqiang1Key());
        }
        if (other.hasBuqiang1Key()) {
          setBuqiang1Key(other.getBuqiang1Key());
        }
        if (other.hasQingjiqiang1Key()) {
          setQingjiqiang1Key(other.getQingjiqiang1Key());
        }
        if (other.hasFangdanyi1Key()) {
          setFangdanyi1Key(other.getFangdanyi1Key());
        }
        if (other.hasFangdanyi2Key()) {
          setFangdanyi2Key(other.getFangdanyi2Key());
        }
        if (other.hasFangdanyi3Key()) {
          setFangdanyi3Key(other.getFangdanyi3Key());
        }
        if (other.hasKuzi1Key()) {
          setKuzi1Key(other.getKuzi1Key());
        }
        if (other.hasKuzi2Key()) {
          setKuzi2Key(other.getKuzi2Key());
        }
        if (other.hasKuzi3Key()) {
          setKuzi3Key(other.getKuzi3Key());
        }
        if (other.hasXiezi1Key()) {
          setXiezi1Key(other.getXiezi1Key());
        }
        if (other.hasXiezi2Key()) {
          setXiezi2Key(other.getXiezi2Key());
        }
        if (other.hasXiezi3Key()) {
          setXiezi3Key(other.getXiezi3Key());
        }
        if (other.hasKuangquanshuikey()) {
          setKuangquanshuikey(other.getKuangquanshuikey());
        }
        if (other.hasSiliaokey()) {
          setSiliaokey(other.getSiliaokey());
        }
        if (other.hasZhuroukey()) {
          setZhuroukey(other.getZhuroukey());
        }
        if (other.hasQiyoukey()) {
          setQiyoukey(other.getQiyoukey());
        }
        if (other.hasGangkey()) {
          setGangkey(other.getGangkey());
        }
        if (other.hasSongmubankey()) {
          setSongmubankey(other.getSongmubankey());
        }
        if (other.hasHunningtukey()) {
          setHunningtukey(other.getHunningtukey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;

      private int id_ ;
      /**
       * <code>required int32 id = 1 [default = 0];</code>
       *
       * <pre>
       ** id 
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1 [default = 0];</code>
       *
       * <pre>
       ** id 
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1 [default = 0];</code>
       *
       * <pre>
       ** id 
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1 [default = 0];</code>
       *
       * <pre>
       ** id 
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object eventName_ = "";
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public boolean hasEventName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public java.lang.String getEventName() {
        java.lang.Object ref = eventName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEventNameBytes() {
        java.lang.Object ref = eventName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public Builder setEventName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        eventName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public Builder clearEventName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventName_ = getDefaultInstance().getEventName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public Builder setEventNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        eventName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object eventDesc_ = "";
      /**
       * <code>optional string event_desc = 3 [default = ""];</code>
       *
       * <pre>
       ** 事件描述 
       * </pre>
       */
      public boolean hasEventDesc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string event_desc = 3 [default = ""];</code>
       *
       * <pre>
       ** 事件描述 
       * </pre>
       */
      public java.lang.String getEventDesc() {
        java.lang.Object ref = eventDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventDesc_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_desc = 3 [default = ""];</code>
       *
       * <pre>
       ** 事件描述 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEventDescBytes() {
        java.lang.Object ref = eventDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_desc = 3 [default = ""];</code>
       *
       * <pre>
       ** 事件描述 
       * </pre>
       */
      public Builder setEventDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        eventDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_desc = 3 [default = ""];</code>
       *
       * <pre>
       ** 事件描述 
       * </pre>
       */
      public Builder clearEventDesc() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventDesc_ = getDefaultInstance().getEventDesc();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_desc = 3 [default = ""];</code>
       *
       * <pre>
       ** 事件描述 
       * </pre>
       */
      public Builder setEventDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        eventDesc_ = value;
        onChanged();
        return this;
      }

      private int eventDuration_ ;
      /**
       * <code>optional int32 event_duration = 4 [default = 0];</code>
       *
       * <pre>
       ** 持续时间（min） 
       * </pre>
       */
      public boolean hasEventDuration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 event_duration = 4 [default = 0];</code>
       *
       * <pre>
       ** 持续时间（min） 
       * </pre>
       */
      public int getEventDuration() {
        return eventDuration_;
      }
      /**
       * <code>optional int32 event_duration = 4 [default = 0];</code>
       *
       * <pre>
       ** 持续时间（min） 
       * </pre>
       */
      public Builder setEventDuration(int value) {
        bitField0_ |= 0x00000008;
        eventDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_duration = 4 [default = 0];</code>
       *
       * <pre>
       ** 持续时间（min） 
       * </pre>
       */
      public Builder clearEventDuration() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventDuration_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object eventIcon_ = "";
      /**
       * <code>optional string event_icon = 5 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public boolean hasEventIcon() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string event_icon = 5 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public java.lang.String getEventIcon() {
        java.lang.Object ref = eventIcon_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventIcon_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_icon = 5 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEventIconBytes() {
        java.lang.Object ref = eventIcon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventIcon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_icon = 5 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public Builder setEventIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        eventIcon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_icon = 5 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public Builder clearEventIcon() {
        bitField0_ = (bitField0_ & ~0x00000010);
        eventIcon_ = getDefaultInstance().getEventIcon();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_icon = 5 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public Builder setEventIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        eventIcon_ = value;
        onChanged();
        return this;
      }

      private int eventProb_ ;
      /**
       * <code>optional int32 event_prob = 6 [default = 0];</code>
       *
       * <pre>
       ** 每分钟概率*100000 
       * </pre>
       */
      public boolean hasEventProb() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 event_prob = 6 [default = 0];</code>
       *
       * <pre>
       ** 每分钟概率*100000 
       * </pre>
       */
      public int getEventProb() {
        return eventProb_;
      }
      /**
       * <code>optional int32 event_prob = 6 [default = 0];</code>
       *
       * <pre>
       ** 每分钟概率*100000 
       * </pre>
       */
      public Builder setEventProb(int value) {
        bitField0_ |= 0x00000020;
        eventProb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_prob = 6 [default = 0];</code>
       *
       * <pre>
       ** 每分钟概率*100000 
       * </pre>
       */
      public Builder clearEventProb() {
        bitField0_ = (bitField0_ & ~0x00000020);
        eventProb_ = 0;
        onChanged();
        return this;
      }

      private int zombieAtk_ ;
      /**
       * <code>optional int32 zombie_atk = 7 [default = 0];</code>
       *
       * <pre>
       ** 攻击 
       * </pre>
       */
      public boolean hasZombieAtk() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 zombie_atk = 7 [default = 0];</code>
       *
       * <pre>
       ** 攻击 
       * </pre>
       */
      public int getZombieAtk() {
        return zombieAtk_;
      }
      /**
       * <code>optional int32 zombie_atk = 7 [default = 0];</code>
       *
       * <pre>
       ** 攻击 
       * </pre>
       */
      public Builder setZombieAtk(int value) {
        bitField0_ |= 0x00000040;
        zombieAtk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zombie_atk = 7 [default = 0];</code>
       *
       * <pre>
       ** 攻击 
       * </pre>
       */
      public Builder clearZombieAtk() {
        bitField0_ = (bitField0_ & ~0x00000040);
        zombieAtk_ = 0;
        onChanged();
        return this;
      }

      private int zombieDef_ ;
      /**
       * <code>optional int32 zombie_def = 8 [default = 0];</code>
       *
       * <pre>
       ** 防御 
       * </pre>
       */
      public boolean hasZombieDef() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 zombie_def = 8 [default = 0];</code>
       *
       * <pre>
       ** 防御 
       * </pre>
       */
      public int getZombieDef() {
        return zombieDef_;
      }
      /**
       * <code>optional int32 zombie_def = 8 [default = 0];</code>
       *
       * <pre>
       ** 防御 
       * </pre>
       */
      public Builder setZombieDef(int value) {
        bitField0_ |= 0x00000080;
        zombieDef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zombie_def = 8 [default = 0];</code>
       *
       * <pre>
       ** 防御 
       * </pre>
       */
      public Builder clearZombieDef() {
        bitField0_ = (bitField0_ & ~0x00000080);
        zombieDef_ = 0;
        onChanged();
        return this;
      }

      private int zombieHp_ ;
      /**
       * <code>optional int32 zombie_hp = 9 [default = 0];</code>
       *
       * <pre>
       ** 血量 
       * </pre>
       */
      public boolean hasZombieHp() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 zombie_hp = 9 [default = 0];</code>
       *
       * <pre>
       ** 血量 
       * </pre>
       */
      public int getZombieHp() {
        return zombieHp_;
      }
      /**
       * <code>optional int32 zombie_hp = 9 [default = 0];</code>
       *
       * <pre>
       ** 血量 
       * </pre>
       */
      public Builder setZombieHp(int value) {
        bitField0_ |= 0x00000100;
        zombieHp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zombie_hp = 9 [default = 0];</code>
       *
       * <pre>
       ** 血量 
       * </pre>
       */
      public Builder clearZombieHp() {
        bitField0_ = (bitField0_ & ~0x00000100);
        zombieHp_ = 0;
        onChanged();
        return this;
      }

      private int zombieNum_ ;
      /**
       * <code>optional int32 zombie_num = 10 [default = 0];</code>
       *
       * <pre>
       ** 僵尸数量 
       * </pre>
       */
      public boolean hasZombieNum() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 zombie_num = 10 [default = 0];</code>
       *
       * <pre>
       ** 僵尸数量 
       * </pre>
       */
      public int getZombieNum() {
        return zombieNum_;
      }
      /**
       * <code>optional int32 zombie_num = 10 [default = 0];</code>
       *
       * <pre>
       ** 僵尸数量 
       * </pre>
       */
      public Builder setZombieNum(int value) {
        bitField0_ |= 0x00000200;
        zombieNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zombie_num = 10 [default = 0];</code>
       *
       * <pre>
       ** 僵尸数量 
       * </pre>
       */
      public Builder clearZombieNum() {
        bitField0_ = (bitField0_ & ~0x00000200);
        zombieNum_ = 0;
        onChanged();
        return this;
      }

      private int healthkey_ ;
      /**
       * <code>optional int32 healthkey = 11 [default = 0];</code>
       *
       * <pre>
       ** 健康 
       * </pre>
       */
      public boolean hasHealthkey() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 healthkey = 11 [default = 0];</code>
       *
       * <pre>
       ** 健康 
       * </pre>
       */
      public int getHealthkey() {
        return healthkey_;
      }
      /**
       * <code>optional int32 healthkey = 11 [default = 0];</code>
       *
       * <pre>
       ** 健康 
       * </pre>
       */
      public Builder setHealthkey(int value) {
        bitField0_ |= 0x00000400;
        healthkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 healthkey = 11 [default = 0];</code>
       *
       * <pre>
       ** 健康 
       * </pre>
       */
      public Builder clearHealthkey() {
        bitField0_ = (bitField0_ & ~0x00000400);
        healthkey_ = 0;
        onChanged();
        return this;
      }

      private int moodkey_ ;
      /**
       * <code>optional int32 moodkey = 12 [default = 0];</code>
       *
       * <pre>
       ** 心情 
       * </pre>
       */
      public boolean hasMoodkey() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 moodkey = 12 [default = 0];</code>
       *
       * <pre>
       ** 心情 
       * </pre>
       */
      public int getMoodkey() {
        return moodkey_;
      }
      /**
       * <code>optional int32 moodkey = 12 [default = 0];</code>
       *
       * <pre>
       ** 心情 
       * </pre>
       */
      public Builder setMoodkey(int value) {
        bitField0_ |= 0x00000800;
        moodkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 moodkey = 12 [default = 0];</code>
       *
       * <pre>
       ** 心情 
       * </pre>
       */
      public Builder clearMoodkey() {
        bitField0_ = (bitField0_ & ~0x00000800);
        moodkey_ = 0;
        onChanged();
        return this;
      }

      private int damiBldg_ ;
      /**
       * <code>optional int32 dami_bldg = 13 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场 
       * </pre>
       */
      public boolean hasDamiBldg() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 dami_bldg = 13 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场 
       * </pre>
       */
      public int getDamiBldg() {
        return damiBldg_;
      }
      /**
       * <code>optional int32 dami_bldg = 13 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场 
       * </pre>
       */
      public Builder setDamiBldg(int value) {
        bitField0_ |= 0x00001000;
        damiBldg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dami_bldg = 13 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场 
       * </pre>
       */
      public Builder clearDamiBldg() {
        bitField0_ = (bitField0_ & ~0x00001000);
        damiBldg_ = 0;
        onChanged();
        return this;
      }

      private int shucaiBldg_ ;
      /**
       * <code>optional int32 shucai_bldg = 14 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场 
       * </pre>
       */
      public boolean hasShucaiBldg() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 shucai_bldg = 14 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场 
       * </pre>
       */
      public int getShucaiBldg() {
        return shucaiBldg_;
      }
      /**
       * <code>optional int32 shucai_bldg = 14 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场 
       * </pre>
       */
      public Builder setShucaiBldg(int value) {
        bitField0_ |= 0x00002000;
        shucaiBldg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shucai_bldg = 14 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场 
       * </pre>
       */
      public Builder clearShucaiBldg() {
        bitField0_ = (bitField0_ & ~0x00002000);
        shucaiBldg_ = 0;
        onChanged();
        return this;
      }

      private int shuiguoBldg_ ;
      /**
       * <code>optional int32 shuiguo_bldg = 15 [default = 0];</code>
       *
       * <pre>
       ** 水果园 
       * </pre>
       */
      public boolean hasShuiguoBldg() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 shuiguo_bldg = 15 [default = 0];</code>
       *
       * <pre>
       ** 水果园 
       * </pre>
       */
      public int getShuiguoBldg() {
        return shuiguoBldg_;
      }
      /**
       * <code>optional int32 shuiguo_bldg = 15 [default = 0];</code>
       *
       * <pre>
       ** 水果园 
       * </pre>
       */
      public Builder setShuiguoBldg(int value) {
        bitField0_ |= 0x00004000;
        shuiguoBldg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shuiguo_bldg = 15 [default = 0];</code>
       *
       * <pre>
       ** 水果园 
       * </pre>
       */
      public Builder clearShuiguoBldg() {
        bitField0_ = (bitField0_ & ~0x00004000);
        shuiguoBldg_ = 0;
        onChanged();
        return this;
      }

      private int jingBldg_ ;
      /**
       * <code>optional int32 jing_bldg = 16 [default = 0];</code>
       *
       * <pre>
       ** 井 
       * </pre>
       */
      public boolean hasJingBldg() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 jing_bldg = 16 [default = 0];</code>
       *
       * <pre>
       ** 井 
       * </pre>
       */
      public int getJingBldg() {
        return jingBldg_;
      }
      /**
       * <code>optional int32 jing_bldg = 16 [default = 0];</code>
       *
       * <pre>
       ** 井 
       * </pre>
       */
      public Builder setJingBldg(int value) {
        bitField0_ |= 0x00008000;
        jingBldg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jing_bldg = 16 [default = 0];</code>
       *
       * <pre>
       ** 井 
       * </pre>
       */
      public Builder clearJingBldg() {
        bitField0_ = (bitField0_ & ~0x00008000);
        jingBldg_ = 0;
        onChanged();
        return this;
      }

      private int lushuiBldg_ ;
      /**
       * <code>optional int32 lushui_bldg = 17 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器 
       * </pre>
       */
      public boolean hasLushuiBldg() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 lushui_bldg = 17 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器 
       * </pre>
       */
      public int getLushuiBldg() {
        return lushuiBldg_;
      }
      /**
       * <code>optional int32 lushui_bldg = 17 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器 
       * </pre>
       */
      public Builder setLushuiBldg(int value) {
        bitField0_ |= 0x00010000;
        lushuiBldg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lushui_bldg = 17 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器 
       * </pre>
       */
      public Builder clearLushuiBldg() {
        bitField0_ = (bitField0_ & ~0x00010000);
        lushuiBldg_ = 0;
        onChanged();
        return this;
      }

      private int songshuBldg_ ;
      /**
       * <code>optional int32 songshu_bldg = 18 [default = 0];</code>
       *
       * <pre>
       ** 松树林 
       * </pre>
       */
      public boolean hasSongshuBldg() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 songshu_bldg = 18 [default = 0];</code>
       *
       * <pre>
       ** 松树林 
       * </pre>
       */
      public int getSongshuBldg() {
        return songshuBldg_;
      }
      /**
       * <code>optional int32 songshu_bldg = 18 [default = 0];</code>
       *
       * <pre>
       ** 松树林 
       * </pre>
       */
      public Builder setSongshuBldg(int value) {
        bitField0_ |= 0x00020000;
        songshuBldg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 songshu_bldg = 18 [default = 0];</code>
       *
       * <pre>
       ** 松树林 
       * </pre>
       */
      public Builder clearSongshuBldg() {
        bitField0_ = (bitField0_ & ~0x00020000);
        songshuBldg_ = 0;
        onChanged();
        return this;
      }

      private int wuxiandianBldg_ ;
      /**
       * <code>optional int32 wuxiandian_bldg = 19 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public boolean hasWuxiandianBldg() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 wuxiandian_bldg = 19 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public int getWuxiandianBldg() {
        return wuxiandianBldg_;
      }
      /**
       * <code>optional int32 wuxiandian_bldg = 19 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public Builder setWuxiandianBldg(int value) {
        bitField0_ |= 0x00040000;
        wuxiandianBldg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wuxiandian_bldg = 19 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public Builder clearWuxiandianBldg() {
        bitField0_ = (bitField0_ & ~0x00040000);
        wuxiandianBldg_ = 0;
        onChanged();
        return this;
      }

      private int leidaBldg_ ;
      /**
       * <code>optional int32 leida_bldg = 20 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public boolean hasLeidaBldg() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 leida_bldg = 20 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public int getLeidaBldg() {
        return leidaBldg_;
      }
      /**
       * <code>optional int32 leida_bldg = 20 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public Builder setLeidaBldg(int value) {
        bitField0_ |= 0x00080000;
        leidaBldg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 leida_bldg = 20 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public Builder clearLeidaBldg() {
        bitField0_ = (bitField0_ & ~0x00080000);
        leidaBldg_ = 0;
        onChanged();
        return this;
      }

      private int fengnengBldg_ ;
      /**
       * <code>optional int32 fengneng_bldg = 21 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public boolean hasFengnengBldg() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 fengneng_bldg = 21 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public int getFengnengBldg() {
        return fengnengBldg_;
      }
      /**
       * <code>optional int32 fengneng_bldg = 21 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public Builder setFengnengBldg(int value) {
        bitField0_ |= 0x00100000;
        fengnengBldg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fengneng_bldg = 21 [default = 0];</code>
       *
       * <pre>
       **  
       * </pre>
       */
      public Builder clearFengnengBldg() {
        bitField0_ = (bitField0_ & ~0x00100000);
        fengnengBldg_ = 0;
        onChanged();
        return this;
      }

      private int taxCoeff_ ;
      /**
       * <code>optional int32 tax_coeff = 22 [default = 0];</code>
       *
       * <pre>
       ** 交易税率系数 
       * </pre>
       */
      public boolean hasTaxCoeff() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 tax_coeff = 22 [default = 0];</code>
       *
       * <pre>
       ** 交易税率系数 
       * </pre>
       */
      public int getTaxCoeff() {
        return taxCoeff_;
      }
      /**
       * <code>optional int32 tax_coeff = 22 [default = 0];</code>
       *
       * <pre>
       ** 交易税率系数 
       * </pre>
       */
      public Builder setTaxCoeff(int value) {
        bitField0_ |= 0x00200000;
        taxCoeff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tax_coeff = 22 [default = 0];</code>
       *
       * <pre>
       ** 交易税率系数 
       * </pre>
       */
      public Builder clearTaxCoeff() {
        bitField0_ = (bitField0_ & ~0x00200000);
        taxCoeff_ = 0;
        onChanged();
        return this;
      }

      private int damikey_ ;
      /**
       * <code>optional int32 damikey = 23 [default = 0];</code>
       *
       * <pre>
       ** 大米 
       * </pre>
       */
      public boolean hasDamikey() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 damikey = 23 [default = 0];</code>
       *
       * <pre>
       ** 大米 
       * </pre>
       */
      public int getDamikey() {
        return damikey_;
      }
      /**
       * <code>optional int32 damikey = 23 [default = 0];</code>
       *
       * <pre>
       ** 大米 
       * </pre>
       */
      public Builder setDamikey(int value) {
        bitField0_ |= 0x00400000;
        damikey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 damikey = 23 [default = 0];</code>
       *
       * <pre>
       ** 大米 
       * </pre>
       */
      public Builder clearDamikey() {
        bitField0_ = (bitField0_ & ~0x00400000);
        damikey_ = 0;
        onChanged();
        return this;
      }

      private int shucaikey_ ;
      /**
       * <code>optional int32 shucaikey = 24 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜 
       * </pre>
       */
      public boolean hasShucaikey() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 shucaikey = 24 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜 
       * </pre>
       */
      public int getShucaikey() {
        return shucaikey_;
      }
      /**
       * <code>optional int32 shucaikey = 24 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜 
       * </pre>
       */
      public Builder setShucaikey(int value) {
        bitField0_ |= 0x00800000;
        shucaikey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shucaikey = 24 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜 
       * </pre>
       */
      public Builder clearShucaikey() {
        bitField0_ = (bitField0_ & ~0x00800000);
        shucaikey_ = 0;
        onChanged();
        return this;
      }

      private int shuiguokey_ ;
      /**
       * <code>optional int32 shuiguokey = 25 [default = 0];</code>
       *
       * <pre>
       ** 水果 
       * </pre>
       */
      public boolean hasShuiguokey() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 shuiguokey = 25 [default = 0];</code>
       *
       * <pre>
       ** 水果 
       * </pre>
       */
      public int getShuiguokey() {
        return shuiguokey_;
      }
      /**
       * <code>optional int32 shuiguokey = 25 [default = 0];</code>
       *
       * <pre>
       ** 水果 
       * </pre>
       */
      public Builder setShuiguokey(int value) {
        bitField0_ |= 0x01000000;
        shuiguokey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shuiguokey = 25 [default = 0];</code>
       *
       * <pre>
       ** 水果 
       * </pre>
       */
      public Builder clearShuiguokey() {
        bitField0_ = (bitField0_ & ~0x01000000);
        shuiguokey_ = 0;
        onChanged();
        return this;
      }

      private int huafeikey_ ;
      /**
       * <code>optional int32 huafeikey = 26 [default = 0];</code>
       *
       * <pre>
       ** 化肥 
       * </pre>
       */
      public boolean hasHuafeikey() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 huafeikey = 26 [default = 0];</code>
       *
       * <pre>
       ** 化肥 
       * </pre>
       */
      public int getHuafeikey() {
        return huafeikey_;
      }
      /**
       * <code>optional int32 huafeikey = 26 [default = 0];</code>
       *
       * <pre>
       ** 化肥 
       * </pre>
       */
      public Builder setHuafeikey(int value) {
        bitField0_ |= 0x02000000;
        huafeikey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huafeikey = 26 [default = 0];</code>
       *
       * <pre>
       ** 化肥 
       * </pre>
       */
      public Builder clearHuafeikey() {
        bitField0_ = (bitField0_ & ~0x02000000);
        huafeikey_ = 0;
        onChanged();
        return this;
      }

      private int shuikey_ ;
      /**
       * <code>optional int32 shuikey = 27 [default = 0];</code>
       *
       * <pre>
       ** 纯净水 
       * </pre>
       */
      public boolean hasShuikey() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 shuikey = 27 [default = 0];</code>
       *
       * <pre>
       ** 纯净水 
       * </pre>
       */
      public int getShuikey() {
        return shuikey_;
      }
      /**
       * <code>optional int32 shuikey = 27 [default = 0];</code>
       *
       * <pre>
       ** 纯净水 
       * </pre>
       */
      public Builder setShuikey(int value) {
        bitField0_ |= 0x04000000;
        shuikey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shuikey = 27 [default = 0];</code>
       *
       * <pre>
       ** 纯净水 
       * </pre>
       */
      public Builder clearShuikey() {
        bitField0_ = (bitField0_ & ~0x04000000);
        shuikey_ = 0;
        onChanged();
        return this;
      }

      private int songmukey_ ;
      /**
       * <code>optional int32 songmukey = 28 [default = 0];</code>
       *
       * <pre>
       ** 松木 
       * </pre>
       */
      public boolean hasSongmukey() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 songmukey = 28 [default = 0];</code>
       *
       * <pre>
       ** 松木 
       * </pre>
       */
      public int getSongmukey() {
        return songmukey_;
      }
      /**
       * <code>optional int32 songmukey = 28 [default = 0];</code>
       *
       * <pre>
       ** 松木 
       * </pre>
       */
      public Builder setSongmukey(int value) {
        bitField0_ |= 0x08000000;
        songmukey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 songmukey = 28 [default = 0];</code>
       *
       * <pre>
       ** 松木 
       * </pre>
       */
      public Builder clearSongmukey() {
        bitField0_ = (bitField0_ & ~0x08000000);
        songmukey_ = 0;
        onChanged();
        return this;
      }

      private int shuinikey_ ;
      /**
       * <code>optional int32 shuinikey = 29 [default = 0];</code>
       *
       * <pre>
       ** 水泥 
       * </pre>
       */
      public boolean hasShuinikey() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 shuinikey = 29 [default = 0];</code>
       *
       * <pre>
       ** 水泥 
       * </pre>
       */
      public int getShuinikey() {
        return shuinikey_;
      }
      /**
       * <code>optional int32 shuinikey = 29 [default = 0];</code>
       *
       * <pre>
       ** 水泥 
       * </pre>
       */
      public Builder setShuinikey(int value) {
        bitField0_ |= 0x10000000;
        shuinikey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shuinikey = 29 [default = 0];</code>
       *
       * <pre>
       ** 水泥 
       * </pre>
       */
      public Builder clearShuinikey() {
        bitField0_ = (bitField0_ & ~0x10000000);
        shuinikey_ = 0;
        onChanged();
        return this;
      }

      private int caokey_ ;
      /**
       * <code>optional int32 caokey = 30 [default = 0];</code>
       *
       * <pre>
       ** 草 
       * </pre>
       */
      public boolean hasCaokey() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 caokey = 30 [default = 0];</code>
       *
       * <pre>
       ** 草 
       * </pre>
       */
      public int getCaokey() {
        return caokey_;
      }
      /**
       * <code>optional int32 caokey = 30 [default = 0];</code>
       *
       * <pre>
       ** 草 
       * </pre>
       */
      public Builder setCaokey(int value) {
        bitField0_ |= 0x20000000;
        caokey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 caokey = 30 [default = 0];</code>
       *
       * <pre>
       ** 草 
       * </pre>
       */
      public Builder clearCaokey() {
        bitField0_ = (bitField0_ & ~0x20000000);
        caokey_ = 0;
        onChanged();
        return this;
      }

      private int yuanyoukey_ ;
      /**
       * <code>optional int32 yuanyoukey = 31 [default = 0];</code>
       *
       * <pre>
       ** 原油 
       * </pre>
       */
      public boolean hasYuanyoukey() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 yuanyoukey = 31 [default = 0];</code>
       *
       * <pre>
       ** 原油 
       * </pre>
       */
      public int getYuanyoukey() {
        return yuanyoukey_;
      }
      /**
       * <code>optional int32 yuanyoukey = 31 [default = 0];</code>
       *
       * <pre>
       ** 原油 
       * </pre>
       */
      public Builder setYuanyoukey(int value) {
        bitField0_ |= 0x40000000;
        yuanyoukey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 yuanyoukey = 31 [default = 0];</code>
       *
       * <pre>
       ** 原油 
       * </pre>
       */
      public Builder clearYuanyoukey() {
        bitField0_ = (bitField0_ & ~0x40000000);
        yuanyoukey_ = 0;
        onChanged();
        return this;
      }

      private int tiekey_ ;
      /**
       * <code>optional int32 tiekey = 32 [default = 0];</code>
       *
       * <pre>
       ** 铁 
       * </pre>
       */
      public boolean hasTiekey() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 tiekey = 32 [default = 0];</code>
       *
       * <pre>
       ** 铁 
       * </pre>
       */
      public int getTiekey() {
        return tiekey_;
      }
      /**
       * <code>optional int32 tiekey = 32 [default = 0];</code>
       *
       * <pre>
       ** 铁 
       * </pre>
       */
      public Builder setTiekey(int value) {
        bitField0_ |= 0x80000000;
        tiekey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tiekey = 32 [default = 0];</code>
       *
       * <pre>
       ** 铁 
       * </pre>
       */
      public Builder clearTiekey() {
        bitField0_ = (bitField0_ & ~0x80000000);
        tiekey_ = 0;
        onChanged();
        return this;
      }

      private int jijiubaokey_ ;
      /**
       * <code>optional int32 jijiubaokey = 33 [default = 0];</code>
       *
       * <pre>
       ** 急救包 
       * </pre>
       */
      public boolean hasJijiubaokey() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 jijiubaokey = 33 [default = 0];</code>
       *
       * <pre>
       ** 急救包 
       * </pre>
       */
      public int getJijiubaokey() {
        return jijiubaokey_;
      }
      /**
       * <code>optional int32 jijiubaokey = 33 [default = 0];</code>
       *
       * <pre>
       ** 急救包 
       * </pre>
       */
      public Builder setJijiubaokey(int value) {
        bitField1_ |= 0x00000001;
        jijiubaokey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jijiubaokey = 33 [default = 0];</code>
       *
       * <pre>
       ** 急救包 
       * </pre>
       */
      public Builder clearJijiubaokey() {
        bitField1_ = (bitField1_ & ~0x00000001);
        jijiubaokey_ = 0;
        onChanged();
        return this;
      }

      private int rizhikey_ ;
      /**
       * <code>optional int32 rizhikey = 34 [default = 0];</code>
       *
       * <pre>
       ** 庄园日志 
       * </pre>
       */
      public boolean hasRizhikey() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 rizhikey = 34 [default = 0];</code>
       *
       * <pre>
       ** 庄园日志 
       * </pre>
       */
      public int getRizhikey() {
        return rizhikey_;
      }
      /**
       * <code>optional int32 rizhikey = 34 [default = 0];</code>
       *
       * <pre>
       ** 庄园日志 
       * </pre>
       */
      public Builder setRizhikey(int value) {
        bitField1_ |= 0x00000002;
        rizhikey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rizhikey = 34 [default = 0];</code>
       *
       * <pre>
       ** 庄园日志 
       * </pre>
       */
      public Builder clearRizhikey() {
        bitField1_ = (bitField1_ & ~0x00000002);
        rizhikey_ = 0;
        onChanged();
        return this;
      }

      private int jiqiangtuzhikey_ ;
      /**
       * <code>optional int32 jiqiangtuzhikey = 35 [default = 0];</code>
       *
       * <pre>
       ** 重机枪图纸 
       * </pre>
       */
      public boolean hasJiqiangtuzhikey() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 jiqiangtuzhikey = 35 [default = 0];</code>
       *
       * <pre>
       ** 重机枪图纸 
       * </pre>
       */
      public int getJiqiangtuzhikey() {
        return jiqiangtuzhikey_;
      }
      /**
       * <code>optional int32 jiqiangtuzhikey = 35 [default = 0];</code>
       *
       * <pre>
       ** 重机枪图纸 
       * </pre>
       */
      public Builder setJiqiangtuzhikey(int value) {
        bitField1_ |= 0x00000004;
        jiqiangtuzhikey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jiqiangtuzhikey = 35 [default = 0];</code>
       *
       * <pre>
       ** 重机枪图纸 
       * </pre>
       */
      public Builder clearJiqiangtuzhikey() {
        bitField1_ = (bitField1_ & ~0x00000004);
        jiqiangtuzhikey_ = 0;
        onChanged();
        return this;
      }

      private int jujituzhikey_ ;
      /**
       * <code>optional int32 jujituzhikey = 36 [default = 0];</code>
       *
       * <pre>
       ** 狙击枪图纸 
       * </pre>
       */
      public boolean hasJujituzhikey() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 jujituzhikey = 36 [default = 0];</code>
       *
       * <pre>
       ** 狙击枪图纸 
       * </pre>
       */
      public int getJujituzhikey() {
        return jujituzhikey_;
      }
      /**
       * <code>optional int32 jujituzhikey = 36 [default = 0];</code>
       *
       * <pre>
       ** 狙击枪图纸 
       * </pre>
       */
      public Builder setJujituzhikey(int value) {
        bitField1_ |= 0x00000008;
        jujituzhikey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jujituzhikey = 36 [default = 0];</code>
       *
       * <pre>
       ** 狙击枪图纸 
       * </pre>
       */
      public Builder clearJujituzhikey() {
        bitField1_ = (bitField1_ & ~0x00000008);
        jujituzhikey_ = 0;
        onChanged();
        return this;
      }

      private int jipaotuzhikey_ ;
      /**
       * <code>optional int32 jipaotuzhikey = 37 [default = 0];</code>
       *
       * <pre>
       ** 机炮设计图 
       * </pre>
       */
      public boolean hasJipaotuzhikey() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 jipaotuzhikey = 37 [default = 0];</code>
       *
       * <pre>
       ** 机炮设计图 
       * </pre>
       */
      public int getJipaotuzhikey() {
        return jipaotuzhikey_;
      }
      /**
       * <code>optional int32 jipaotuzhikey = 37 [default = 0];</code>
       *
       * <pre>
       ** 机炮设计图 
       * </pre>
       */
      public Builder setJipaotuzhikey(int value) {
        bitField1_ |= 0x00000010;
        jipaotuzhikey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jipaotuzhikey = 37 [default = 0];</code>
       *
       * <pre>
       ** 机炮设计图 
       * </pre>
       */
      public Builder clearJipaotuzhikey() {
        bitField1_ = (bitField1_ & ~0x00000010);
        jipaotuzhikey_ = 0;
        onChanged();
        return this;
      }

      private int yuanlongpingkey_ ;
      /**
       * <code>optional int32 yuanlongpingkey = 38 [default = 0];</code>
       *
       * <pre>
       ** 《袁隆平传》 
       * </pre>
       */
      public boolean hasYuanlongpingkey() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 yuanlongpingkey = 38 [default = 0];</code>
       *
       * <pre>
       ** 《袁隆平传》 
       * </pre>
       */
      public int getYuanlongpingkey() {
        return yuanlongpingkey_;
      }
      /**
       * <code>optional int32 yuanlongpingkey = 38 [default = 0];</code>
       *
       * <pre>
       ** 《袁隆平传》 
       * </pre>
       */
      public Builder setYuanlongpingkey(int value) {
        bitField1_ |= 0x00000020;
        yuanlongpingkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 yuanlongpingkey = 38 [default = 0];</code>
       *
       * <pre>
       ** 《袁隆平传》 
       * </pre>
       */
      public Builder clearYuanlongpingkey() {
        bitField1_ = (bitField1_ & ~0x00000020);
        yuanlongpingkey_ = 0;
        onChanged();
        return this;
      }

      private int huafeigongyekey_ ;
      /**
       * <code>optional int32 huafeigongyekey = 39 [default = 0];</code>
       *
       * <pre>
       ** 《化肥工业概论》 
       * </pre>
       */
      public boolean hasHuafeigongyekey() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 huafeigongyekey = 39 [default = 0];</code>
       *
       * <pre>
       ** 《化肥工业概论》 
       * </pre>
       */
      public int getHuafeigongyekey() {
        return huafeigongyekey_;
      }
      /**
       * <code>optional int32 huafeigongyekey = 39 [default = 0];</code>
       *
       * <pre>
       ** 《化肥工业概论》 
       * </pre>
       */
      public Builder setHuafeigongyekey(int value) {
        bitField1_ |= 0x00000040;
        huafeigongyekey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huafeigongyekey = 39 [default = 0];</code>
       *
       * <pre>
       ** 《化肥工业概论》 
       * </pre>
       */
      public Builder clearHuafeigongyekey() {
        bitField1_ = (bitField1_ & ~0x00000040);
        huafeigongyekey_ = 0;
        onChanged();
        return this;
      }

      private int yangzhukey_ ;
      /**
       * <code>optional int32 yangzhukey = 40 [default = 0];</code>
       *
       * <pre>
       ** 《论如何养猪》 
       * </pre>
       */
      public boolean hasYangzhukey() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 yangzhukey = 40 [default = 0];</code>
       *
       * <pre>
       ** 《论如何养猪》 
       * </pre>
       */
      public int getYangzhukey() {
        return yangzhukey_;
      }
      /**
       * <code>optional int32 yangzhukey = 40 [default = 0];</code>
       *
       * <pre>
       ** 《论如何养猪》 
       * </pre>
       */
      public Builder setYangzhukey(int value) {
        bitField1_ |= 0x00000080;
        yangzhukey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 yangzhukey = 40 [default = 0];</code>
       *
       * <pre>
       ** 《论如何养猪》 
       * </pre>
       */
      public Builder clearYangzhukey() {
        bitField1_ = (bitField1_ & ~0x00000080);
        yangzhukey_ = 0;
        onChanged();
        return this;
      }

      private int cangchukey_ ;
      /**
       * <code>optional int32 cangchukey = 41 [default = 0];</code>
       *
       * <pre>
       ** 《仓储管理》 
       * </pre>
       */
      public boolean hasCangchukey() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 cangchukey = 41 [default = 0];</code>
       *
       * <pre>
       ** 《仓储管理》 
       * </pre>
       */
      public int getCangchukey() {
        return cangchukey_;
      }
      /**
       * <code>optional int32 cangchukey = 41 [default = 0];</code>
       *
       * <pre>
       ** 《仓储管理》 
       * </pre>
       */
      public Builder setCangchukey(int value) {
        bitField1_ |= 0x00000100;
        cangchukey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cangchukey = 41 [default = 0];</code>
       *
       * <pre>
       ** 《仓储管理》 
       * </pre>
       */
      public Builder clearCangchukey() {
        bitField1_ = (bitField1_ & ~0x00000100);
        cangchukey_ = 0;
        onChanged();
        return this;
      }

      private int tesilakey_ ;
      /**
       * <code>optional int32 tesilakey = 42 [default = 0];</code>
       *
       * <pre>
       ** 《特斯拉传》 
       * </pre>
       */
      public boolean hasTesilakey() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 tesilakey = 42 [default = 0];</code>
       *
       * <pre>
       ** 《特斯拉传》 
       * </pre>
       */
      public int getTesilakey() {
        return tesilakey_;
      }
      /**
       * <code>optional int32 tesilakey = 42 [default = 0];</code>
       *
       * <pre>
       ** 《特斯拉传》 
       * </pre>
       */
      public Builder setTesilakey(int value) {
        bitField1_ |= 0x00000200;
        tesilakey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tesilakey = 42 [default = 0];</code>
       *
       * <pre>
       ** 《特斯拉传》 
       * </pre>
       */
      public Builder clearTesilakey() {
        bitField1_ = (bitField1_ & ~0x00000200);
        tesilakey_ = 0;
        onChanged();
        return this;
      }

      private int luokefeilekey_ ;
      /**
       * <code>optional int32 luokefeilekey = 43 [default = 0];</code>
       *
       * <pre>
       ** 《洛克菲勒传》 
       * </pre>
       */
      public boolean hasLuokefeilekey() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 luokefeilekey = 43 [default = 0];</code>
       *
       * <pre>
       ** 《洛克菲勒传》 
       * </pre>
       */
      public int getLuokefeilekey() {
        return luokefeilekey_;
      }
      /**
       * <code>optional int32 luokefeilekey = 43 [default = 0];</code>
       *
       * <pre>
       ** 《洛克菲勒传》 
       * </pre>
       */
      public Builder setLuokefeilekey(int value) {
        bitField1_ |= 0x00000400;
        luokefeilekey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 luokefeilekey = 43 [default = 0];</code>
       *
       * <pre>
       ** 《洛克菲勒传》 
       * </pre>
       */
      public Builder clearLuokefeilekey() {
        bitField1_ = (bitField1_ & ~0x00000400);
        luokefeilekey_ = 0;
        onChanged();
        return this;
      }

      private int kanaijikey_ ;
      /**
       * <code>optional int32 kanaijikey = 44 [default = 0];</code>
       *
       * <pre>
       ** 《卡耐基传》 
       * </pre>
       */
      public boolean hasKanaijikey() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 kanaijikey = 44 [default = 0];</code>
       *
       * <pre>
       ** 《卡耐基传》 
       * </pre>
       */
      public int getKanaijikey() {
        return kanaijikey_;
      }
      /**
       * <code>optional int32 kanaijikey = 44 [default = 0];</code>
       *
       * <pre>
       ** 《卡耐基传》 
       * </pre>
       */
      public Builder setKanaijikey(int value) {
        bitField1_ |= 0x00000800;
        kanaijikey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kanaijikey = 44 [default = 0];</code>
       *
       * <pre>
       ** 《卡耐基传》 
       * </pre>
       */
      public Builder clearKanaijikey() {
        bitField1_ = (bitField1_ & ~0x00000800);
        kanaijikey_ = 0;
        onChanged();
        return this;
      }

      private int lubankey_ ;
      /**
       * <code>optional int32 lubankey = 45 [default = 0];</code>
       *
       * <pre>
       ** 《鲁班传》 
       * </pre>
       */
      public boolean hasLubankey() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 lubankey = 45 [default = 0];</code>
       *
       * <pre>
       ** 《鲁班传》 
       * </pre>
       */
      public int getLubankey() {
        return lubankey_;
      }
      /**
       * <code>optional int32 lubankey = 45 [default = 0];</code>
       *
       * <pre>
       ** 《鲁班传》 
       * </pre>
       */
      public Builder setLubankey(int value) {
        bitField1_ |= 0x00001000;
        lubankey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lubankey = 45 [default = 0];</code>
       *
       * <pre>
       ** 《鲁班传》 
       * </pre>
       */
      public Builder clearLubankey() {
        bitField1_ = (bitField1_ & ~0x00001000);
        lubankey_ = 0;
        onChanged();
        return this;
      }

      private int tumukey_ ;
      /**
       * <code>optional int32 tumukey = 46 [default = 0];</code>
       *
       * <pre>
       ** 《土木工程概论》 
       * </pre>
       */
      public boolean hasTumukey() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 tumukey = 46 [default = 0];</code>
       *
       * <pre>
       ** 《土木工程概论》 
       * </pre>
       */
      public int getTumukey() {
        return tumukey_;
      }
      /**
       * <code>optional int32 tumukey = 46 [default = 0];</code>
       *
       * <pre>
       ** 《土木工程概论》 
       * </pre>
       */
      public Builder setTumukey(int value) {
        bitField1_ |= 0x00002000;
        tumukey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tumukey = 46 [default = 0];</code>
       *
       * <pre>
       ** 《土木工程概论》 
       * </pre>
       */
      public Builder clearTumukey() {
        bitField1_ = (bitField1_ & ~0x00002000);
        tumukey_ = 0;
        onChanged();
        return this;
      }

      private int fangdaokey_ ;
      /**
       * <code>optional int32 fangdaokey = 47 [default = 0];</code>
       *
       * <pre>
       ** 《防盗门技术》 
       * </pre>
       */
      public boolean hasFangdaokey() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 fangdaokey = 47 [default = 0];</code>
       *
       * <pre>
       ** 《防盗门技术》 
       * </pre>
       */
      public int getFangdaokey() {
        return fangdaokey_;
      }
      /**
       * <code>optional int32 fangdaokey = 47 [default = 0];</code>
       *
       * <pre>
       ** 《防盗门技术》 
       * </pre>
       */
      public Builder setFangdaokey(int value) {
        bitField1_ |= 0x00004000;
        fangdaokey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fangdaokey = 47 [default = 0];</code>
       *
       * <pre>
       ** 《防盗门技术》 
       * </pre>
       */
      public Builder clearFangdaokey() {
        bitField1_ = (bitField1_ & ~0x00004000);
        fangdaokey_ = 0;
        onChanged();
        return this;
      }

      private int makeqinkey_ ;
      /**
       * <code>optional int32 makeqinkey = 48 [default = 0];</code>
       *
       * <pre>
       ** 《马克沁传》 
       * </pre>
       */
      public boolean hasMakeqinkey() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 makeqinkey = 48 [default = 0];</code>
       *
       * <pre>
       ** 《马克沁传》 
       * </pre>
       */
      public int getMakeqinkey() {
        return makeqinkey_;
      }
      /**
       * <code>optional int32 makeqinkey = 48 [default = 0];</code>
       *
       * <pre>
       ** 《马克沁传》 
       * </pre>
       */
      public Builder setMakeqinkey(int value) {
        bitField1_ |= 0x00008000;
        makeqinkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 makeqinkey = 48 [default = 0];</code>
       *
       * <pre>
       ** 《马克沁传》 
       * </pre>
       */
      public Builder clearMakeqinkey() {
        bitField1_ = (bitField1_ & ~0x00008000);
        makeqinkey_ = 0;
        onChanged();
        return this;
      }

      private int wodefendoukey_ ;
      /**
       * <code>optional int32 wodefendoukey = 49 [default = 0];</code>
       *
       * <pre>
       ** 《我的奋斗》 
       * </pre>
       */
      public boolean hasWodefendoukey() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 wodefendoukey = 49 [default = 0];</code>
       *
       * <pre>
       ** 《我的奋斗》 
       * </pre>
       */
      public int getWodefendoukey() {
        return wodefendoukey_;
      }
      /**
       * <code>optional int32 wodefendoukey = 49 [default = 0];</code>
       *
       * <pre>
       ** 《我的奋斗》 
       * </pre>
       */
      public Builder setWodefendoukey(int value) {
        bitField1_ |= 0x00010000;
        wodefendoukey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wodefendoukey = 49 [default = 0];</code>
       *
       * <pre>
       ** 《我的奋斗》 
       * </pre>
       */
      public Builder clearWodefendoukey() {
        bitField1_ = (bitField1_ & ~0x00010000);
        wodefendoukey_ = 0;
        onChanged();
        return this;
      }

      private int jiatelinkey_ ;
      /**
       * <code>optional int32 jiatelinkey = 50 [default = 0];</code>
       *
       * <pre>
       ** 《加特林传》 
       * </pre>
       */
      public boolean hasJiatelinkey() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 jiatelinkey = 50 [default = 0];</code>
       *
       * <pre>
       ** 《加特林传》 
       * </pre>
       */
      public int getJiatelinkey() {
        return jiatelinkey_;
      }
      /**
       * <code>optional int32 jiatelinkey = 50 [default = 0];</code>
       *
       * <pre>
       ** 《加特林传》 
       * </pre>
       */
      public Builder setJiatelinkey(int value) {
        bitField1_ |= 0x00020000;
        jiatelinkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jiatelinkey = 50 [default = 0];</code>
       *
       * <pre>
       ** 《加特林传》 
       * </pre>
       */
      public Builder clearJiatelinkey() {
        bitField1_ = (bitField1_ & ~0x00020000);
        jiatelinkey_ = 0;
        onChanged();
        return this;
      }

      private int wbaleitekey_ ;
      /**
       * <code>optional int32 wbaleitekey = 51 [default = 0];</code>
       *
       * <pre>
       ** 《巴雷特的笔记》 
       * </pre>
       */
      public boolean hasWbaleitekey() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 wbaleitekey = 51 [default = 0];</code>
       *
       * <pre>
       ** 《巴雷特的笔记》 
       * </pre>
       */
      public int getWbaleitekey() {
        return wbaleitekey_;
      }
      /**
       * <code>optional int32 wbaleitekey = 51 [default = 0];</code>
       *
       * <pre>
       ** 《巴雷特的笔记》 
       * </pre>
       */
      public Builder setWbaleitekey(int value) {
        bitField1_ |= 0x00040000;
        wbaleitekey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wbaleitekey = 51 [default = 0];</code>
       *
       * <pre>
       ** 《巴雷特的笔记》 
       * </pre>
       */
      public Builder clearWbaleitekey() {
        bitField1_ = (bitField1_ & ~0x00040000);
        wbaleitekey_ = 0;
        onChanged();
        return this;
      }

      private int guanrenkey_ ;
      /**
       * <code>optional int32 guanrenkey = 52 [default = 0];</code>
       *
       * <pre>
       ** 《官人吃鸡指南》 
       * </pre>
       */
      public boolean hasGuanrenkey() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 guanrenkey = 52 [default = 0];</code>
       *
       * <pre>
       ** 《官人吃鸡指南》 
       * </pre>
       */
      public int getGuanrenkey() {
        return guanrenkey_;
      }
      /**
       * <code>optional int32 guanrenkey = 52 [default = 0];</code>
       *
       * <pre>
       ** 《官人吃鸡指南》 
       * </pre>
       */
      public Builder setGuanrenkey(int value) {
        bitField1_ |= 0x00080000;
        guanrenkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 guanrenkey = 52 [default = 0];</code>
       *
       * <pre>
       ** 《官人吃鸡指南》 
       * </pre>
       */
      public Builder clearGuanrenkey() {
        bitField1_ = (bitField1_ & ~0x00080000);
        guanrenkey_ = 0;
        onChanged();
        return this;
      }

      private int toukui1Key_ ;
      /**
       * <code>optional int32 toukui1key = 53 [default = 0];</code>
       *
       * <pre>
       ** 1级头盔 
       * </pre>
       */
      public boolean hasToukui1Key() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 toukui1key = 53 [default = 0];</code>
       *
       * <pre>
       ** 1级头盔 
       * </pre>
       */
      public int getToukui1Key() {
        return toukui1Key_;
      }
      /**
       * <code>optional int32 toukui1key = 53 [default = 0];</code>
       *
       * <pre>
       ** 1级头盔 
       * </pre>
       */
      public Builder setToukui1Key(int value) {
        bitField1_ |= 0x00100000;
        toukui1Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 toukui1key = 53 [default = 0];</code>
       *
       * <pre>
       ** 1级头盔 
       * </pre>
       */
      public Builder clearToukui1Key() {
        bitField1_ = (bitField1_ & ~0x00100000);
        toukui1Key_ = 0;
        onChanged();
        return this;
      }

      private int toukui2Key_ ;
      /**
       * <code>optional int32 toukui2key = 54 [default = 0];</code>
       *
       * <pre>
       ** 2级头盔 
       * </pre>
       */
      public boolean hasToukui2Key() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 toukui2key = 54 [default = 0];</code>
       *
       * <pre>
       ** 2级头盔 
       * </pre>
       */
      public int getToukui2Key() {
        return toukui2Key_;
      }
      /**
       * <code>optional int32 toukui2key = 54 [default = 0];</code>
       *
       * <pre>
       ** 2级头盔 
       * </pre>
       */
      public Builder setToukui2Key(int value) {
        bitField1_ |= 0x00200000;
        toukui2Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 toukui2key = 54 [default = 0];</code>
       *
       * <pre>
       ** 2级头盔 
       * </pre>
       */
      public Builder clearToukui2Key() {
        bitField1_ = (bitField1_ & ~0x00200000);
        toukui2Key_ = 0;
        onChanged();
        return this;
      }

      private int toukui3Key_ ;
      /**
       * <code>optional int32 toukui3key = 55 [default = 0];</code>
       *
       * <pre>
       ** 3级头盔 
       * </pre>
       */
      public boolean hasToukui3Key() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 toukui3key = 55 [default = 0];</code>
       *
       * <pre>
       ** 3级头盔 
       * </pre>
       */
      public int getToukui3Key() {
        return toukui3Key_;
      }
      /**
       * <code>optional int32 toukui3key = 55 [default = 0];</code>
       *
       * <pre>
       ** 3级头盔 
       * </pre>
       */
      public Builder setToukui3Key(int value) {
        bitField1_ |= 0x00400000;
        toukui3Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 toukui3key = 55 [default = 0];</code>
       *
       * <pre>
       ** 3级头盔 
       * </pre>
       */
      public Builder clearToukui3Key() {
        bitField1_ = (bitField1_ & ~0x00400000);
        toukui3Key_ = 0;
        onChanged();
        return this;
      }

      private int shouqiang1Key_ ;
      /**
       * <code>optional int32 shouqiang1key = 56 [default = 0];</code>
       *
       * <pre>
       ** 手枪 
       * </pre>
       */
      public boolean hasShouqiang1Key() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 shouqiang1key = 56 [default = 0];</code>
       *
       * <pre>
       ** 手枪 
       * </pre>
       */
      public int getShouqiang1Key() {
        return shouqiang1Key_;
      }
      /**
       * <code>optional int32 shouqiang1key = 56 [default = 0];</code>
       *
       * <pre>
       ** 手枪 
       * </pre>
       */
      public Builder setShouqiang1Key(int value) {
        bitField1_ |= 0x00800000;
        shouqiang1Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shouqiang1key = 56 [default = 0];</code>
       *
       * <pre>
       ** 手枪 
       * </pre>
       */
      public Builder clearShouqiang1Key() {
        bitField1_ = (bitField1_ & ~0x00800000);
        shouqiang1Key_ = 0;
        onChanged();
        return this;
      }

      private int buqiang1Key_ ;
      /**
       * <code>optional int32 buqiang1key = 57 [default = 0];</code>
       *
       * <pre>
       ** 步枪 
       * </pre>
       */
      public boolean hasBuqiang1Key() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 buqiang1key = 57 [default = 0];</code>
       *
       * <pre>
       ** 步枪 
       * </pre>
       */
      public int getBuqiang1Key() {
        return buqiang1Key_;
      }
      /**
       * <code>optional int32 buqiang1key = 57 [default = 0];</code>
       *
       * <pre>
       ** 步枪 
       * </pre>
       */
      public Builder setBuqiang1Key(int value) {
        bitField1_ |= 0x01000000;
        buqiang1Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 buqiang1key = 57 [default = 0];</code>
       *
       * <pre>
       ** 步枪 
       * </pre>
       */
      public Builder clearBuqiang1Key() {
        bitField1_ = (bitField1_ & ~0x01000000);
        buqiang1Key_ = 0;
        onChanged();
        return this;
      }

      private int qingjiqiang1Key_ ;
      /**
       * <code>optional int32 qingjiqiang1key = 58 [default = 0];</code>
       *
       * <pre>
       ** 轻机枪 
       * </pre>
       */
      public boolean hasQingjiqiang1Key() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 qingjiqiang1key = 58 [default = 0];</code>
       *
       * <pre>
       ** 轻机枪 
       * </pre>
       */
      public int getQingjiqiang1Key() {
        return qingjiqiang1Key_;
      }
      /**
       * <code>optional int32 qingjiqiang1key = 58 [default = 0];</code>
       *
       * <pre>
       ** 轻机枪 
       * </pre>
       */
      public Builder setQingjiqiang1Key(int value) {
        bitField1_ |= 0x02000000;
        qingjiqiang1Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qingjiqiang1key = 58 [default = 0];</code>
       *
       * <pre>
       ** 轻机枪 
       * </pre>
       */
      public Builder clearQingjiqiang1Key() {
        bitField1_ = (bitField1_ & ~0x02000000);
        qingjiqiang1Key_ = 0;
        onChanged();
        return this;
      }

      private int fangdanyi1Key_ ;
      /**
       * <code>optional int32 fangdanyi1key = 59 [default = 0];</code>
       *
       * <pre>
       ** 1级防弹衣 
       * </pre>
       */
      public boolean hasFangdanyi1Key() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 fangdanyi1key = 59 [default = 0];</code>
       *
       * <pre>
       ** 1级防弹衣 
       * </pre>
       */
      public int getFangdanyi1Key() {
        return fangdanyi1Key_;
      }
      /**
       * <code>optional int32 fangdanyi1key = 59 [default = 0];</code>
       *
       * <pre>
       ** 1级防弹衣 
       * </pre>
       */
      public Builder setFangdanyi1Key(int value) {
        bitField1_ |= 0x04000000;
        fangdanyi1Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fangdanyi1key = 59 [default = 0];</code>
       *
       * <pre>
       ** 1级防弹衣 
       * </pre>
       */
      public Builder clearFangdanyi1Key() {
        bitField1_ = (bitField1_ & ~0x04000000);
        fangdanyi1Key_ = 0;
        onChanged();
        return this;
      }

      private int fangdanyi2Key_ ;
      /**
       * <code>optional int32 fangdanyi2key = 60 [default = 0];</code>
       *
       * <pre>
       ** 2级防弹衣 
       * </pre>
       */
      public boolean hasFangdanyi2Key() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 fangdanyi2key = 60 [default = 0];</code>
       *
       * <pre>
       ** 2级防弹衣 
       * </pre>
       */
      public int getFangdanyi2Key() {
        return fangdanyi2Key_;
      }
      /**
       * <code>optional int32 fangdanyi2key = 60 [default = 0];</code>
       *
       * <pre>
       ** 2级防弹衣 
       * </pre>
       */
      public Builder setFangdanyi2Key(int value) {
        bitField1_ |= 0x08000000;
        fangdanyi2Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fangdanyi2key = 60 [default = 0];</code>
       *
       * <pre>
       ** 2级防弹衣 
       * </pre>
       */
      public Builder clearFangdanyi2Key() {
        bitField1_ = (bitField1_ & ~0x08000000);
        fangdanyi2Key_ = 0;
        onChanged();
        return this;
      }

      private int fangdanyi3Key_ ;
      /**
       * <code>optional int32 fangdanyi3key = 61 [default = 0];</code>
       *
       * <pre>
       ** 3级防弹衣 
       * </pre>
       */
      public boolean hasFangdanyi3Key() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 fangdanyi3key = 61 [default = 0];</code>
       *
       * <pre>
       ** 3级防弹衣 
       * </pre>
       */
      public int getFangdanyi3Key() {
        return fangdanyi3Key_;
      }
      /**
       * <code>optional int32 fangdanyi3key = 61 [default = 0];</code>
       *
       * <pre>
       ** 3级防弹衣 
       * </pre>
       */
      public Builder setFangdanyi3Key(int value) {
        bitField1_ |= 0x10000000;
        fangdanyi3Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fangdanyi3key = 61 [default = 0];</code>
       *
       * <pre>
       ** 3级防弹衣 
       * </pre>
       */
      public Builder clearFangdanyi3Key() {
        bitField1_ = (bitField1_ & ~0x10000000);
        fangdanyi3Key_ = 0;
        onChanged();
        return this;
      }

      private int kuzi1Key_ ;
      /**
       * <code>optional int32 kuzi1key = 62 [default = 0];</code>
       *
       * <pre>
       ** 1级作训裤 
       * </pre>
       */
      public boolean hasKuzi1Key() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 kuzi1key = 62 [default = 0];</code>
       *
       * <pre>
       ** 1级作训裤 
       * </pre>
       */
      public int getKuzi1Key() {
        return kuzi1Key_;
      }
      /**
       * <code>optional int32 kuzi1key = 62 [default = 0];</code>
       *
       * <pre>
       ** 1级作训裤 
       * </pre>
       */
      public Builder setKuzi1Key(int value) {
        bitField1_ |= 0x20000000;
        kuzi1Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kuzi1key = 62 [default = 0];</code>
       *
       * <pre>
       ** 1级作训裤 
       * </pre>
       */
      public Builder clearKuzi1Key() {
        bitField1_ = (bitField1_ & ~0x20000000);
        kuzi1Key_ = 0;
        onChanged();
        return this;
      }

      private int kuzi2Key_ ;
      /**
       * <code>optional int32 kuzi2key = 63 [default = 0];</code>
       *
       * <pre>
       ** 2级作训裤 
       * </pre>
       */
      public boolean hasKuzi2Key() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 kuzi2key = 63 [default = 0];</code>
       *
       * <pre>
       ** 2级作训裤 
       * </pre>
       */
      public int getKuzi2Key() {
        return kuzi2Key_;
      }
      /**
       * <code>optional int32 kuzi2key = 63 [default = 0];</code>
       *
       * <pre>
       ** 2级作训裤 
       * </pre>
       */
      public Builder setKuzi2Key(int value) {
        bitField1_ |= 0x40000000;
        kuzi2Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kuzi2key = 63 [default = 0];</code>
       *
       * <pre>
       ** 2级作训裤 
       * </pre>
       */
      public Builder clearKuzi2Key() {
        bitField1_ = (bitField1_ & ~0x40000000);
        kuzi2Key_ = 0;
        onChanged();
        return this;
      }

      private int kuzi3Key_ ;
      /**
       * <code>optional int32 kuzi3key = 64 [default = 0];</code>
       *
       * <pre>
       ** 3级作训裤 
       * </pre>
       */
      public boolean hasKuzi3Key() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 kuzi3key = 64 [default = 0];</code>
       *
       * <pre>
       ** 3级作训裤 
       * </pre>
       */
      public int getKuzi3Key() {
        return kuzi3Key_;
      }
      /**
       * <code>optional int32 kuzi3key = 64 [default = 0];</code>
       *
       * <pre>
       ** 3级作训裤 
       * </pre>
       */
      public Builder setKuzi3Key(int value) {
        bitField1_ |= 0x80000000;
        kuzi3Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kuzi3key = 64 [default = 0];</code>
       *
       * <pre>
       ** 3级作训裤 
       * </pre>
       */
      public Builder clearKuzi3Key() {
        bitField1_ = (bitField1_ & ~0x80000000);
        kuzi3Key_ = 0;
        onChanged();
        return this;
      }

      private int xiezi1Key_ ;
      /**
       * <code>optional int32 xiezi1key = 65 [default = 0];</code>
       *
       * <pre>
       ** 1级越野靴 
       * </pre>
       */
      public boolean hasXiezi1Key() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 xiezi1key = 65 [default = 0];</code>
       *
       * <pre>
       ** 1级越野靴 
       * </pre>
       */
      public int getXiezi1Key() {
        return xiezi1Key_;
      }
      /**
       * <code>optional int32 xiezi1key = 65 [default = 0];</code>
       *
       * <pre>
       ** 1级越野靴 
       * </pre>
       */
      public Builder setXiezi1Key(int value) {
        bitField2_ |= 0x00000001;
        xiezi1Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiezi1key = 65 [default = 0];</code>
       *
       * <pre>
       ** 1级越野靴 
       * </pre>
       */
      public Builder clearXiezi1Key() {
        bitField2_ = (bitField2_ & ~0x00000001);
        xiezi1Key_ = 0;
        onChanged();
        return this;
      }

      private int xiezi2Key_ ;
      /**
       * <code>optional int32 xiezi2key = 66 [default = 0];</code>
       *
       * <pre>
       ** 2级越野靴 
       * </pre>
       */
      public boolean hasXiezi2Key() {
        return ((bitField2_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 xiezi2key = 66 [default = 0];</code>
       *
       * <pre>
       ** 2级越野靴 
       * </pre>
       */
      public int getXiezi2Key() {
        return xiezi2Key_;
      }
      /**
       * <code>optional int32 xiezi2key = 66 [default = 0];</code>
       *
       * <pre>
       ** 2级越野靴 
       * </pre>
       */
      public Builder setXiezi2Key(int value) {
        bitField2_ |= 0x00000002;
        xiezi2Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiezi2key = 66 [default = 0];</code>
       *
       * <pre>
       ** 2级越野靴 
       * </pre>
       */
      public Builder clearXiezi2Key() {
        bitField2_ = (bitField2_ & ~0x00000002);
        xiezi2Key_ = 0;
        onChanged();
        return this;
      }

      private int xiezi3Key_ ;
      /**
       * <code>optional int32 xiezi3key = 67 [default = 0];</code>
       *
       * <pre>
       ** 3级越野靴 
       * </pre>
       */
      public boolean hasXiezi3Key() {
        return ((bitField2_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 xiezi3key = 67 [default = 0];</code>
       *
       * <pre>
       ** 3级越野靴 
       * </pre>
       */
      public int getXiezi3Key() {
        return xiezi3Key_;
      }
      /**
       * <code>optional int32 xiezi3key = 67 [default = 0];</code>
       *
       * <pre>
       ** 3级越野靴 
       * </pre>
       */
      public Builder setXiezi3Key(int value) {
        bitField2_ |= 0x00000004;
        xiezi3Key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiezi3key = 67 [default = 0];</code>
       *
       * <pre>
       ** 3级越野靴 
       * </pre>
       */
      public Builder clearXiezi3Key() {
        bitField2_ = (bitField2_ & ~0x00000004);
        xiezi3Key_ = 0;
        onChanged();
        return this;
      }

      private int kuangquanshuikey_ ;
      /**
       * <code>optional int32 kuangquanshuikey = 68 [default = 0];</code>
       *
       * <pre>
       ** 矿物质水 
       * </pre>
       */
      public boolean hasKuangquanshuikey() {
        return ((bitField2_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 kuangquanshuikey = 68 [default = 0];</code>
       *
       * <pre>
       ** 矿物质水 
       * </pre>
       */
      public int getKuangquanshuikey() {
        return kuangquanshuikey_;
      }
      /**
       * <code>optional int32 kuangquanshuikey = 68 [default = 0];</code>
       *
       * <pre>
       ** 矿物质水 
       * </pre>
       */
      public Builder setKuangquanshuikey(int value) {
        bitField2_ |= 0x00000008;
        kuangquanshuikey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kuangquanshuikey = 68 [default = 0];</code>
       *
       * <pre>
       ** 矿物质水 
       * </pre>
       */
      public Builder clearKuangquanshuikey() {
        bitField2_ = (bitField2_ & ~0x00000008);
        kuangquanshuikey_ = 0;
        onChanged();
        return this;
      }

      private int siliaokey_ ;
      /**
       * <code>optional int32 siliaokey = 69 [default = 0];</code>
       *
       * <pre>
       ** 饲料 
       * </pre>
       */
      public boolean hasSiliaokey() {
        return ((bitField2_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 siliaokey = 69 [default = 0];</code>
       *
       * <pre>
       ** 饲料 
       * </pre>
       */
      public int getSiliaokey() {
        return siliaokey_;
      }
      /**
       * <code>optional int32 siliaokey = 69 [default = 0];</code>
       *
       * <pre>
       ** 饲料 
       * </pre>
       */
      public Builder setSiliaokey(int value) {
        bitField2_ |= 0x00000010;
        siliaokey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 siliaokey = 69 [default = 0];</code>
       *
       * <pre>
       ** 饲料 
       * </pre>
       */
      public Builder clearSiliaokey() {
        bitField2_ = (bitField2_ & ~0x00000010);
        siliaokey_ = 0;
        onChanged();
        return this;
      }

      private int zhuroukey_ ;
      /**
       * <code>optional int32 zhuroukey = 70 [default = 0];</code>
       *
       * <pre>
       ** 猪肉 
       * </pre>
       */
      public boolean hasZhuroukey() {
        return ((bitField2_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 zhuroukey = 70 [default = 0];</code>
       *
       * <pre>
       ** 猪肉 
       * </pre>
       */
      public int getZhuroukey() {
        return zhuroukey_;
      }
      /**
       * <code>optional int32 zhuroukey = 70 [default = 0];</code>
       *
       * <pre>
       ** 猪肉 
       * </pre>
       */
      public Builder setZhuroukey(int value) {
        bitField2_ |= 0x00000020;
        zhuroukey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zhuroukey = 70 [default = 0];</code>
       *
       * <pre>
       ** 猪肉 
       * </pre>
       */
      public Builder clearZhuroukey() {
        bitField2_ = (bitField2_ & ~0x00000020);
        zhuroukey_ = 0;
        onChanged();
        return this;
      }

      private int qiyoukey_ ;
      /**
       * <code>optional int32 qiyoukey = 71 [default = 0];</code>
       *
       * <pre>
       ** 汽油 
       * </pre>
       */
      public boolean hasQiyoukey() {
        return ((bitField2_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 qiyoukey = 71 [default = 0];</code>
       *
       * <pre>
       ** 汽油 
       * </pre>
       */
      public int getQiyoukey() {
        return qiyoukey_;
      }
      /**
       * <code>optional int32 qiyoukey = 71 [default = 0];</code>
       *
       * <pre>
       ** 汽油 
       * </pre>
       */
      public Builder setQiyoukey(int value) {
        bitField2_ |= 0x00000040;
        qiyoukey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qiyoukey = 71 [default = 0];</code>
       *
       * <pre>
       ** 汽油 
       * </pre>
       */
      public Builder clearQiyoukey() {
        bitField2_ = (bitField2_ & ~0x00000040);
        qiyoukey_ = 0;
        onChanged();
        return this;
      }

      private int gangkey_ ;
      /**
       * <code>optional int32 gangkey = 72 [default = 0];</code>
       *
       * <pre>
       ** 钢 
       * </pre>
       */
      public boolean hasGangkey() {
        return ((bitField2_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 gangkey = 72 [default = 0];</code>
       *
       * <pre>
       ** 钢 
       * </pre>
       */
      public int getGangkey() {
        return gangkey_;
      }
      /**
       * <code>optional int32 gangkey = 72 [default = 0];</code>
       *
       * <pre>
       ** 钢 
       * </pre>
       */
      public Builder setGangkey(int value) {
        bitField2_ |= 0x00000080;
        gangkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gangkey = 72 [default = 0];</code>
       *
       * <pre>
       ** 钢 
       * </pre>
       */
      public Builder clearGangkey() {
        bitField2_ = (bitField2_ & ~0x00000080);
        gangkey_ = 0;
        onChanged();
        return this;
      }

      private int songmubankey_ ;
      /**
       * <code>optional int32 songmubankey = 73 [default = 0];</code>
       *
       * <pre>
       ** 松木板 
       * </pre>
       */
      public boolean hasSongmubankey() {
        return ((bitField2_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 songmubankey = 73 [default = 0];</code>
       *
       * <pre>
       ** 松木板 
       * </pre>
       */
      public int getSongmubankey() {
        return songmubankey_;
      }
      /**
       * <code>optional int32 songmubankey = 73 [default = 0];</code>
       *
       * <pre>
       ** 松木板 
       * </pre>
       */
      public Builder setSongmubankey(int value) {
        bitField2_ |= 0x00000100;
        songmubankey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 songmubankey = 73 [default = 0];</code>
       *
       * <pre>
       ** 松木板 
       * </pre>
       */
      public Builder clearSongmubankey() {
        bitField2_ = (bitField2_ & ~0x00000100);
        songmubankey_ = 0;
        onChanged();
        return this;
      }

      private int hunningtukey_ ;
      /**
       * <code>optional int32 hunningtukey = 74 [default = 0];</code>
       *
       * <pre>
       ** 混凝土 
       * </pre>
       */
      public boolean hasHunningtukey() {
        return ((bitField2_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 hunningtukey = 74 [default = 0];</code>
       *
       * <pre>
       ** 混凝土 
       * </pre>
       */
      public int getHunningtukey() {
        return hunningtukey_;
      }
      /**
       * <code>optional int32 hunningtukey = 74 [default = 0];</code>
       *
       * <pre>
       ** 混凝土 
       * </pre>
       */
      public Builder setHunningtukey(int value) {
        bitField2_ |= 0x00000200;
        hunningtukey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hunningtukey = 74 [default = 0];</code>
       *
       * <pre>
       ** 混凝土 
       * </pre>
       */
      public Builder clearHunningtukey() {
        bitField2_ = (bitField2_ & ~0x00000200);
        hunningtukey_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.framework.resource.data.WORLD_EVENTS)
    }

    static {
      defaultInstance = new WORLD_EVENTS(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.game.framework.resource.data.WORLD_EVENTS)
  }

  public interface WORLD_EVENTS_ARRAYOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.framework.resource.data.WORLD_EVENTS_ARRAY)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> 
        getItemsList();
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS getItems(int index);
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    java.util.List<? extends com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.game.framework.resource.data.WORLD_EVENTS_ARRAY}
   */
  public static final class WORLD_EVENTS_ARRAY extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.game.framework.resource.data.WORLD_EVENTS_ARRAY)
      WORLD_EVENTS_ARRAYOrBuilder {
    // Use WORLD_EVENTS_ARRAY.newBuilder() to construct.
    private WORLD_EVENTS_ARRAY(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WORLD_EVENTS_ARRAY(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WORLD_EVENTS_ARRAY defaultInstance;
    public static WORLD_EVENTS_ARRAY getDefaultInstance() {
      return defaultInstance;
    }

    public WORLD_EVENTS_ARRAY getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WORLD_EVENTS_ARRAY(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                items_ = new java.util.ArrayList<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(input.readMessage(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.class, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.Builder.class);
    }

    public static com.google.protobuf.Parser<WORLD_EVENTS_ARRAY> PARSER =
        new com.google.protobuf.AbstractParser<WORLD_EVENTS_ARRAY>() {
      public WORLD_EVENTS_ARRAY parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WORLD_EVENTS_ARRAY(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WORLD_EVENTS_ARRAY> getParserForType() {
      return PARSER;
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> items_;
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    public java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    public java.util.List<? extends com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private void initFields() {
      items_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getItemsCount(); i++) {
        if (!getItems(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.game.framework.resource.data.WORLD_EVENTS_ARRAY}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.framework.resource.data.WORLD_EVENTS_ARRAY)
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAYOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.class, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.Builder.class);
      }

      // Construct using com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor;
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY getDefaultInstanceForType() {
        return com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.getDefaultInstance();
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY build() {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY buildPartial() {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY result = new com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY) {
          return mergeFrom((com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY other) {
        if (other == com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getItemsCount(); i++) {
          if (!getItems(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = new java.util.ArrayList<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder setItems(
          int index, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder setItems(
          int index, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder addItems(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder addItems(
          int index, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder addItems(
          com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder addItems(
          int index, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public java.util.List<? extends com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.getDefaultInstance());
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.getDefaultInstance());
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.game.framework.resource.data.WORLD_EVENTS_ARRAY)
    }

    static {
      defaultInstance = new WORLD_EVENTS_ARRAY(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.game.framework.resource.data.WORLD_EVENTS_ARRAY)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_game_framework_resource_data_WORLD_EVENTS_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036proto/world_events_bytes.proto\022 com.ga" +
      "me.framework.resource.data\"\302\r\n\014WORLD_EVE" +
      "NTS\022\r\n\002id\030\001 \002(\005:\0010\022\024\n\nevent_name\030\002 \001(\t:\000" +
      "\022\024\n\nevent_desc\030\003 \001(\t:\000\022\031\n\016event_duration" +
      "\030\004 \001(\005:\0010\022\024\n\nevent_icon\030\005 \001(\t:\000\022\025\n\nevent" +
      "_prob\030\006 \001(\005:\0010\022\025\n\nzombie_atk\030\007 \001(\005:\0010\022\025\n" +
      "\nzombie_def\030\010 \001(\005:\0010\022\024\n\tzombie_hp\030\t \001(\005:" +
      "\0010\022\025\n\nzombie_num\030\n \001(\005:\0010\022\024\n\thealthkey\030\013" +
      " \001(\005:\0010\022\022\n\007moodkey\030\014 \001(\005:\0010\022\024\n\tdami_bldg" +
      "\030\r \001(\005:\0010\022\026\n\013shucai_bldg\030\016 \001(\005:\0010\022\027\n\014shu",
      "iguo_bldg\030\017 \001(\005:\0010\022\024\n\tjing_bldg\030\020 \001(\005:\0010" +
      "\022\026\n\013lushui_bldg\030\021 \001(\005:\0010\022\027\n\014songshu_bldg" +
      "\030\022 \001(\005:\0010\022\032\n\017wuxiandian_bldg\030\023 \001(\005:\0010\022\025\n" +
      "\nleida_bldg\030\024 \001(\005:\0010\022\030\n\rfengneng_bldg\030\025 " +
      "\001(\005:\0010\022\024\n\ttax_coeff\030\026 \001(\005:\0010\022\022\n\007damikey\030" +
      "\027 \001(\005:\0010\022\024\n\tshucaikey\030\030 \001(\005:\0010\022\025\n\nshuigu" +
      "okey\030\031 \001(\005:\0010\022\024\n\thuafeikey\030\032 \001(\005:\0010\022\022\n\007s" +
      "huikey\030\033 \001(\005:\0010\022\024\n\tsongmukey\030\034 \001(\005:\0010\022\024\n" +
      "\tshuinikey\030\035 \001(\005:\0010\022\021\n\006caokey\030\036 \001(\005:\0010\022\025" +
      "\n\nyuanyoukey\030\037 \001(\005:\0010\022\021\n\006tiekey\030  \001(\005:\0010",
      "\022\026\n\013jijiubaokey\030! \001(\005:\0010\022\023\n\010rizhikey\030\" \001" +
      "(\005:\0010\022\032\n\017jiqiangtuzhikey\030# \001(\005:\0010\022\027\n\014juj" +
      "ituzhikey\030$ \001(\005:\0010\022\030\n\rjipaotuzhikey\030% \001(" +
      "\005:\0010\022\032\n\017yuanlongpingkey\030& \001(\005:\0010\022\032\n\017huaf" +
      "eigongyekey\030\' \001(\005:\0010\022\025\n\nyangzhukey\030( \001(\005" +
      ":\0010\022\025\n\ncangchukey\030) \001(\005:\0010\022\024\n\ttesilakey\030" +
      "* \001(\005:\0010\022\030\n\rluokefeilekey\030+ \001(\005:\0010\022\025\n\nka" +
      "naijikey\030, \001(\005:\0010\022\023\n\010lubankey\030- \001(\005:\0010\022\022" +
      "\n\007tumukey\030. \001(\005:\0010\022\025\n\nfangdaokey\030/ \001(\005:\001" +
      "0\022\025\n\nmakeqinkey\0300 \001(\005:\0010\022\030\n\rwodefendouke",
      "y\0301 \001(\005:\0010\022\026\n\013jiatelinkey\0302 \001(\005:\0010\022\026\n\013wb" +
      "aleitekey\0303 \001(\005:\0010\022\025\n\nguanrenkey\0304 \001(\005:\001" +
      "0\022\025\n\ntoukui1key\0305 \001(\005:\0010\022\025\n\ntoukui2key\0306" +
      " \001(\005:\0010\022\025\n\ntoukui3key\0307 \001(\005:\0010\022\030\n\rshouqi" +
      "ang1key\0308 \001(\005:\0010\022\026\n\013buqiang1key\0309 \001(\005:\0010" +
      "\022\032\n\017qingjiqiang1key\030: \001(\005:\0010\022\030\n\rfangdany" +
      "i1key\030; \001(\005:\0010\022\030\n\rfangdanyi2key\030< \001(\005:\0010" +
      "\022\030\n\rfangdanyi3key\030= \001(\005:\0010\022\023\n\010kuzi1key\030>" +
      " \001(\005:\0010\022\023\n\010kuzi2key\030? \001(\005:\0010\022\023\n\010kuzi3key" +
      "\030@ \001(\005:\0010\022\024\n\txiezi1key\030A \001(\005:\0010\022\024\n\txiezi",
      "2key\030B \001(\005:\0010\022\024\n\txiezi3key\030C \001(\005:\0010\022\033\n\020k" +
      "uangquanshuikey\030D \001(\005:\0010\022\024\n\tsiliaokey\030E " +
      "\001(\005:\0010\022\024\n\tzhuroukey\030F \001(\005:\0010\022\023\n\010qiyoukey" +
      "\030G \001(\005:\0010\022\022\n\007gangkey\030H \001(\005:\0010\022\027\n\014songmub" +
      "ankey\030I \001(\005:\0010\022\027\n\014hunningtukey\030J \001(\005:\0010\"" +
      "S\n\022WORLD_EVENTS_ARRAY\022=\n\005items\030\001 \003(\0132..c" +
      "om.game.framework.resource.data.WORLD_EV" +
      "ENTS"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor,
        new java.lang.String[] { "Id", "EventName", "EventDesc", "EventDuration", "EventIcon", "EventProb", "ZombieAtk", "ZombieDef", "ZombieHp", "ZombieNum", "Healthkey", "Moodkey", "DamiBldg", "ShucaiBldg", "ShuiguoBldg", "JingBldg", "LushuiBldg", "SongshuBldg", "WuxiandianBldg", "LeidaBldg", "FengnengBldg", "TaxCoeff", "Damikey", "Shucaikey", "Shuiguokey", "Huafeikey", "Shuikey", "Songmukey", "Shuinikey", "Caokey", "Yuanyoukey", "Tiekey", "Jijiubaokey", "Rizhikey", "Jiqiangtuzhikey", "Jujituzhikey", "Jipaotuzhikey", "Yuanlongpingkey", "Huafeigongyekey", "Yangzhukey", "Cangchukey", "Tesilakey", "Luokefeilekey", "Kanaijikey", "Lubankey", "Tumukey", "Fangdaokey", "Makeqinkey", "Wodefendoukey", "Jiatelinkey", "Wbaleitekey", "Guanrenkey", "Toukui1Key", "Toukui2Key", "Toukui3Key", "Shouqiang1Key", "Buqiang1Key", "Qingjiqiang1Key", "Fangdanyi1Key", "Fangdanyi2Key", "Fangdanyi3Key", "Kuzi1Key", "Kuzi2Key", "Kuzi3Key", "Xiezi1Key", "Xiezi2Key", "Xiezi3Key", "Kuangquanshuikey", "Siliaokey", "Zhuroukey", "Qiyoukey", "Gangkey", "Songmubankey", "Hunningtukey", });
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor,
        new java.lang.String[] { "Items", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
