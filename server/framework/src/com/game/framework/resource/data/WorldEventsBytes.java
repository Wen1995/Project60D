// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/world_events_bytes.proto

package com.game.framework.resource.data;

public final class WorldEventsBytes {
  private WorldEventsBytes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface WORLD_EVENTSOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.framework.resource.data.WORLD_EVENTS)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1 [default = 0];</code>
     *
     * <pre>
     ** id 
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1 [default = 0];</code>
     *
     * <pre>
     ** id 
     * </pre>
     */
    int getId();

    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    boolean hasEventName();
    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    java.lang.String getEventName();
    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    com.google.protobuf.ByteString
        getEventNameBytes();

    /**
     * <code>optional int32 event_unlock = 3 [default = 0];</code>
     *
     * <pre>
     ** 庄园多少级可起作用和可见 
     * </pre>
     */
    boolean hasEventUnlock();
    /**
     * <code>optional int32 event_unlock = 3 [default = 0];</code>
     *
     * <pre>
     ** 庄园多少级可起作用和可见 
     * </pre>
     */
    int getEventUnlock();

    /**
     * <code>optional string event_desc = 4 [default = ""];</code>
     *
     * <pre>
     ** 事件buff描述 
     * </pre>
     */
    boolean hasEventDesc();
    /**
     * <code>optional string event_desc = 4 [default = ""];</code>
     *
     * <pre>
     ** 事件buff描述 
     * </pre>
     */
    java.lang.String getEventDesc();
    /**
     * <code>optional string event_desc = 4 [default = ""];</code>
     *
     * <pre>
     ** 事件buff描述 
     * </pre>
     */
    com.google.protobuf.ByteString
        getEventDescBytes();

    /**
     * <code>optional string event_news = 5 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内描述 
     * </pre>
     */
    boolean hasEventNews();
    /**
     * <code>optional string event_news = 5 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内描述 
     * </pre>
     */
    java.lang.String getEventNews();
    /**
     * <code>optional string event_news = 5 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内描述 
     * </pre>
     */
    com.google.protobuf.ByteString
        getEventNewsBytes();

    /**
     * <code>optional string event_newsdetail = 6 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内分析 
     * </pre>
     */
    boolean hasEventNewsdetail();
    /**
     * <code>optional string event_newsdetail = 6 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内分析 
     * </pre>
     */
    java.lang.String getEventNewsdetail();
    /**
     * <code>optional string event_newsdetail = 6 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内分析 
     * </pre>
     */
    com.google.protobuf.ByteString
        getEventNewsdetailBytes();

    /**
     * <code>optional int32 event_duration = 7 [default = 0];</code>
     *
     * <pre>
     ** 持续时间（min） 
     * </pre>
     */
    boolean hasEventDuration();
    /**
     * <code>optional int32 event_duration = 7 [default = 0];</code>
     *
     * <pre>
     ** 持续时间（min） 
     * </pre>
     */
    int getEventDuration();

    /**
     * <code>optional string event_icon = 8 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    boolean hasEventIcon();
    /**
     * <code>optional string event_icon = 8 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    java.lang.String getEventIcon();
    /**
     * <code>optional string event_icon = 8 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    com.google.protobuf.ByteString
        getEventIconBytes();

    /**
     * <code>optional int32 event_prob = 9 [default = 0];</code>
     *
     * <pre>
     ** 每分钟发生概率*100000 
     * </pre>
     */
    boolean hasEventProb();
    /**
     * <code>optional int32 event_prob = 9 [default = 0];</code>
     *
     * <pre>
     ** 每分钟发生概率*100000 
     * </pre>
     */
    int getEventProb();

    /**
     * <code>optional int32 con_prob = 10 [default = 0];</code>
     *
     * <pre>
     ** 条件成立个人buff每分钟发生概率*100000 
     * </pre>
     */
    boolean hasConProb();
    /**
     * <code>optional int32 con_prob = 10 [default = 0];</code>
     *
     * <pre>
     ** 条件成立个人buff每分钟发生概率*100000 
     * </pre>
     */
    int getConProb();

    /**
     * <code>optional int32 inva_prob = 11 [default = 0];</code>
     *
     * <pre>
     ** 僵尸入侵概率系数*100 
     * </pre>
     */
    boolean hasInvaProb();
    /**
     * <code>optional int32 inva_prob = 11 [default = 0];</code>
     *
     * <pre>
     ** 僵尸入侵概率系数*100 
     * </pre>
     */
    int getInvaProb();

    /**
     * <code>optional int32 zombie_atk = 12 [default = 0];</code>
     *
     * <pre>
     ** 攻击系数*100 
     * </pre>
     */
    boolean hasZombieAtk();
    /**
     * <code>optional int32 zombie_atk = 12 [default = 0];</code>
     *
     * <pre>
     ** 攻击系数*100 
     * </pre>
     */
    int getZombieAtk();

    /**
     * <code>optional int32 zombie_def = 13 [default = 0];</code>
     *
     * <pre>
     ** 防御系数*100 
     * </pre>
     */
    boolean hasZombieDef();
    /**
     * <code>optional int32 zombie_def = 13 [default = 0];</code>
     *
     * <pre>
     ** 防御系数*100 
     * </pre>
     */
    int getZombieDef();

    /**
     * <code>optional int32 zombie_hp = 14 [default = 0];</code>
     *
     * <pre>
     ** 血量系数*100 
     * </pre>
     */
    boolean hasZombieHp();
    /**
     * <code>optional int32 zombie_hp = 14 [default = 0];</code>
     *
     * <pre>
     ** 血量系数*100 
     * </pre>
     */
    int getZombieHp();

    /**
     * <code>optional int32 zombie_num = 15 [default = 0];</code>
     *
     * <pre>
     ** 僵尸数量系数*100 
     * </pre>
     */
    boolean hasZombieNum();
    /**
     * <code>optional int32 zombie_num = 15 [default = 0];</code>
     *
     * <pre>
     ** 僵尸数量系数*100 
     * </pre>
     */
    int getZombieNum();

    /**
     * <code>optional int32 health = 16 [default = 0];</code>
     *
     * <pre>
     ** 健康系数*100 
     * </pre>
     */
    boolean hasHealth();
    /**
     * <code>optional int32 health = 16 [default = 0];</code>
     *
     * <pre>
     ** 健康系数*100 
     * </pre>
     */
    int getHealth();

    /**
     * <code>optional int32 mood = 17 [default = 0];</code>
     *
     * <pre>
     ** 心情系数*100 
     * </pre>
     */
    boolean hasMood();
    /**
     * <code>optional int32 mood = 17 [default = 0];</code>
     *
     * <pre>
     ** 心情系数*100 
     * </pre>
     */
    int getMood();

    /**
     * <code>optional int32 dami_bldgcap = 18 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场系数*100 
     * </pre>
     */
    boolean hasDamiBldgcap();
    /**
     * <code>optional int32 dami_bldgcap = 18 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场系数*100 
     * </pre>
     */
    int getDamiBldgcap();

    /**
     * <code>optional int32 shucai_bldgcap = 19 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场系数*100 
     * </pre>
     */
    boolean hasShucaiBldgcap();
    /**
     * <code>optional int32 shucai_bldgcap = 19 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场系数*100 
     * </pre>
     */
    int getShucaiBldgcap();

    /**
     * <code>optional int32 shuiguo_bldgcap = 20 [default = 0];</code>
     *
     * <pre>
     ** 水果园系数*100 
     * </pre>
     */
    boolean hasShuiguoBldgcap();
    /**
     * <code>optional int32 shuiguo_bldgcap = 20 [default = 0];</code>
     *
     * <pre>
     ** 水果园系数*100 
     * </pre>
     */
    int getShuiguoBldgcap();

    /**
     * <code>optional int32 jing_bldgcap = 21 [default = 0];</code>
     *
     * <pre>
     ** 井系数*100 
     * </pre>
     */
    boolean hasJingBldgcap();
    /**
     * <code>optional int32 jing_bldgcap = 21 [default = 0];</code>
     *
     * <pre>
     ** 井系数*100 
     * </pre>
     */
    int getJingBldgcap();

    /**
     * <code>optional int32 lushui_bldgcap = 22 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器系数*100 
     * </pre>
     */
    boolean hasLushuiBldgcap();
    /**
     * <code>optional int32 lushui_bldgcap = 22 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器系数*100 
     * </pre>
     */
    int getLushuiBldgcap();

    /**
     * <code>optional int32 songshu_bldgcap = 23 [default = 0];</code>
     *
     * <pre>
     ** 松树林系数*100 
     * </pre>
     */
    boolean hasSongshuBldgcap();
    /**
     * <code>optional int32 songshu_bldgcap = 23 [default = 0];</code>
     *
     * <pre>
     ** 松树林系数*100 
     * </pre>
     */
    int getSongshuBldgcap();

    /**
     * <code>optional int32 dami_bldgspd = 24 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场产速系数*100 
     * </pre>
     */
    boolean hasDamiBldgspd();
    /**
     * <code>optional int32 dami_bldgspd = 24 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场产速系数*100 
     * </pre>
     */
    int getDamiBldgspd();

    /**
     * <code>optional int32 shucai_bldgspd = 25 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场产速系数*100 
     * </pre>
     */
    boolean hasShucaiBldgspd();
    /**
     * <code>optional int32 shucai_bldgspd = 25 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场产速系数*100 
     * </pre>
     */
    int getShucaiBldgspd();

    /**
     * <code>optional int32 shuiguo_bldgspd = 26 [default = 0];</code>
     *
     * <pre>
     ** 水果园产速系数*100 
     * </pre>
     */
    boolean hasShuiguoBldgspd();
    /**
     * <code>optional int32 shuiguo_bldgspd = 26 [default = 0];</code>
     *
     * <pre>
     ** 水果园产速系数*100 
     * </pre>
     */
    int getShuiguoBldgspd();

    /**
     * <code>optional int32 jing_bldgspd = 27 [default = 0];</code>
     *
     * <pre>
     ** 井产速系数*100 
     * </pre>
     */
    boolean hasJingBldgspd();
    /**
     * <code>optional int32 jing_bldgspd = 27 [default = 0];</code>
     *
     * <pre>
     ** 井产速系数*100 
     * </pre>
     */
    int getJingBldgspd();

    /**
     * <code>optional int32 lushui_bldgspd = 28 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器产速系数*100 
     * </pre>
     */
    boolean hasLushuiBldgspd();
    /**
     * <code>optional int32 lushui_bldgspd = 28 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器产速系数*100 
     * </pre>
     */
    int getLushuiBldgspd();

    /**
     * <code>optional int32 songshu_bldgspd = 29 [default = 0];</code>
     *
     * <pre>
     ** 松树林产速系数*100 
     * </pre>
     */
    boolean hasSongshuBldgspd();
    /**
     * <code>optional int32 songshu_bldgspd = 29 [default = 0];</code>
     *
     * <pre>
     ** 松树林产速系数*100 
     * </pre>
     */
    int getSongshuBldgspd();

    /**
     * <code>optional int32 fengli_bldgspd = 30 [default = 0];</code>
     *
     * <pre>
     ** 风力发电机（原太阳能）产速系数*100 
     * </pre>
     */
    boolean hasFengliBldgspd();
    /**
     * <code>optional int32 fengli_bldgspd = 30 [default = 0];</code>
     *
     * <pre>
     ** 风力发电机（原太阳能）产速系数*100 
     * </pre>
     */
    int getFengliBldgspd();

    /**
     * <code>optional int32 wuxiandian_bldg = 31 [default = 0];</code>
     *
     * <pre>
     ** 无线电提前接收系数*100 
     * </pre>
     */
    boolean hasWuxiandianBldg();
    /**
     * <code>optional int32 wuxiandian_bldg = 31 [default = 0];</code>
     *
     * <pre>
     ** 无线电提前接收系数*100 
     * </pre>
     */
    int getWuxiandianBldg();

    /**
     * <code>optional int32 leida_bldg = 32 [default = 0];</code>
     *
     * <pre>
     ** 雷达提前接收系数*100 
     * </pre>
     */
    boolean hasLeidaBldg();
    /**
     * <code>optional int32 leida_bldg = 32 [default = 0];</code>
     *
     * <pre>
     ** 雷达提前接收系数*100 
     * </pre>
     */
    int getLeidaBldg();

    /**
     * <code>optional int32 car_bldgspd = 33 [default = 0];</code>
     *
     * <pre>
     ** 车辆速度系数*100 
     * </pre>
     */
    boolean hasCarBldgspd();
    /**
     * <code>optional int32 car_bldgspd = 33 [default = 0];</code>
     *
     * <pre>
     ** 车辆速度系数*100 
     * </pre>
     */
    int getCarBldgspd();

    /**
     * <code>optional int32 tax_coeff = 34 [default = 0];</code>
     *
     * <pre>
     ** 交易税率系数*100 
     * </pre>
     */
    boolean hasTaxCoeff();
    /**
     * <code>optional int32 tax_coeff = 34 [default = 0];</code>
     *
     * <pre>
     ** 交易税率系数*100 
     * </pre>
     */
    int getTaxCoeff();

    /**
     * <code>optional int32 dami = 35 [default = 0];</code>
     *
     * <pre>
     ** 大米*100 
     * </pre>
     */
    boolean hasDami();
    /**
     * <code>optional int32 dami = 35 [default = 0];</code>
     *
     * <pre>
     ** 大米*100 
     * </pre>
     */
    int getDami();

    /**
     * <code>optional int32 shucai = 36 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜*100 
     * </pre>
     */
    boolean hasShucai();
    /**
     * <code>optional int32 shucai = 36 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜*100 
     * </pre>
     */
    int getShucai();

    /**
     * <code>optional int32 shuiguo = 37 [default = 0];</code>
     *
     * <pre>
     ** 水果*100 
     * </pre>
     */
    boolean hasShuiguo();
    /**
     * <code>optional int32 shuiguo = 37 [default = 0];</code>
     *
     * <pre>
     ** 水果*100 
     * </pre>
     */
    int getShuiguo();

    /**
     * <code>optional int32 huafei = 38 [default = 0];</code>
     *
     * <pre>
     ** 化肥*100 
     * </pre>
     */
    boolean hasHuafei();
    /**
     * <code>optional int32 huafei = 38 [default = 0];</code>
     *
     * <pre>
     ** 化肥*100 
     * </pre>
     */
    int getHuafei();

    /**
     * <code>optional int32 shui = 39 [default = 0];</code>
     *
     * <pre>
     ** 纯净水*100 
     * </pre>
     */
    boolean hasShui();
    /**
     * <code>optional int32 shui = 39 [default = 0];</code>
     *
     * <pre>
     ** 纯净水*100 
     * </pre>
     */
    int getShui();

    /**
     * <code>optional int32 songmu = 40 [default = 0];</code>
     *
     * <pre>
     ** 松木*100 
     * </pre>
     */
    boolean hasSongmu();
    /**
     * <code>optional int32 songmu = 40 [default = 0];</code>
     *
     * <pre>
     ** 松木*100 
     * </pre>
     */
    int getSongmu();

    /**
     * <code>optional int32 shuini = 41 [default = 0];</code>
     *
     * <pre>
     ** 水泥*100 
     * </pre>
     */
    boolean hasShuini();
    /**
     * <code>optional int32 shuini = 41 [default = 0];</code>
     *
     * <pre>
     ** 水泥*100 
     * </pre>
     */
    int getShuini();

    /**
     * <code>optional int32 cao = 42 [default = 0];</code>
     *
     * <pre>
     ** 草*100 
     * </pre>
     */
    boolean hasCao();
    /**
     * <code>optional int32 cao = 42 [default = 0];</code>
     *
     * <pre>
     ** 草*100 
     * </pre>
     */
    int getCao();

    /**
     * <code>optional int32 yuanyou = 43 [default = 0];</code>
     *
     * <pre>
     ** 原油*100 
     * </pre>
     */
    boolean hasYuanyou();
    /**
     * <code>optional int32 yuanyou = 43 [default = 0];</code>
     *
     * <pre>
     ** 原油*100 
     * </pre>
     */
    int getYuanyou();

    /**
     * <code>optional int32 tie = 44 [default = 0];</code>
     *
     * <pre>
     ** 铁*100 
     * </pre>
     */
    boolean hasTie();
    /**
     * <code>optional int32 tie = 44 [default = 0];</code>
     *
     * <pre>
     ** 铁*100 
     * </pre>
     */
    int getTie();

    /**
     * <code>optional int32 jijiubao = 45 [default = 0];</code>
     *
     * <pre>
     ** 急救包*100 
     * </pre>
     */
    boolean hasJijiubao();
    /**
     * <code>optional int32 jijiubao = 45 [default = 0];</code>
     *
     * <pre>
     ** 急救包*100 
     * </pre>
     */
    int getJijiubao();

    /**
     * <code>optional int32 rizhi = 46 [default = 0];</code>
     *
     * <pre>
     ** 庄园日志*100 
     * </pre>
     */
    boolean hasRizhi();
    /**
     * <code>optional int32 rizhi = 46 [default = 0];</code>
     *
     * <pre>
     ** 庄园日志*100 
     * </pre>
     */
    int getRizhi();

    /**
     * <code>optional int32 jiqiangtuzhi = 47 [default = 0];</code>
     *
     * <pre>
     ** 重机枪图纸*100 
     * </pre>
     */
    boolean hasJiqiangtuzhi();
    /**
     * <code>optional int32 jiqiangtuzhi = 47 [default = 0];</code>
     *
     * <pre>
     ** 重机枪图纸*100 
     * </pre>
     */
    int getJiqiangtuzhi();

    /**
     * <code>optional int32 jujituzhi = 48 [default = 0];</code>
     *
     * <pre>
     ** 狙击枪图纸*100 
     * </pre>
     */
    boolean hasJujituzhi();
    /**
     * <code>optional int32 jujituzhi = 48 [default = 0];</code>
     *
     * <pre>
     ** 狙击枪图纸*100 
     * </pre>
     */
    int getJujituzhi();

    /**
     * <code>optional int32 jipaotuzhi = 49 [default = 0];</code>
     *
     * <pre>
     ** 机炮设计图*100 
     * </pre>
     */
    boolean hasJipaotuzhi();
    /**
     * <code>optional int32 jipaotuzhi = 49 [default = 0];</code>
     *
     * <pre>
     ** 机炮设计图*100 
     * </pre>
     */
    int getJipaotuzhi();

    /**
     * <code>optional int32 yuanlongping = 50 [default = 0];</code>
     *
     * <pre>
     ** 《袁隆平传》*100 
     * </pre>
     */
    boolean hasYuanlongping();
    /**
     * <code>optional int32 yuanlongping = 50 [default = 0];</code>
     *
     * <pre>
     ** 《袁隆平传》*100 
     * </pre>
     */
    int getYuanlongping();

    /**
     * <code>optional int32 huafeigongye = 51 [default = 0];</code>
     *
     * <pre>
     ** 《化肥工业概论》*100 
     * </pre>
     */
    boolean hasHuafeigongye();
    /**
     * <code>optional int32 huafeigongye = 51 [default = 0];</code>
     *
     * <pre>
     ** 《化肥工业概论》*100 
     * </pre>
     */
    int getHuafeigongye();

    /**
     * <code>optional int32 yangzhu = 52 [default = 0];</code>
     *
     * <pre>
     ** 《论如何养猪》*100 
     * </pre>
     */
    boolean hasYangzhu();
    /**
     * <code>optional int32 yangzhu = 52 [default = 0];</code>
     *
     * <pre>
     ** 《论如何养猪》*100 
     * </pre>
     */
    int getYangzhu();

    /**
     * <code>optional int32 cangchu = 53 [default = 0];</code>
     *
     * <pre>
     ** 《仓储管理》*100 
     * </pre>
     */
    boolean hasCangchu();
    /**
     * <code>optional int32 cangchu = 53 [default = 0];</code>
     *
     * <pre>
     ** 《仓储管理》*100 
     * </pre>
     */
    int getCangchu();

    /**
     * <code>optional int32 tesila = 54 [default = 0];</code>
     *
     * <pre>
     ** 《特斯拉传》*100 
     * </pre>
     */
    boolean hasTesila();
    /**
     * <code>optional int32 tesila = 54 [default = 0];</code>
     *
     * <pre>
     ** 《特斯拉传》*100 
     * </pre>
     */
    int getTesila();

    /**
     * <code>optional int32 luokefeile = 55 [default = 0];</code>
     *
     * <pre>
     ** 《洛克菲勒传》*100 
     * </pre>
     */
    boolean hasLuokefeile();
    /**
     * <code>optional int32 luokefeile = 55 [default = 0];</code>
     *
     * <pre>
     ** 《洛克菲勒传》*100 
     * </pre>
     */
    int getLuokefeile();

    /**
     * <code>optional int32 kanaiji = 56 [default = 0];</code>
     *
     * <pre>
     ** 《卡耐基传》*100 
     * </pre>
     */
    boolean hasKanaiji();
    /**
     * <code>optional int32 kanaiji = 56 [default = 0];</code>
     *
     * <pre>
     ** 《卡耐基传》*100 
     * </pre>
     */
    int getKanaiji();

    /**
     * <code>optional int32 luban = 57 [default = 0];</code>
     *
     * <pre>
     ** 《鲁班传》*100 
     * </pre>
     */
    boolean hasLuban();
    /**
     * <code>optional int32 luban = 57 [default = 0];</code>
     *
     * <pre>
     ** 《鲁班传》*100 
     * </pre>
     */
    int getLuban();

    /**
     * <code>optional int32 tumu = 58 [default = 0];</code>
     *
     * <pre>
     ** 《土木工程概论》*100 
     * </pre>
     */
    boolean hasTumu();
    /**
     * <code>optional int32 tumu = 58 [default = 0];</code>
     *
     * <pre>
     ** 《土木工程概论》*100 
     * </pre>
     */
    int getTumu();

    /**
     * <code>optional int32 fangdao = 59 [default = 0];</code>
     *
     * <pre>
     ** 《防盗门技术》*100 
     * </pre>
     */
    boolean hasFangdao();
    /**
     * <code>optional int32 fangdao = 59 [default = 0];</code>
     *
     * <pre>
     ** 《防盗门技术》*100 
     * </pre>
     */
    int getFangdao();

    /**
     * <code>optional int32 makeqin = 60 [default = 0];</code>
     *
     * <pre>
     ** 《马克沁传》*100 
     * </pre>
     */
    boolean hasMakeqin();
    /**
     * <code>optional int32 makeqin = 60 [default = 0];</code>
     *
     * <pre>
     ** 《马克沁传》*100 
     * </pre>
     */
    int getMakeqin();

    /**
     * <code>optional int32 wodefendou = 61 [default = 0];</code>
     *
     * <pre>
     ** 《我的奋斗》*100 
     * </pre>
     */
    boolean hasWodefendou();
    /**
     * <code>optional int32 wodefendou = 61 [default = 0];</code>
     *
     * <pre>
     ** 《我的奋斗》*100 
     * </pre>
     */
    int getWodefendou();

    /**
     * <code>optional int32 jiatelin = 62 [default = 0];</code>
     *
     * <pre>
     ** 《加特林传》*100 
     * </pre>
     */
    boolean hasJiatelin();
    /**
     * <code>optional int32 jiatelin = 62 [default = 0];</code>
     *
     * <pre>
     ** 《加特林传》*100 
     * </pre>
     */
    int getJiatelin();

    /**
     * <code>optional int32 wbaleite = 63 [default = 0];</code>
     *
     * <pre>
     ** 《巴雷特的笔记》*100 
     * </pre>
     */
    boolean hasWbaleite();
    /**
     * <code>optional int32 wbaleite = 63 [default = 0];</code>
     *
     * <pre>
     ** 《巴雷特的笔记》*100 
     * </pre>
     */
    int getWbaleite();

    /**
     * <code>optional int32 guanren = 64 [default = 0];</code>
     *
     * <pre>
     ** 《官人吃鸡指南》*100 
     * </pre>
     */
    boolean hasGuanren();
    /**
     * <code>optional int32 guanren = 64 [default = 0];</code>
     *
     * <pre>
     ** 《官人吃鸡指南》*100 
     * </pre>
     */
    int getGuanren();

    /**
     * <code>optional int32 toukui1 = 65 [default = 0];</code>
     *
     * <pre>
     ** 1级头盔*100 
     * </pre>
     */
    boolean hasToukui1();
    /**
     * <code>optional int32 toukui1 = 65 [default = 0];</code>
     *
     * <pre>
     ** 1级头盔*100 
     * </pre>
     */
    int getToukui1();

    /**
     * <code>optional int32 toukui2 = 66 [default = 0];</code>
     *
     * <pre>
     ** 2级头盔*100 
     * </pre>
     */
    boolean hasToukui2();
    /**
     * <code>optional int32 toukui2 = 66 [default = 0];</code>
     *
     * <pre>
     ** 2级头盔*100 
     * </pre>
     */
    int getToukui2();

    /**
     * <code>optional int32 toukui3 = 67 [default = 0];</code>
     *
     * <pre>
     ** 3级头盔*100 
     * </pre>
     */
    boolean hasToukui3();
    /**
     * <code>optional int32 toukui3 = 67 [default = 0];</code>
     *
     * <pre>
     ** 3级头盔*100 
     * </pre>
     */
    int getToukui3();

    /**
     * <code>optional int32 shouqiang1 = 68 [default = 0];</code>
     *
     * <pre>
     ** 手枪*100 
     * </pre>
     */
    boolean hasShouqiang1();
    /**
     * <code>optional int32 shouqiang1 = 68 [default = 0];</code>
     *
     * <pre>
     ** 手枪*100 
     * </pre>
     */
    int getShouqiang1();

    /**
     * <code>optional int32 buqiang1 = 69 [default = 0];</code>
     *
     * <pre>
     ** 步枪*100 
     * </pre>
     */
    boolean hasBuqiang1();
    /**
     * <code>optional int32 buqiang1 = 69 [default = 0];</code>
     *
     * <pre>
     ** 步枪*100 
     * </pre>
     */
    int getBuqiang1();

    /**
     * <code>optional int32 qingjiqiang1 = 70 [default = 0];</code>
     *
     * <pre>
     ** 轻机枪*100 
     * </pre>
     */
    boolean hasQingjiqiang1();
    /**
     * <code>optional int32 qingjiqiang1 = 70 [default = 0];</code>
     *
     * <pre>
     ** 轻机枪*100 
     * </pre>
     */
    int getQingjiqiang1();

    /**
     * <code>optional int32 fangdanyi1 = 71 [default = 0];</code>
     *
     * <pre>
     ** 1级防弹衣*100 
     * </pre>
     */
    boolean hasFangdanyi1();
    /**
     * <code>optional int32 fangdanyi1 = 71 [default = 0];</code>
     *
     * <pre>
     ** 1级防弹衣*100 
     * </pre>
     */
    int getFangdanyi1();

    /**
     * <code>optional int32 fangdanyi2 = 72 [default = 0];</code>
     *
     * <pre>
     ** 2级防弹衣*100 
     * </pre>
     */
    boolean hasFangdanyi2();
    /**
     * <code>optional int32 fangdanyi2 = 72 [default = 0];</code>
     *
     * <pre>
     ** 2级防弹衣*100 
     * </pre>
     */
    int getFangdanyi2();

    /**
     * <code>optional int32 fangdanyi3 = 73 [default = 0];</code>
     *
     * <pre>
     ** 3级防弹衣*100 
     * </pre>
     */
    boolean hasFangdanyi3();
    /**
     * <code>optional int32 fangdanyi3 = 73 [default = 0];</code>
     *
     * <pre>
     ** 3级防弹衣*100 
     * </pre>
     */
    int getFangdanyi3();

    /**
     * <code>optional int32 kuzi1 = 74 [default = 0];</code>
     *
     * <pre>
     ** 1级作训裤*100 
     * </pre>
     */
    boolean hasKuzi1();
    /**
     * <code>optional int32 kuzi1 = 74 [default = 0];</code>
     *
     * <pre>
     ** 1级作训裤*100 
     * </pre>
     */
    int getKuzi1();

    /**
     * <code>optional int32 kuzi2 = 75 [default = 0];</code>
     *
     * <pre>
     ** 2级作训裤*100 
     * </pre>
     */
    boolean hasKuzi2();
    /**
     * <code>optional int32 kuzi2 = 75 [default = 0];</code>
     *
     * <pre>
     ** 2级作训裤*100 
     * </pre>
     */
    int getKuzi2();

    /**
     * <code>optional int32 kuzi3 = 76 [default = 0];</code>
     *
     * <pre>
     ** 3级作训裤*100 
     * </pre>
     */
    boolean hasKuzi3();
    /**
     * <code>optional int32 kuzi3 = 76 [default = 0];</code>
     *
     * <pre>
     ** 3级作训裤*100 
     * </pre>
     */
    int getKuzi3();

    /**
     * <code>optional int32 xiezi1 = 77 [default = 0];</code>
     *
     * <pre>
     ** 1级越野靴*100 
     * </pre>
     */
    boolean hasXiezi1();
    /**
     * <code>optional int32 xiezi1 = 77 [default = 0];</code>
     *
     * <pre>
     ** 1级越野靴*100 
     * </pre>
     */
    int getXiezi1();

    /**
     * <code>optional int32 xiezi2 = 78 [default = 0];</code>
     *
     * <pre>
     ** 2级越野靴*100 
     * </pre>
     */
    boolean hasXiezi2();
    /**
     * <code>optional int32 xiezi2 = 78 [default = 0];</code>
     *
     * <pre>
     ** 2级越野靴*100 
     * </pre>
     */
    int getXiezi2();

    /**
     * <code>optional int32 xiezi3 = 79 [default = 0];</code>
     *
     * <pre>
     ** 3级越野靴*100 
     * </pre>
     */
    boolean hasXiezi3();
    /**
     * <code>optional int32 xiezi3 = 79 [default = 0];</code>
     *
     * <pre>
     ** 3级越野靴*100 
     * </pre>
     */
    int getXiezi3();

    /**
     * <code>optional int32 kuangquanshui = 80 [default = 0];</code>
     *
     * <pre>
     ** 矿物质水*100 
     * </pre>
     */
    boolean hasKuangquanshui();
    /**
     * <code>optional int32 kuangquanshui = 80 [default = 0];</code>
     *
     * <pre>
     ** 矿物质水*100 
     * </pre>
     */
    int getKuangquanshui();

    /**
     * <code>optional int32 siliao = 81 [default = 0];</code>
     *
     * <pre>
     ** 饲料*100 
     * </pre>
     */
    boolean hasSiliao();
    /**
     * <code>optional int32 siliao = 81 [default = 0];</code>
     *
     * <pre>
     ** 饲料*100 
     * </pre>
     */
    int getSiliao();

    /**
     * <code>optional int32 zhurou = 82 [default = 0];</code>
     *
     * <pre>
     ** 猪肉*100 
     * </pre>
     */
    boolean hasZhurou();
    /**
     * <code>optional int32 zhurou = 82 [default = 0];</code>
     *
     * <pre>
     ** 猪肉*100 
     * </pre>
     */
    int getZhurou();

    /**
     * <code>optional int32 qiyou = 83 [default = 0];</code>
     *
     * <pre>
     ** 汽油*100 
     * </pre>
     */
    boolean hasQiyou();
    /**
     * <code>optional int32 qiyou = 83 [default = 0];</code>
     *
     * <pre>
     ** 汽油*100 
     * </pre>
     */
    int getQiyou();

    /**
     * <code>optional int32 gang = 84 [default = 0];</code>
     *
     * <pre>
     ** 钢*100 
     * </pre>
     */
    boolean hasGang();
    /**
     * <code>optional int32 gang = 84 [default = 0];</code>
     *
     * <pre>
     ** 钢*100 
     * </pre>
     */
    int getGang();

    /**
     * <code>optional int32 songmuban = 85 [default = 0];</code>
     *
     * <pre>
     ** 松木板*100 
     * </pre>
     */
    boolean hasSongmuban();
    /**
     * <code>optional int32 songmuban = 85 [default = 0];</code>
     *
     * <pre>
     ** 松木板*100 
     * </pre>
     */
    int getSongmuban();

    /**
     * <code>optional int32 hunningtu = 86 [default = 0];</code>
     *
     * <pre>
     ** 混凝土*100 
     * </pre>
     */
    boolean hasHunningtu();
    /**
     * <code>optional int32 hunningtu = 86 [default = 0];</code>
     *
     * <pre>
     ** 混凝土*100 
     * </pre>
     */
    int getHunningtu();
  }
  /**
   * Protobuf type {@code com.game.framework.resource.data.WORLD_EVENTS}
   */
  public static final class WORLD_EVENTS extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.game.framework.resource.data.WORLD_EVENTS)
      WORLD_EVENTSOrBuilder {
    // Use WORLD_EVENTS.newBuilder() to construct.
    private WORLD_EVENTS(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WORLD_EVENTS(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WORLD_EVENTS defaultInstance;
    public static WORLD_EVENTS getDefaultInstance() {
      return defaultInstance;
    }

    public WORLD_EVENTS getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WORLD_EVENTS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              eventName_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              eventUnlock_ = input.readInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              eventDesc_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              eventNews_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              eventNewsdetail_ = bs;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              eventDuration_ = input.readInt32();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              eventIcon_ = bs;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              eventProb_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              conProb_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              invaProb_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              zombieAtk_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              zombieDef_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              zombieHp_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              zombieNum_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              health_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              mood_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              damiBldgcap_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              shucaiBldgcap_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              shuiguoBldgcap_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              jingBldgcap_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              lushuiBldgcap_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              songshuBldgcap_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              damiBldgspd_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              shucaiBldgspd_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              shuiguoBldgspd_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              jingBldgspd_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              lushuiBldgspd_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              songshuBldgspd_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              fengliBldgspd_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              wuxiandianBldg_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              leidaBldg_ = input.readInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              carBldgspd_ = input.readInt32();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              taxCoeff_ = input.readInt32();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              dami_ = input.readInt32();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              shucai_ = input.readInt32();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000010;
              shuiguo_ = input.readInt32();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000020;
              huafei_ = input.readInt32();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000040;
              shui_ = input.readInt32();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000080;
              songmu_ = input.readInt32();
              break;
            }
            case 328: {
              bitField1_ |= 0x00000100;
              shuini_ = input.readInt32();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000200;
              cao_ = input.readInt32();
              break;
            }
            case 344: {
              bitField1_ |= 0x00000400;
              yuanyou_ = input.readInt32();
              break;
            }
            case 352: {
              bitField1_ |= 0x00000800;
              tie_ = input.readInt32();
              break;
            }
            case 360: {
              bitField1_ |= 0x00001000;
              jijiubao_ = input.readInt32();
              break;
            }
            case 368: {
              bitField1_ |= 0x00002000;
              rizhi_ = input.readInt32();
              break;
            }
            case 376: {
              bitField1_ |= 0x00004000;
              jiqiangtuzhi_ = input.readInt32();
              break;
            }
            case 384: {
              bitField1_ |= 0x00008000;
              jujituzhi_ = input.readInt32();
              break;
            }
            case 392: {
              bitField1_ |= 0x00010000;
              jipaotuzhi_ = input.readInt32();
              break;
            }
            case 400: {
              bitField1_ |= 0x00020000;
              yuanlongping_ = input.readInt32();
              break;
            }
            case 408: {
              bitField1_ |= 0x00040000;
              huafeigongye_ = input.readInt32();
              break;
            }
            case 416: {
              bitField1_ |= 0x00080000;
              yangzhu_ = input.readInt32();
              break;
            }
            case 424: {
              bitField1_ |= 0x00100000;
              cangchu_ = input.readInt32();
              break;
            }
            case 432: {
              bitField1_ |= 0x00200000;
              tesila_ = input.readInt32();
              break;
            }
            case 440: {
              bitField1_ |= 0x00400000;
              luokefeile_ = input.readInt32();
              break;
            }
            case 448: {
              bitField1_ |= 0x00800000;
              kanaiji_ = input.readInt32();
              break;
            }
            case 456: {
              bitField1_ |= 0x01000000;
              luban_ = input.readInt32();
              break;
            }
            case 464: {
              bitField1_ |= 0x02000000;
              tumu_ = input.readInt32();
              break;
            }
            case 472: {
              bitField1_ |= 0x04000000;
              fangdao_ = input.readInt32();
              break;
            }
            case 480: {
              bitField1_ |= 0x08000000;
              makeqin_ = input.readInt32();
              break;
            }
            case 488: {
              bitField1_ |= 0x10000000;
              wodefendou_ = input.readInt32();
              break;
            }
            case 496: {
              bitField1_ |= 0x20000000;
              jiatelin_ = input.readInt32();
              break;
            }
            case 504: {
              bitField1_ |= 0x40000000;
              wbaleite_ = input.readInt32();
              break;
            }
            case 512: {
              bitField1_ |= 0x80000000;
              guanren_ = input.readInt32();
              break;
            }
            case 520: {
              bitField2_ |= 0x00000001;
              toukui1_ = input.readInt32();
              break;
            }
            case 528: {
              bitField2_ |= 0x00000002;
              toukui2_ = input.readInt32();
              break;
            }
            case 536: {
              bitField2_ |= 0x00000004;
              toukui3_ = input.readInt32();
              break;
            }
            case 544: {
              bitField2_ |= 0x00000008;
              shouqiang1_ = input.readInt32();
              break;
            }
            case 552: {
              bitField2_ |= 0x00000010;
              buqiang1_ = input.readInt32();
              break;
            }
            case 560: {
              bitField2_ |= 0x00000020;
              qingjiqiang1_ = input.readInt32();
              break;
            }
            case 568: {
              bitField2_ |= 0x00000040;
              fangdanyi1_ = input.readInt32();
              break;
            }
            case 576: {
              bitField2_ |= 0x00000080;
              fangdanyi2_ = input.readInt32();
              break;
            }
            case 584: {
              bitField2_ |= 0x00000100;
              fangdanyi3_ = input.readInt32();
              break;
            }
            case 592: {
              bitField2_ |= 0x00000200;
              kuzi1_ = input.readInt32();
              break;
            }
            case 600: {
              bitField2_ |= 0x00000400;
              kuzi2_ = input.readInt32();
              break;
            }
            case 608: {
              bitField2_ |= 0x00000800;
              kuzi3_ = input.readInt32();
              break;
            }
            case 616: {
              bitField2_ |= 0x00001000;
              xiezi1_ = input.readInt32();
              break;
            }
            case 624: {
              bitField2_ |= 0x00002000;
              xiezi2_ = input.readInt32();
              break;
            }
            case 632: {
              bitField2_ |= 0x00004000;
              xiezi3_ = input.readInt32();
              break;
            }
            case 640: {
              bitField2_ |= 0x00008000;
              kuangquanshui_ = input.readInt32();
              break;
            }
            case 648: {
              bitField2_ |= 0x00010000;
              siliao_ = input.readInt32();
              break;
            }
            case 656: {
              bitField2_ |= 0x00020000;
              zhurou_ = input.readInt32();
              break;
            }
            case 664: {
              bitField2_ |= 0x00040000;
              qiyou_ = input.readInt32();
              break;
            }
            case 672: {
              bitField2_ |= 0x00080000;
              gang_ = input.readInt32();
              break;
            }
            case 680: {
              bitField2_ |= 0x00100000;
              songmuban_ = input.readInt32();
              break;
            }
            case 688: {
              bitField2_ |= 0x00200000;
              hunningtu_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.class, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder.class);
    }

    public static com.google.protobuf.Parser<WORLD_EVENTS> PARSER =
        new com.google.protobuf.AbstractParser<WORLD_EVENTS>() {
      public WORLD_EVENTS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WORLD_EVENTS(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WORLD_EVENTS> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1 [default = 0];</code>
     *
     * <pre>
     ** id 
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1 [default = 0];</code>
     *
     * <pre>
     ** id 
     * </pre>
     */
    public int getId() {
      return id_;
    }

    public static final int EVENT_NAME_FIELD_NUMBER = 2;
    private java.lang.Object eventName_;
    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    public boolean hasEventName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    public java.lang.String getEventName() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_name = 2 [default = ""];</code>
     *
     * <pre>
     ** 事件名称 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEventNameBytes() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_UNLOCK_FIELD_NUMBER = 3;
    private int eventUnlock_;
    /**
     * <code>optional int32 event_unlock = 3 [default = 0];</code>
     *
     * <pre>
     ** 庄园多少级可起作用和可见 
     * </pre>
     */
    public boolean hasEventUnlock() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 event_unlock = 3 [default = 0];</code>
     *
     * <pre>
     ** 庄园多少级可起作用和可见 
     * </pre>
     */
    public int getEventUnlock() {
      return eventUnlock_;
    }

    public static final int EVENT_DESC_FIELD_NUMBER = 4;
    private java.lang.Object eventDesc_;
    /**
     * <code>optional string event_desc = 4 [default = ""];</code>
     *
     * <pre>
     ** 事件buff描述 
     * </pre>
     */
    public boolean hasEventDesc() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string event_desc = 4 [default = ""];</code>
     *
     * <pre>
     ** 事件buff描述 
     * </pre>
     */
    public java.lang.String getEventDesc() {
      java.lang.Object ref = eventDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventDesc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_desc = 4 [default = ""];</code>
     *
     * <pre>
     ** 事件buff描述 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEventDescBytes() {
      java.lang.Object ref = eventDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_NEWS_FIELD_NUMBER = 5;
    private java.lang.Object eventNews_;
    /**
     * <code>optional string event_news = 5 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内描述 
     * </pre>
     */
    public boolean hasEventNews() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string event_news = 5 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内描述 
     * </pre>
     */
    public java.lang.String getEventNews() {
      java.lang.Object ref = eventNews_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventNews_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_news = 5 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内描述 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEventNewsBytes() {
      java.lang.Object ref = eventNews_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventNews_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_NEWSDETAIL_FIELD_NUMBER = 6;
    private java.lang.Object eventNewsdetail_;
    /**
     * <code>optional string event_newsdetail = 6 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内分析 
     * </pre>
     */
    public boolean hasEventNewsdetail() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string event_newsdetail = 6 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内分析 
     * </pre>
     */
    public java.lang.String getEventNewsdetail() {
      java.lang.Object ref = eventNewsdetail_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventNewsdetail_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_newsdetail = 6 [default = ""];</code>
     *
     * <pre>
     ** 事件新闻界面内分析 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEventNewsdetailBytes() {
      java.lang.Object ref = eventNewsdetail_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventNewsdetail_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_DURATION_FIELD_NUMBER = 7;
    private int eventDuration_;
    /**
     * <code>optional int32 event_duration = 7 [default = 0];</code>
     *
     * <pre>
     ** 持续时间（min） 
     * </pre>
     */
    public boolean hasEventDuration() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 event_duration = 7 [default = 0];</code>
     *
     * <pre>
     ** 持续时间（min） 
     * </pre>
     */
    public int getEventDuration() {
      return eventDuration_;
    }

    public static final int EVENT_ICON_FIELD_NUMBER = 8;
    private java.lang.Object eventIcon_;
    /**
     * <code>optional string event_icon = 8 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    public boolean hasEventIcon() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string event_icon = 8 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    public java.lang.String getEventIcon() {
      java.lang.Object ref = eventIcon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventIcon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_icon = 8 [default = ""];</code>
     *
     * <pre>
     ** 图标名称 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEventIconBytes() {
      java.lang.Object ref = eventIcon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventIcon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_PROB_FIELD_NUMBER = 9;
    private int eventProb_;
    /**
     * <code>optional int32 event_prob = 9 [default = 0];</code>
     *
     * <pre>
     ** 每分钟发生概率*100000 
     * </pre>
     */
    public boolean hasEventProb() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 event_prob = 9 [default = 0];</code>
     *
     * <pre>
     ** 每分钟发生概率*100000 
     * </pre>
     */
    public int getEventProb() {
      return eventProb_;
    }

    public static final int CON_PROB_FIELD_NUMBER = 10;
    private int conProb_;
    /**
     * <code>optional int32 con_prob = 10 [default = 0];</code>
     *
     * <pre>
     ** 条件成立个人buff每分钟发生概率*100000 
     * </pre>
     */
    public boolean hasConProb() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 con_prob = 10 [default = 0];</code>
     *
     * <pre>
     ** 条件成立个人buff每分钟发生概率*100000 
     * </pre>
     */
    public int getConProb() {
      return conProb_;
    }

    public static final int INVA_PROB_FIELD_NUMBER = 11;
    private int invaProb_;
    /**
     * <code>optional int32 inva_prob = 11 [default = 0];</code>
     *
     * <pre>
     ** 僵尸入侵概率系数*100 
     * </pre>
     */
    public boolean hasInvaProb() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 inva_prob = 11 [default = 0];</code>
     *
     * <pre>
     ** 僵尸入侵概率系数*100 
     * </pre>
     */
    public int getInvaProb() {
      return invaProb_;
    }

    public static final int ZOMBIE_ATK_FIELD_NUMBER = 12;
    private int zombieAtk_;
    /**
     * <code>optional int32 zombie_atk = 12 [default = 0];</code>
     *
     * <pre>
     ** 攻击系数*100 
     * </pre>
     */
    public boolean hasZombieAtk() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 zombie_atk = 12 [default = 0];</code>
     *
     * <pre>
     ** 攻击系数*100 
     * </pre>
     */
    public int getZombieAtk() {
      return zombieAtk_;
    }

    public static final int ZOMBIE_DEF_FIELD_NUMBER = 13;
    private int zombieDef_;
    /**
     * <code>optional int32 zombie_def = 13 [default = 0];</code>
     *
     * <pre>
     ** 防御系数*100 
     * </pre>
     */
    public boolean hasZombieDef() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 zombie_def = 13 [default = 0];</code>
     *
     * <pre>
     ** 防御系数*100 
     * </pre>
     */
    public int getZombieDef() {
      return zombieDef_;
    }

    public static final int ZOMBIE_HP_FIELD_NUMBER = 14;
    private int zombieHp_;
    /**
     * <code>optional int32 zombie_hp = 14 [default = 0];</code>
     *
     * <pre>
     ** 血量系数*100 
     * </pre>
     */
    public boolean hasZombieHp() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 zombie_hp = 14 [default = 0];</code>
     *
     * <pre>
     ** 血量系数*100 
     * </pre>
     */
    public int getZombieHp() {
      return zombieHp_;
    }

    public static final int ZOMBIE_NUM_FIELD_NUMBER = 15;
    private int zombieNum_;
    /**
     * <code>optional int32 zombie_num = 15 [default = 0];</code>
     *
     * <pre>
     ** 僵尸数量系数*100 
     * </pre>
     */
    public boolean hasZombieNum() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 zombie_num = 15 [default = 0];</code>
     *
     * <pre>
     ** 僵尸数量系数*100 
     * </pre>
     */
    public int getZombieNum() {
      return zombieNum_;
    }

    public static final int HEALTH_FIELD_NUMBER = 16;
    private int health_;
    /**
     * <code>optional int32 health = 16 [default = 0];</code>
     *
     * <pre>
     ** 健康系数*100 
     * </pre>
     */
    public boolean hasHealth() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 health = 16 [default = 0];</code>
     *
     * <pre>
     ** 健康系数*100 
     * </pre>
     */
    public int getHealth() {
      return health_;
    }

    public static final int MOOD_FIELD_NUMBER = 17;
    private int mood_;
    /**
     * <code>optional int32 mood = 17 [default = 0];</code>
     *
     * <pre>
     ** 心情系数*100 
     * </pre>
     */
    public boolean hasMood() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 mood = 17 [default = 0];</code>
     *
     * <pre>
     ** 心情系数*100 
     * </pre>
     */
    public int getMood() {
      return mood_;
    }

    public static final int DAMI_BLDGCAP_FIELD_NUMBER = 18;
    private int damiBldgcap_;
    /**
     * <code>optional int32 dami_bldgcap = 18 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场系数*100 
     * </pre>
     */
    public boolean hasDamiBldgcap() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 dami_bldgcap = 18 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场系数*100 
     * </pre>
     */
    public int getDamiBldgcap() {
      return damiBldgcap_;
    }

    public static final int SHUCAI_BLDGCAP_FIELD_NUMBER = 19;
    private int shucaiBldgcap_;
    /**
     * <code>optional int32 shucai_bldgcap = 19 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场系数*100 
     * </pre>
     */
    public boolean hasShucaiBldgcap() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 shucai_bldgcap = 19 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场系数*100 
     * </pre>
     */
    public int getShucaiBldgcap() {
      return shucaiBldgcap_;
    }

    public static final int SHUIGUO_BLDGCAP_FIELD_NUMBER = 20;
    private int shuiguoBldgcap_;
    /**
     * <code>optional int32 shuiguo_bldgcap = 20 [default = 0];</code>
     *
     * <pre>
     ** 水果园系数*100 
     * </pre>
     */
    public boolean hasShuiguoBldgcap() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 shuiguo_bldgcap = 20 [default = 0];</code>
     *
     * <pre>
     ** 水果园系数*100 
     * </pre>
     */
    public int getShuiguoBldgcap() {
      return shuiguoBldgcap_;
    }

    public static final int JING_BLDGCAP_FIELD_NUMBER = 21;
    private int jingBldgcap_;
    /**
     * <code>optional int32 jing_bldgcap = 21 [default = 0];</code>
     *
     * <pre>
     ** 井系数*100 
     * </pre>
     */
    public boolean hasJingBldgcap() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 jing_bldgcap = 21 [default = 0];</code>
     *
     * <pre>
     ** 井系数*100 
     * </pre>
     */
    public int getJingBldgcap() {
      return jingBldgcap_;
    }

    public static final int LUSHUI_BLDGCAP_FIELD_NUMBER = 22;
    private int lushuiBldgcap_;
    /**
     * <code>optional int32 lushui_bldgcap = 22 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器系数*100 
     * </pre>
     */
    public boolean hasLushuiBldgcap() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 lushui_bldgcap = 22 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器系数*100 
     * </pre>
     */
    public int getLushuiBldgcap() {
      return lushuiBldgcap_;
    }

    public static final int SONGSHU_BLDGCAP_FIELD_NUMBER = 23;
    private int songshuBldgcap_;
    /**
     * <code>optional int32 songshu_bldgcap = 23 [default = 0];</code>
     *
     * <pre>
     ** 松树林系数*100 
     * </pre>
     */
    public boolean hasSongshuBldgcap() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 songshu_bldgcap = 23 [default = 0];</code>
     *
     * <pre>
     ** 松树林系数*100 
     * </pre>
     */
    public int getSongshuBldgcap() {
      return songshuBldgcap_;
    }

    public static final int DAMI_BLDGSPD_FIELD_NUMBER = 24;
    private int damiBldgspd_;
    /**
     * <code>optional int32 dami_bldgspd = 24 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场产速系数*100 
     * </pre>
     */
    public boolean hasDamiBldgspd() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 dami_bldgspd = 24 [default = 0];</code>
     *
     * <pre>
     ** 水稻种植场产速系数*100 
     * </pre>
     */
    public int getDamiBldgspd() {
      return damiBldgspd_;
    }

    public static final int SHUCAI_BLDGSPD_FIELD_NUMBER = 25;
    private int shucaiBldgspd_;
    /**
     * <code>optional int32 shucai_bldgspd = 25 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场产速系数*100 
     * </pre>
     */
    public boolean hasShucaiBldgspd() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 shucai_bldgspd = 25 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜种植场产速系数*100 
     * </pre>
     */
    public int getShucaiBldgspd() {
      return shucaiBldgspd_;
    }

    public static final int SHUIGUO_BLDGSPD_FIELD_NUMBER = 26;
    private int shuiguoBldgspd_;
    /**
     * <code>optional int32 shuiguo_bldgspd = 26 [default = 0];</code>
     *
     * <pre>
     ** 水果园产速系数*100 
     * </pre>
     */
    public boolean hasShuiguoBldgspd() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 shuiguo_bldgspd = 26 [default = 0];</code>
     *
     * <pre>
     ** 水果园产速系数*100 
     * </pre>
     */
    public int getShuiguoBldgspd() {
      return shuiguoBldgspd_;
    }

    public static final int JING_BLDGSPD_FIELD_NUMBER = 27;
    private int jingBldgspd_;
    /**
     * <code>optional int32 jing_bldgspd = 27 [default = 0];</code>
     *
     * <pre>
     ** 井产速系数*100 
     * </pre>
     */
    public boolean hasJingBldgspd() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 jing_bldgspd = 27 [default = 0];</code>
     *
     * <pre>
     ** 井产速系数*100 
     * </pre>
     */
    public int getJingBldgspd() {
      return jingBldgspd_;
    }

    public static final int LUSHUI_BLDGSPD_FIELD_NUMBER = 28;
    private int lushuiBldgspd_;
    /**
     * <code>optional int32 lushui_bldgspd = 28 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器产速系数*100 
     * </pre>
     */
    public boolean hasLushuiBldgspd() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 lushui_bldgspd = 28 [default = 0];</code>
     *
     * <pre>
     ** 露水收集器产速系数*100 
     * </pre>
     */
    public int getLushuiBldgspd() {
      return lushuiBldgspd_;
    }

    public static final int SONGSHU_BLDGSPD_FIELD_NUMBER = 29;
    private int songshuBldgspd_;
    /**
     * <code>optional int32 songshu_bldgspd = 29 [default = 0];</code>
     *
     * <pre>
     ** 松树林产速系数*100 
     * </pre>
     */
    public boolean hasSongshuBldgspd() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 songshu_bldgspd = 29 [default = 0];</code>
     *
     * <pre>
     ** 松树林产速系数*100 
     * </pre>
     */
    public int getSongshuBldgspd() {
      return songshuBldgspd_;
    }

    public static final int FENGLI_BLDGSPD_FIELD_NUMBER = 30;
    private int fengliBldgspd_;
    /**
     * <code>optional int32 fengli_bldgspd = 30 [default = 0];</code>
     *
     * <pre>
     ** 风力发电机（原太阳能）产速系数*100 
     * </pre>
     */
    public boolean hasFengliBldgspd() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 fengli_bldgspd = 30 [default = 0];</code>
     *
     * <pre>
     ** 风力发电机（原太阳能）产速系数*100 
     * </pre>
     */
    public int getFengliBldgspd() {
      return fengliBldgspd_;
    }

    public static final int WUXIANDIAN_BLDG_FIELD_NUMBER = 31;
    private int wuxiandianBldg_;
    /**
     * <code>optional int32 wuxiandian_bldg = 31 [default = 0];</code>
     *
     * <pre>
     ** 无线电提前接收系数*100 
     * </pre>
     */
    public boolean hasWuxiandianBldg() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 wuxiandian_bldg = 31 [default = 0];</code>
     *
     * <pre>
     ** 无线电提前接收系数*100 
     * </pre>
     */
    public int getWuxiandianBldg() {
      return wuxiandianBldg_;
    }

    public static final int LEIDA_BLDG_FIELD_NUMBER = 32;
    private int leidaBldg_;
    /**
     * <code>optional int32 leida_bldg = 32 [default = 0];</code>
     *
     * <pre>
     ** 雷达提前接收系数*100 
     * </pre>
     */
    public boolean hasLeidaBldg() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 leida_bldg = 32 [default = 0];</code>
     *
     * <pre>
     ** 雷达提前接收系数*100 
     * </pre>
     */
    public int getLeidaBldg() {
      return leidaBldg_;
    }

    public static final int CAR_BLDGSPD_FIELD_NUMBER = 33;
    private int carBldgspd_;
    /**
     * <code>optional int32 car_bldgspd = 33 [default = 0];</code>
     *
     * <pre>
     ** 车辆速度系数*100 
     * </pre>
     */
    public boolean hasCarBldgspd() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 car_bldgspd = 33 [default = 0];</code>
     *
     * <pre>
     ** 车辆速度系数*100 
     * </pre>
     */
    public int getCarBldgspd() {
      return carBldgspd_;
    }

    public static final int TAX_COEFF_FIELD_NUMBER = 34;
    private int taxCoeff_;
    /**
     * <code>optional int32 tax_coeff = 34 [default = 0];</code>
     *
     * <pre>
     ** 交易税率系数*100 
     * </pre>
     */
    public boolean hasTaxCoeff() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 tax_coeff = 34 [default = 0];</code>
     *
     * <pre>
     ** 交易税率系数*100 
     * </pre>
     */
    public int getTaxCoeff() {
      return taxCoeff_;
    }

    public static final int DAMI_FIELD_NUMBER = 35;
    private int dami_;
    /**
     * <code>optional int32 dami = 35 [default = 0];</code>
     *
     * <pre>
     ** 大米*100 
     * </pre>
     */
    public boolean hasDami() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 dami = 35 [default = 0];</code>
     *
     * <pre>
     ** 大米*100 
     * </pre>
     */
    public int getDami() {
      return dami_;
    }

    public static final int SHUCAI_FIELD_NUMBER = 36;
    private int shucai_;
    /**
     * <code>optional int32 shucai = 36 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜*100 
     * </pre>
     */
    public boolean hasShucai() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 shucai = 36 [default = 0];</code>
     *
     * <pre>
     ** 蔬菜*100 
     * </pre>
     */
    public int getShucai() {
      return shucai_;
    }

    public static final int SHUIGUO_FIELD_NUMBER = 37;
    private int shuiguo_;
    /**
     * <code>optional int32 shuiguo = 37 [default = 0];</code>
     *
     * <pre>
     ** 水果*100 
     * </pre>
     */
    public boolean hasShuiguo() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 shuiguo = 37 [default = 0];</code>
     *
     * <pre>
     ** 水果*100 
     * </pre>
     */
    public int getShuiguo() {
      return shuiguo_;
    }

    public static final int HUAFEI_FIELD_NUMBER = 38;
    private int huafei_;
    /**
     * <code>optional int32 huafei = 38 [default = 0];</code>
     *
     * <pre>
     ** 化肥*100 
     * </pre>
     */
    public boolean hasHuafei() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 huafei = 38 [default = 0];</code>
     *
     * <pre>
     ** 化肥*100 
     * </pre>
     */
    public int getHuafei() {
      return huafei_;
    }

    public static final int SHUI_FIELD_NUMBER = 39;
    private int shui_;
    /**
     * <code>optional int32 shui = 39 [default = 0];</code>
     *
     * <pre>
     ** 纯净水*100 
     * </pre>
     */
    public boolean hasShui() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 shui = 39 [default = 0];</code>
     *
     * <pre>
     ** 纯净水*100 
     * </pre>
     */
    public int getShui() {
      return shui_;
    }

    public static final int SONGMU_FIELD_NUMBER = 40;
    private int songmu_;
    /**
     * <code>optional int32 songmu = 40 [default = 0];</code>
     *
     * <pre>
     ** 松木*100 
     * </pre>
     */
    public boolean hasSongmu() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 songmu = 40 [default = 0];</code>
     *
     * <pre>
     ** 松木*100 
     * </pre>
     */
    public int getSongmu() {
      return songmu_;
    }

    public static final int SHUINI_FIELD_NUMBER = 41;
    private int shuini_;
    /**
     * <code>optional int32 shuini = 41 [default = 0];</code>
     *
     * <pre>
     ** 水泥*100 
     * </pre>
     */
    public boolean hasShuini() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 shuini = 41 [default = 0];</code>
     *
     * <pre>
     ** 水泥*100 
     * </pre>
     */
    public int getShuini() {
      return shuini_;
    }

    public static final int CAO_FIELD_NUMBER = 42;
    private int cao_;
    /**
     * <code>optional int32 cao = 42 [default = 0];</code>
     *
     * <pre>
     ** 草*100 
     * </pre>
     */
    public boolean hasCao() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 cao = 42 [default = 0];</code>
     *
     * <pre>
     ** 草*100 
     * </pre>
     */
    public int getCao() {
      return cao_;
    }

    public static final int YUANYOU_FIELD_NUMBER = 43;
    private int yuanyou_;
    /**
     * <code>optional int32 yuanyou = 43 [default = 0];</code>
     *
     * <pre>
     ** 原油*100 
     * </pre>
     */
    public boolean hasYuanyou() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 yuanyou = 43 [default = 0];</code>
     *
     * <pre>
     ** 原油*100 
     * </pre>
     */
    public int getYuanyou() {
      return yuanyou_;
    }

    public static final int TIE_FIELD_NUMBER = 44;
    private int tie_;
    /**
     * <code>optional int32 tie = 44 [default = 0];</code>
     *
     * <pre>
     ** 铁*100 
     * </pre>
     */
    public boolean hasTie() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 tie = 44 [default = 0];</code>
     *
     * <pre>
     ** 铁*100 
     * </pre>
     */
    public int getTie() {
      return tie_;
    }

    public static final int JIJIUBAO_FIELD_NUMBER = 45;
    private int jijiubao_;
    /**
     * <code>optional int32 jijiubao = 45 [default = 0];</code>
     *
     * <pre>
     ** 急救包*100 
     * </pre>
     */
    public boolean hasJijiubao() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 jijiubao = 45 [default = 0];</code>
     *
     * <pre>
     ** 急救包*100 
     * </pre>
     */
    public int getJijiubao() {
      return jijiubao_;
    }

    public static final int RIZHI_FIELD_NUMBER = 46;
    private int rizhi_;
    /**
     * <code>optional int32 rizhi = 46 [default = 0];</code>
     *
     * <pre>
     ** 庄园日志*100 
     * </pre>
     */
    public boolean hasRizhi() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 rizhi = 46 [default = 0];</code>
     *
     * <pre>
     ** 庄园日志*100 
     * </pre>
     */
    public int getRizhi() {
      return rizhi_;
    }

    public static final int JIQIANGTUZHI_FIELD_NUMBER = 47;
    private int jiqiangtuzhi_;
    /**
     * <code>optional int32 jiqiangtuzhi = 47 [default = 0];</code>
     *
     * <pre>
     ** 重机枪图纸*100 
     * </pre>
     */
    public boolean hasJiqiangtuzhi() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 jiqiangtuzhi = 47 [default = 0];</code>
     *
     * <pre>
     ** 重机枪图纸*100 
     * </pre>
     */
    public int getJiqiangtuzhi() {
      return jiqiangtuzhi_;
    }

    public static final int JUJITUZHI_FIELD_NUMBER = 48;
    private int jujituzhi_;
    /**
     * <code>optional int32 jujituzhi = 48 [default = 0];</code>
     *
     * <pre>
     ** 狙击枪图纸*100 
     * </pre>
     */
    public boolean hasJujituzhi() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 jujituzhi = 48 [default = 0];</code>
     *
     * <pre>
     ** 狙击枪图纸*100 
     * </pre>
     */
    public int getJujituzhi() {
      return jujituzhi_;
    }

    public static final int JIPAOTUZHI_FIELD_NUMBER = 49;
    private int jipaotuzhi_;
    /**
     * <code>optional int32 jipaotuzhi = 49 [default = 0];</code>
     *
     * <pre>
     ** 机炮设计图*100 
     * </pre>
     */
    public boolean hasJipaotuzhi() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 jipaotuzhi = 49 [default = 0];</code>
     *
     * <pre>
     ** 机炮设计图*100 
     * </pre>
     */
    public int getJipaotuzhi() {
      return jipaotuzhi_;
    }

    public static final int YUANLONGPING_FIELD_NUMBER = 50;
    private int yuanlongping_;
    /**
     * <code>optional int32 yuanlongping = 50 [default = 0];</code>
     *
     * <pre>
     ** 《袁隆平传》*100 
     * </pre>
     */
    public boolean hasYuanlongping() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 yuanlongping = 50 [default = 0];</code>
     *
     * <pre>
     ** 《袁隆平传》*100 
     * </pre>
     */
    public int getYuanlongping() {
      return yuanlongping_;
    }

    public static final int HUAFEIGONGYE_FIELD_NUMBER = 51;
    private int huafeigongye_;
    /**
     * <code>optional int32 huafeigongye = 51 [default = 0];</code>
     *
     * <pre>
     ** 《化肥工业概论》*100 
     * </pre>
     */
    public boolean hasHuafeigongye() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 huafeigongye = 51 [default = 0];</code>
     *
     * <pre>
     ** 《化肥工业概论》*100 
     * </pre>
     */
    public int getHuafeigongye() {
      return huafeigongye_;
    }

    public static final int YANGZHU_FIELD_NUMBER = 52;
    private int yangzhu_;
    /**
     * <code>optional int32 yangzhu = 52 [default = 0];</code>
     *
     * <pre>
     ** 《论如何养猪》*100 
     * </pre>
     */
    public boolean hasYangzhu() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 yangzhu = 52 [default = 0];</code>
     *
     * <pre>
     ** 《论如何养猪》*100 
     * </pre>
     */
    public int getYangzhu() {
      return yangzhu_;
    }

    public static final int CANGCHU_FIELD_NUMBER = 53;
    private int cangchu_;
    /**
     * <code>optional int32 cangchu = 53 [default = 0];</code>
     *
     * <pre>
     ** 《仓储管理》*100 
     * </pre>
     */
    public boolean hasCangchu() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 cangchu = 53 [default = 0];</code>
     *
     * <pre>
     ** 《仓储管理》*100 
     * </pre>
     */
    public int getCangchu() {
      return cangchu_;
    }

    public static final int TESILA_FIELD_NUMBER = 54;
    private int tesila_;
    /**
     * <code>optional int32 tesila = 54 [default = 0];</code>
     *
     * <pre>
     ** 《特斯拉传》*100 
     * </pre>
     */
    public boolean hasTesila() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 tesila = 54 [default = 0];</code>
     *
     * <pre>
     ** 《特斯拉传》*100 
     * </pre>
     */
    public int getTesila() {
      return tesila_;
    }

    public static final int LUOKEFEILE_FIELD_NUMBER = 55;
    private int luokefeile_;
    /**
     * <code>optional int32 luokefeile = 55 [default = 0];</code>
     *
     * <pre>
     ** 《洛克菲勒传》*100 
     * </pre>
     */
    public boolean hasLuokefeile() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 luokefeile = 55 [default = 0];</code>
     *
     * <pre>
     ** 《洛克菲勒传》*100 
     * </pre>
     */
    public int getLuokefeile() {
      return luokefeile_;
    }

    public static final int KANAIJI_FIELD_NUMBER = 56;
    private int kanaiji_;
    /**
     * <code>optional int32 kanaiji = 56 [default = 0];</code>
     *
     * <pre>
     ** 《卡耐基传》*100 
     * </pre>
     */
    public boolean hasKanaiji() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 kanaiji = 56 [default = 0];</code>
     *
     * <pre>
     ** 《卡耐基传》*100 
     * </pre>
     */
    public int getKanaiji() {
      return kanaiji_;
    }

    public static final int LUBAN_FIELD_NUMBER = 57;
    private int luban_;
    /**
     * <code>optional int32 luban = 57 [default = 0];</code>
     *
     * <pre>
     ** 《鲁班传》*100 
     * </pre>
     */
    public boolean hasLuban() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 luban = 57 [default = 0];</code>
     *
     * <pre>
     ** 《鲁班传》*100 
     * </pre>
     */
    public int getLuban() {
      return luban_;
    }

    public static final int TUMU_FIELD_NUMBER = 58;
    private int tumu_;
    /**
     * <code>optional int32 tumu = 58 [default = 0];</code>
     *
     * <pre>
     ** 《土木工程概论》*100 
     * </pre>
     */
    public boolean hasTumu() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 tumu = 58 [default = 0];</code>
     *
     * <pre>
     ** 《土木工程概论》*100 
     * </pre>
     */
    public int getTumu() {
      return tumu_;
    }

    public static final int FANGDAO_FIELD_NUMBER = 59;
    private int fangdao_;
    /**
     * <code>optional int32 fangdao = 59 [default = 0];</code>
     *
     * <pre>
     ** 《防盗门技术》*100 
     * </pre>
     */
    public boolean hasFangdao() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 fangdao = 59 [default = 0];</code>
     *
     * <pre>
     ** 《防盗门技术》*100 
     * </pre>
     */
    public int getFangdao() {
      return fangdao_;
    }

    public static final int MAKEQIN_FIELD_NUMBER = 60;
    private int makeqin_;
    /**
     * <code>optional int32 makeqin = 60 [default = 0];</code>
     *
     * <pre>
     ** 《马克沁传》*100 
     * </pre>
     */
    public boolean hasMakeqin() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 makeqin = 60 [default = 0];</code>
     *
     * <pre>
     ** 《马克沁传》*100 
     * </pre>
     */
    public int getMakeqin() {
      return makeqin_;
    }

    public static final int WODEFENDOU_FIELD_NUMBER = 61;
    private int wodefendou_;
    /**
     * <code>optional int32 wodefendou = 61 [default = 0];</code>
     *
     * <pre>
     ** 《我的奋斗》*100 
     * </pre>
     */
    public boolean hasWodefendou() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 wodefendou = 61 [default = 0];</code>
     *
     * <pre>
     ** 《我的奋斗》*100 
     * </pre>
     */
    public int getWodefendou() {
      return wodefendou_;
    }

    public static final int JIATELIN_FIELD_NUMBER = 62;
    private int jiatelin_;
    /**
     * <code>optional int32 jiatelin = 62 [default = 0];</code>
     *
     * <pre>
     ** 《加特林传》*100 
     * </pre>
     */
    public boolean hasJiatelin() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 jiatelin = 62 [default = 0];</code>
     *
     * <pre>
     ** 《加特林传》*100 
     * </pre>
     */
    public int getJiatelin() {
      return jiatelin_;
    }

    public static final int WBALEITE_FIELD_NUMBER = 63;
    private int wbaleite_;
    /**
     * <code>optional int32 wbaleite = 63 [default = 0];</code>
     *
     * <pre>
     ** 《巴雷特的笔记》*100 
     * </pre>
     */
    public boolean hasWbaleite() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 wbaleite = 63 [default = 0];</code>
     *
     * <pre>
     ** 《巴雷特的笔记》*100 
     * </pre>
     */
    public int getWbaleite() {
      return wbaleite_;
    }

    public static final int GUANREN_FIELD_NUMBER = 64;
    private int guanren_;
    /**
     * <code>optional int32 guanren = 64 [default = 0];</code>
     *
     * <pre>
     ** 《官人吃鸡指南》*100 
     * </pre>
     */
    public boolean hasGuanren() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 guanren = 64 [default = 0];</code>
     *
     * <pre>
     ** 《官人吃鸡指南》*100 
     * </pre>
     */
    public int getGuanren() {
      return guanren_;
    }

    public static final int TOUKUI1_FIELD_NUMBER = 65;
    private int toukui1_;
    /**
     * <code>optional int32 toukui1 = 65 [default = 0];</code>
     *
     * <pre>
     ** 1级头盔*100 
     * </pre>
     */
    public boolean hasToukui1() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 toukui1 = 65 [default = 0];</code>
     *
     * <pre>
     ** 1级头盔*100 
     * </pre>
     */
    public int getToukui1() {
      return toukui1_;
    }

    public static final int TOUKUI2_FIELD_NUMBER = 66;
    private int toukui2_;
    /**
     * <code>optional int32 toukui2 = 66 [default = 0];</code>
     *
     * <pre>
     ** 2级头盔*100 
     * </pre>
     */
    public boolean hasToukui2() {
      return ((bitField2_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 toukui2 = 66 [default = 0];</code>
     *
     * <pre>
     ** 2级头盔*100 
     * </pre>
     */
    public int getToukui2() {
      return toukui2_;
    }

    public static final int TOUKUI3_FIELD_NUMBER = 67;
    private int toukui3_;
    /**
     * <code>optional int32 toukui3 = 67 [default = 0];</code>
     *
     * <pre>
     ** 3级头盔*100 
     * </pre>
     */
    public boolean hasToukui3() {
      return ((bitField2_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 toukui3 = 67 [default = 0];</code>
     *
     * <pre>
     ** 3级头盔*100 
     * </pre>
     */
    public int getToukui3() {
      return toukui3_;
    }

    public static final int SHOUQIANG1_FIELD_NUMBER = 68;
    private int shouqiang1_;
    /**
     * <code>optional int32 shouqiang1 = 68 [default = 0];</code>
     *
     * <pre>
     ** 手枪*100 
     * </pre>
     */
    public boolean hasShouqiang1() {
      return ((bitField2_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 shouqiang1 = 68 [default = 0];</code>
     *
     * <pre>
     ** 手枪*100 
     * </pre>
     */
    public int getShouqiang1() {
      return shouqiang1_;
    }

    public static final int BUQIANG1_FIELD_NUMBER = 69;
    private int buqiang1_;
    /**
     * <code>optional int32 buqiang1 = 69 [default = 0];</code>
     *
     * <pre>
     ** 步枪*100 
     * </pre>
     */
    public boolean hasBuqiang1() {
      return ((bitField2_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 buqiang1 = 69 [default = 0];</code>
     *
     * <pre>
     ** 步枪*100 
     * </pre>
     */
    public int getBuqiang1() {
      return buqiang1_;
    }

    public static final int QINGJIQIANG1_FIELD_NUMBER = 70;
    private int qingjiqiang1_;
    /**
     * <code>optional int32 qingjiqiang1 = 70 [default = 0];</code>
     *
     * <pre>
     ** 轻机枪*100 
     * </pre>
     */
    public boolean hasQingjiqiang1() {
      return ((bitField2_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 qingjiqiang1 = 70 [default = 0];</code>
     *
     * <pre>
     ** 轻机枪*100 
     * </pre>
     */
    public int getQingjiqiang1() {
      return qingjiqiang1_;
    }

    public static final int FANGDANYI1_FIELD_NUMBER = 71;
    private int fangdanyi1_;
    /**
     * <code>optional int32 fangdanyi1 = 71 [default = 0];</code>
     *
     * <pre>
     ** 1级防弹衣*100 
     * </pre>
     */
    public boolean hasFangdanyi1() {
      return ((bitField2_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 fangdanyi1 = 71 [default = 0];</code>
     *
     * <pre>
     ** 1级防弹衣*100 
     * </pre>
     */
    public int getFangdanyi1() {
      return fangdanyi1_;
    }

    public static final int FANGDANYI2_FIELD_NUMBER = 72;
    private int fangdanyi2_;
    /**
     * <code>optional int32 fangdanyi2 = 72 [default = 0];</code>
     *
     * <pre>
     ** 2级防弹衣*100 
     * </pre>
     */
    public boolean hasFangdanyi2() {
      return ((bitField2_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 fangdanyi2 = 72 [default = 0];</code>
     *
     * <pre>
     ** 2级防弹衣*100 
     * </pre>
     */
    public int getFangdanyi2() {
      return fangdanyi2_;
    }

    public static final int FANGDANYI3_FIELD_NUMBER = 73;
    private int fangdanyi3_;
    /**
     * <code>optional int32 fangdanyi3 = 73 [default = 0];</code>
     *
     * <pre>
     ** 3级防弹衣*100 
     * </pre>
     */
    public boolean hasFangdanyi3() {
      return ((bitField2_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 fangdanyi3 = 73 [default = 0];</code>
     *
     * <pre>
     ** 3级防弹衣*100 
     * </pre>
     */
    public int getFangdanyi3() {
      return fangdanyi3_;
    }

    public static final int KUZI1_FIELD_NUMBER = 74;
    private int kuzi1_;
    /**
     * <code>optional int32 kuzi1 = 74 [default = 0];</code>
     *
     * <pre>
     ** 1级作训裤*100 
     * </pre>
     */
    public boolean hasKuzi1() {
      return ((bitField2_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 kuzi1 = 74 [default = 0];</code>
     *
     * <pre>
     ** 1级作训裤*100 
     * </pre>
     */
    public int getKuzi1() {
      return kuzi1_;
    }

    public static final int KUZI2_FIELD_NUMBER = 75;
    private int kuzi2_;
    /**
     * <code>optional int32 kuzi2 = 75 [default = 0];</code>
     *
     * <pre>
     ** 2级作训裤*100 
     * </pre>
     */
    public boolean hasKuzi2() {
      return ((bitField2_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 kuzi2 = 75 [default = 0];</code>
     *
     * <pre>
     ** 2级作训裤*100 
     * </pre>
     */
    public int getKuzi2() {
      return kuzi2_;
    }

    public static final int KUZI3_FIELD_NUMBER = 76;
    private int kuzi3_;
    /**
     * <code>optional int32 kuzi3 = 76 [default = 0];</code>
     *
     * <pre>
     ** 3级作训裤*100 
     * </pre>
     */
    public boolean hasKuzi3() {
      return ((bitField2_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 kuzi3 = 76 [default = 0];</code>
     *
     * <pre>
     ** 3级作训裤*100 
     * </pre>
     */
    public int getKuzi3() {
      return kuzi3_;
    }

    public static final int XIEZI1_FIELD_NUMBER = 77;
    private int xiezi1_;
    /**
     * <code>optional int32 xiezi1 = 77 [default = 0];</code>
     *
     * <pre>
     ** 1级越野靴*100 
     * </pre>
     */
    public boolean hasXiezi1() {
      return ((bitField2_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 xiezi1 = 77 [default = 0];</code>
     *
     * <pre>
     ** 1级越野靴*100 
     * </pre>
     */
    public int getXiezi1() {
      return xiezi1_;
    }

    public static final int XIEZI2_FIELD_NUMBER = 78;
    private int xiezi2_;
    /**
     * <code>optional int32 xiezi2 = 78 [default = 0];</code>
     *
     * <pre>
     ** 2级越野靴*100 
     * </pre>
     */
    public boolean hasXiezi2() {
      return ((bitField2_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 xiezi2 = 78 [default = 0];</code>
     *
     * <pre>
     ** 2级越野靴*100 
     * </pre>
     */
    public int getXiezi2() {
      return xiezi2_;
    }

    public static final int XIEZI3_FIELD_NUMBER = 79;
    private int xiezi3_;
    /**
     * <code>optional int32 xiezi3 = 79 [default = 0];</code>
     *
     * <pre>
     ** 3级越野靴*100 
     * </pre>
     */
    public boolean hasXiezi3() {
      return ((bitField2_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 xiezi3 = 79 [default = 0];</code>
     *
     * <pre>
     ** 3级越野靴*100 
     * </pre>
     */
    public int getXiezi3() {
      return xiezi3_;
    }

    public static final int KUANGQUANSHUI_FIELD_NUMBER = 80;
    private int kuangquanshui_;
    /**
     * <code>optional int32 kuangquanshui = 80 [default = 0];</code>
     *
     * <pre>
     ** 矿物质水*100 
     * </pre>
     */
    public boolean hasKuangquanshui() {
      return ((bitField2_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 kuangquanshui = 80 [default = 0];</code>
     *
     * <pre>
     ** 矿物质水*100 
     * </pre>
     */
    public int getKuangquanshui() {
      return kuangquanshui_;
    }

    public static final int SILIAO_FIELD_NUMBER = 81;
    private int siliao_;
    /**
     * <code>optional int32 siliao = 81 [default = 0];</code>
     *
     * <pre>
     ** 饲料*100 
     * </pre>
     */
    public boolean hasSiliao() {
      return ((bitField2_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 siliao = 81 [default = 0];</code>
     *
     * <pre>
     ** 饲料*100 
     * </pre>
     */
    public int getSiliao() {
      return siliao_;
    }

    public static final int ZHUROU_FIELD_NUMBER = 82;
    private int zhurou_;
    /**
     * <code>optional int32 zhurou = 82 [default = 0];</code>
     *
     * <pre>
     ** 猪肉*100 
     * </pre>
     */
    public boolean hasZhurou() {
      return ((bitField2_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 zhurou = 82 [default = 0];</code>
     *
     * <pre>
     ** 猪肉*100 
     * </pre>
     */
    public int getZhurou() {
      return zhurou_;
    }

    public static final int QIYOU_FIELD_NUMBER = 83;
    private int qiyou_;
    /**
     * <code>optional int32 qiyou = 83 [default = 0];</code>
     *
     * <pre>
     ** 汽油*100 
     * </pre>
     */
    public boolean hasQiyou() {
      return ((bitField2_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 qiyou = 83 [default = 0];</code>
     *
     * <pre>
     ** 汽油*100 
     * </pre>
     */
    public int getQiyou() {
      return qiyou_;
    }

    public static final int GANG_FIELD_NUMBER = 84;
    private int gang_;
    /**
     * <code>optional int32 gang = 84 [default = 0];</code>
     *
     * <pre>
     ** 钢*100 
     * </pre>
     */
    public boolean hasGang() {
      return ((bitField2_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 gang = 84 [default = 0];</code>
     *
     * <pre>
     ** 钢*100 
     * </pre>
     */
    public int getGang() {
      return gang_;
    }

    public static final int SONGMUBAN_FIELD_NUMBER = 85;
    private int songmuban_;
    /**
     * <code>optional int32 songmuban = 85 [default = 0];</code>
     *
     * <pre>
     ** 松木板*100 
     * </pre>
     */
    public boolean hasSongmuban() {
      return ((bitField2_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 songmuban = 85 [default = 0];</code>
     *
     * <pre>
     ** 松木板*100 
     * </pre>
     */
    public int getSongmuban() {
      return songmuban_;
    }

    public static final int HUNNINGTU_FIELD_NUMBER = 86;
    private int hunningtu_;
    /**
     * <code>optional int32 hunningtu = 86 [default = 0];</code>
     *
     * <pre>
     ** 混凝土*100 
     * </pre>
     */
    public boolean hasHunningtu() {
      return ((bitField2_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 hunningtu = 86 [default = 0];</code>
     *
     * <pre>
     ** 混凝土*100 
     * </pre>
     */
    public int getHunningtu() {
      return hunningtu_;
    }

    private void initFields() {
      id_ = 0;
      eventName_ = "";
      eventUnlock_ = 0;
      eventDesc_ = "";
      eventNews_ = "";
      eventNewsdetail_ = "";
      eventDuration_ = 0;
      eventIcon_ = "";
      eventProb_ = 0;
      conProb_ = 0;
      invaProb_ = 0;
      zombieAtk_ = 0;
      zombieDef_ = 0;
      zombieHp_ = 0;
      zombieNum_ = 0;
      health_ = 0;
      mood_ = 0;
      damiBldgcap_ = 0;
      shucaiBldgcap_ = 0;
      shuiguoBldgcap_ = 0;
      jingBldgcap_ = 0;
      lushuiBldgcap_ = 0;
      songshuBldgcap_ = 0;
      damiBldgspd_ = 0;
      shucaiBldgspd_ = 0;
      shuiguoBldgspd_ = 0;
      jingBldgspd_ = 0;
      lushuiBldgspd_ = 0;
      songshuBldgspd_ = 0;
      fengliBldgspd_ = 0;
      wuxiandianBldg_ = 0;
      leidaBldg_ = 0;
      carBldgspd_ = 0;
      taxCoeff_ = 0;
      dami_ = 0;
      shucai_ = 0;
      shuiguo_ = 0;
      huafei_ = 0;
      shui_ = 0;
      songmu_ = 0;
      shuini_ = 0;
      cao_ = 0;
      yuanyou_ = 0;
      tie_ = 0;
      jijiubao_ = 0;
      rizhi_ = 0;
      jiqiangtuzhi_ = 0;
      jujituzhi_ = 0;
      jipaotuzhi_ = 0;
      yuanlongping_ = 0;
      huafeigongye_ = 0;
      yangzhu_ = 0;
      cangchu_ = 0;
      tesila_ = 0;
      luokefeile_ = 0;
      kanaiji_ = 0;
      luban_ = 0;
      tumu_ = 0;
      fangdao_ = 0;
      makeqin_ = 0;
      wodefendou_ = 0;
      jiatelin_ = 0;
      wbaleite_ = 0;
      guanren_ = 0;
      toukui1_ = 0;
      toukui2_ = 0;
      toukui3_ = 0;
      shouqiang1_ = 0;
      buqiang1_ = 0;
      qingjiqiang1_ = 0;
      fangdanyi1_ = 0;
      fangdanyi2_ = 0;
      fangdanyi3_ = 0;
      kuzi1_ = 0;
      kuzi2_ = 0;
      kuzi3_ = 0;
      xiezi1_ = 0;
      xiezi2_ = 0;
      xiezi3_ = 0;
      kuangquanshui_ = 0;
      siliao_ = 0;
      zhurou_ = 0;
      qiyou_ = 0;
      gang_ = 0;
      songmuban_ = 0;
      hunningtu_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEventNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, eventUnlock_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getEventDescBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getEventNewsBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getEventNewsdetailBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, eventDuration_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getEventIconBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, eventProb_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, conProb_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, invaProb_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, zombieAtk_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, zombieDef_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, zombieHp_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, zombieNum_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, health_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, mood_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, damiBldgcap_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, shucaiBldgcap_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, shuiguoBldgcap_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, jingBldgcap_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, lushuiBldgcap_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, songshuBldgcap_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(24, damiBldgspd_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, shucaiBldgspd_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(26, shuiguoBldgspd_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(27, jingBldgspd_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(28, lushuiBldgspd_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(29, songshuBldgspd_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(30, fengliBldgspd_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(31, wuxiandianBldg_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(32, leidaBldg_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(33, carBldgspd_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(34, taxCoeff_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(35, dami_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(36, shucai_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(37, shuiguo_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(38, huafei_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(39, shui_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(40, songmu_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(41, shuini_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(42, cao_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(43, yuanyou_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(44, tie_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(45, jijiubao_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(46, rizhi_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(47, jiqiangtuzhi_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(48, jujituzhi_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(49, jipaotuzhi_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(50, yuanlongping_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(51, huafeigongye_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(52, yangzhu_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(53, cangchu_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(54, tesila_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(55, luokefeile_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(56, kanaiji_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(57, luban_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(58, tumu_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(59, fangdao_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(60, makeqin_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(61, wodefendou_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(62, jiatelin_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(63, wbaleite_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(64, guanren_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(65, toukui1_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(66, toukui2_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(67, toukui3_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(68, shouqiang1_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(69, buqiang1_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(70, qingjiqiang1_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(71, fangdanyi1_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(72, fangdanyi2_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(73, fangdanyi3_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(74, kuzi1_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(75, kuzi2_);
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(76, kuzi3_);
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(77, xiezi1_);
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(78, xiezi2_);
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(79, xiezi3_);
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(80, kuangquanshui_);
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(81, siliao_);
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(82, zhurou_);
      }
      if (((bitField2_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(83, qiyou_);
      }
      if (((bitField2_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(84, gang_);
      }
      if (((bitField2_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(85, songmuban_);
      }
      if (((bitField2_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(86, hunningtu_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEventNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, eventUnlock_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getEventDescBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getEventNewsBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getEventNewsdetailBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, eventDuration_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getEventIconBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, eventProb_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, conProb_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, invaProb_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, zombieAtk_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, zombieDef_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, zombieHp_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, zombieNum_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, health_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, mood_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, damiBldgcap_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, shucaiBldgcap_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, shuiguoBldgcap_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, jingBldgcap_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, lushuiBldgcap_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, songshuBldgcap_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, damiBldgspd_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, shucaiBldgspd_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, shuiguoBldgspd_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, jingBldgspd_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, lushuiBldgspd_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, songshuBldgspd_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, fengliBldgspd_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, wuxiandianBldg_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, leidaBldg_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, carBldgspd_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, taxCoeff_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(35, dami_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, shucai_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, shuiguo_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, huafei_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, shui_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(40, songmu_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(41, shuini_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(42, cao_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(43, yuanyou_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(44, tie_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(45, jijiubao_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, rizhi_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(47, jiqiangtuzhi_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, jujituzhi_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(49, jipaotuzhi_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(50, yuanlongping_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(51, huafeigongye_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(52, yangzhu_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(53, cangchu_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(54, tesila_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(55, luokefeile_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(56, kanaiji_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(57, luban_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(58, tumu_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(59, fangdao_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(60, makeqin_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(61, wodefendou_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(62, jiatelin_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(63, wbaleite_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(64, guanren_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(65, toukui1_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(66, toukui2_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(67, toukui3_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(68, shouqiang1_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(69, buqiang1_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(70, qingjiqiang1_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(71, fangdanyi1_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(72, fangdanyi2_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(73, fangdanyi3_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(74, kuzi1_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(75, kuzi2_);
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(76, kuzi3_);
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(77, xiezi1_);
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(78, xiezi2_);
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(79, xiezi3_);
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(80, kuangquanshui_);
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(81, siliao_);
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(82, zhurou_);
      }
      if (((bitField2_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(83, qiyou_);
      }
      if (((bitField2_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(84, gang_);
      }
      if (((bitField2_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(85, songmuban_);
      }
      if (((bitField2_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(86, hunningtu_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.game.framework.resource.data.WORLD_EVENTS}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.framework.resource.data.WORLD_EVENTS)
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.class, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder.class);
      }

      // Construct using com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        eventUnlock_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        eventDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        eventNews_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        eventNewsdetail_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        eventDuration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        eventIcon_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        eventProb_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        conProb_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        invaProb_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        zombieAtk_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        zombieDef_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        zombieHp_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        zombieNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        health_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        mood_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        damiBldgcap_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        shucaiBldgcap_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        shuiguoBldgcap_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        jingBldgcap_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        lushuiBldgcap_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        songshuBldgcap_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        damiBldgspd_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        shucaiBldgspd_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        shuiguoBldgspd_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        jingBldgspd_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        lushuiBldgspd_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        songshuBldgspd_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        fengliBldgspd_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        wuxiandianBldg_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        leidaBldg_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        carBldgspd_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        taxCoeff_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        dami_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        shucai_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        shuiguo_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        huafei_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        shui_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        songmu_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        shuini_ = 0;
        bitField1_ = (bitField1_ & ~0x00000100);
        cao_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        yuanyou_ = 0;
        bitField1_ = (bitField1_ & ~0x00000400);
        tie_ = 0;
        bitField1_ = (bitField1_ & ~0x00000800);
        jijiubao_ = 0;
        bitField1_ = (bitField1_ & ~0x00001000);
        rizhi_ = 0;
        bitField1_ = (bitField1_ & ~0x00002000);
        jiqiangtuzhi_ = 0;
        bitField1_ = (bitField1_ & ~0x00004000);
        jujituzhi_ = 0;
        bitField1_ = (bitField1_ & ~0x00008000);
        jipaotuzhi_ = 0;
        bitField1_ = (bitField1_ & ~0x00010000);
        yuanlongping_ = 0;
        bitField1_ = (bitField1_ & ~0x00020000);
        huafeigongye_ = 0;
        bitField1_ = (bitField1_ & ~0x00040000);
        yangzhu_ = 0;
        bitField1_ = (bitField1_ & ~0x00080000);
        cangchu_ = 0;
        bitField1_ = (bitField1_ & ~0x00100000);
        tesila_ = 0;
        bitField1_ = (bitField1_ & ~0x00200000);
        luokefeile_ = 0;
        bitField1_ = (bitField1_ & ~0x00400000);
        kanaiji_ = 0;
        bitField1_ = (bitField1_ & ~0x00800000);
        luban_ = 0;
        bitField1_ = (bitField1_ & ~0x01000000);
        tumu_ = 0;
        bitField1_ = (bitField1_ & ~0x02000000);
        fangdao_ = 0;
        bitField1_ = (bitField1_ & ~0x04000000);
        makeqin_ = 0;
        bitField1_ = (bitField1_ & ~0x08000000);
        wodefendou_ = 0;
        bitField1_ = (bitField1_ & ~0x10000000);
        jiatelin_ = 0;
        bitField1_ = (bitField1_ & ~0x20000000);
        wbaleite_ = 0;
        bitField1_ = (bitField1_ & ~0x40000000);
        guanren_ = 0;
        bitField1_ = (bitField1_ & ~0x80000000);
        toukui1_ = 0;
        bitField2_ = (bitField2_ & ~0x00000001);
        toukui2_ = 0;
        bitField2_ = (bitField2_ & ~0x00000002);
        toukui3_ = 0;
        bitField2_ = (bitField2_ & ~0x00000004);
        shouqiang1_ = 0;
        bitField2_ = (bitField2_ & ~0x00000008);
        buqiang1_ = 0;
        bitField2_ = (bitField2_ & ~0x00000010);
        qingjiqiang1_ = 0;
        bitField2_ = (bitField2_ & ~0x00000020);
        fangdanyi1_ = 0;
        bitField2_ = (bitField2_ & ~0x00000040);
        fangdanyi2_ = 0;
        bitField2_ = (bitField2_ & ~0x00000080);
        fangdanyi3_ = 0;
        bitField2_ = (bitField2_ & ~0x00000100);
        kuzi1_ = 0;
        bitField2_ = (bitField2_ & ~0x00000200);
        kuzi2_ = 0;
        bitField2_ = (bitField2_ & ~0x00000400);
        kuzi3_ = 0;
        bitField2_ = (bitField2_ & ~0x00000800);
        xiezi1_ = 0;
        bitField2_ = (bitField2_ & ~0x00001000);
        xiezi2_ = 0;
        bitField2_ = (bitField2_ & ~0x00002000);
        xiezi3_ = 0;
        bitField2_ = (bitField2_ & ~0x00004000);
        kuangquanshui_ = 0;
        bitField2_ = (bitField2_ & ~0x00008000);
        siliao_ = 0;
        bitField2_ = (bitField2_ & ~0x00010000);
        zhurou_ = 0;
        bitField2_ = (bitField2_ & ~0x00020000);
        qiyou_ = 0;
        bitField2_ = (bitField2_ & ~0x00040000);
        gang_ = 0;
        bitField2_ = (bitField2_ & ~0x00080000);
        songmuban_ = 0;
        bitField2_ = (bitField2_ & ~0x00100000);
        hunningtu_ = 0;
        bitField2_ = (bitField2_ & ~0x00200000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor;
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS getDefaultInstanceForType() {
        return com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.getDefaultInstance();
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS build() {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS buildPartial() {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS result = new com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        int to_bitField2_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventName_ = eventName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.eventUnlock_ = eventUnlock_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.eventDesc_ = eventDesc_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.eventNews_ = eventNews_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.eventNewsdetail_ = eventNewsdetail_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.eventDuration_ = eventDuration_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.eventIcon_ = eventIcon_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.eventProb_ = eventProb_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.conProb_ = conProb_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.invaProb_ = invaProb_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.zombieAtk_ = zombieAtk_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.zombieDef_ = zombieDef_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.zombieHp_ = zombieHp_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.zombieNum_ = zombieNum_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.health_ = health_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.mood_ = mood_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.damiBldgcap_ = damiBldgcap_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.shucaiBldgcap_ = shucaiBldgcap_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.shuiguoBldgcap_ = shuiguoBldgcap_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.jingBldgcap_ = jingBldgcap_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.lushuiBldgcap_ = lushuiBldgcap_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.songshuBldgcap_ = songshuBldgcap_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.damiBldgspd_ = damiBldgspd_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.shucaiBldgspd_ = shucaiBldgspd_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.shuiguoBldgspd_ = shuiguoBldgspd_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.jingBldgspd_ = jingBldgspd_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.lushuiBldgspd_ = lushuiBldgspd_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.songshuBldgspd_ = songshuBldgspd_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.fengliBldgspd_ = fengliBldgspd_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.wuxiandianBldg_ = wuxiandianBldg_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.leidaBldg_ = leidaBldg_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.carBldgspd_ = carBldgspd_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.taxCoeff_ = taxCoeff_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.dami_ = dami_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.shucai_ = shucai_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.shuiguo_ = shuiguo_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.huafei_ = huafei_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.shui_ = shui_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.songmu_ = songmu_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.shuini_ = shuini_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        result.cao_ = cao_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        result.yuanyou_ = yuanyou_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000800;
        }
        result.tie_ = tie_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.jijiubao_ = jijiubao_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.rizhi_ = rizhi_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.jiqiangtuzhi_ = jiqiangtuzhi_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.jujituzhi_ = jujituzhi_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.jipaotuzhi_ = jipaotuzhi_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00020000;
        }
        result.yuanlongping_ = yuanlongping_;
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.huafeigongye_ = huafeigongye_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.yangzhu_ = yangzhu_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00100000;
        }
        result.cangchu_ = cangchu_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00200000;
        }
        result.tesila_ = tesila_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00400000;
        }
        result.luokefeile_ = luokefeile_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00800000;
        }
        result.kanaiji_ = kanaiji_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x01000000;
        }
        result.luban_ = luban_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x02000000;
        }
        result.tumu_ = tumu_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x04000000;
        }
        result.fangdao_ = fangdao_;
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x08000000;
        }
        result.makeqin_ = makeqin_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x10000000;
        }
        result.wodefendou_ = wodefendou_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x20000000;
        }
        result.jiatelin_ = jiatelin_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x40000000;
        }
        result.wbaleite_ = wbaleite_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x80000000;
        }
        result.guanren_ = guanren_;
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField2_ |= 0x00000001;
        }
        result.toukui1_ = toukui1_;
        if (((from_bitField2_ & 0x00000002) == 0x00000002)) {
          to_bitField2_ |= 0x00000002;
        }
        result.toukui2_ = toukui2_;
        if (((from_bitField2_ & 0x00000004) == 0x00000004)) {
          to_bitField2_ |= 0x00000004;
        }
        result.toukui3_ = toukui3_;
        if (((from_bitField2_ & 0x00000008) == 0x00000008)) {
          to_bitField2_ |= 0x00000008;
        }
        result.shouqiang1_ = shouqiang1_;
        if (((from_bitField2_ & 0x00000010) == 0x00000010)) {
          to_bitField2_ |= 0x00000010;
        }
        result.buqiang1_ = buqiang1_;
        if (((from_bitField2_ & 0x00000020) == 0x00000020)) {
          to_bitField2_ |= 0x00000020;
        }
        result.qingjiqiang1_ = qingjiqiang1_;
        if (((from_bitField2_ & 0x00000040) == 0x00000040)) {
          to_bitField2_ |= 0x00000040;
        }
        result.fangdanyi1_ = fangdanyi1_;
        if (((from_bitField2_ & 0x00000080) == 0x00000080)) {
          to_bitField2_ |= 0x00000080;
        }
        result.fangdanyi2_ = fangdanyi2_;
        if (((from_bitField2_ & 0x00000100) == 0x00000100)) {
          to_bitField2_ |= 0x00000100;
        }
        result.fangdanyi3_ = fangdanyi3_;
        if (((from_bitField2_ & 0x00000200) == 0x00000200)) {
          to_bitField2_ |= 0x00000200;
        }
        result.kuzi1_ = kuzi1_;
        if (((from_bitField2_ & 0x00000400) == 0x00000400)) {
          to_bitField2_ |= 0x00000400;
        }
        result.kuzi2_ = kuzi2_;
        if (((from_bitField2_ & 0x00000800) == 0x00000800)) {
          to_bitField2_ |= 0x00000800;
        }
        result.kuzi3_ = kuzi3_;
        if (((from_bitField2_ & 0x00001000) == 0x00001000)) {
          to_bitField2_ |= 0x00001000;
        }
        result.xiezi1_ = xiezi1_;
        if (((from_bitField2_ & 0x00002000) == 0x00002000)) {
          to_bitField2_ |= 0x00002000;
        }
        result.xiezi2_ = xiezi2_;
        if (((from_bitField2_ & 0x00004000) == 0x00004000)) {
          to_bitField2_ |= 0x00004000;
        }
        result.xiezi3_ = xiezi3_;
        if (((from_bitField2_ & 0x00008000) == 0x00008000)) {
          to_bitField2_ |= 0x00008000;
        }
        result.kuangquanshui_ = kuangquanshui_;
        if (((from_bitField2_ & 0x00010000) == 0x00010000)) {
          to_bitField2_ |= 0x00010000;
        }
        result.siliao_ = siliao_;
        if (((from_bitField2_ & 0x00020000) == 0x00020000)) {
          to_bitField2_ |= 0x00020000;
        }
        result.zhurou_ = zhurou_;
        if (((from_bitField2_ & 0x00040000) == 0x00040000)) {
          to_bitField2_ |= 0x00040000;
        }
        result.qiyou_ = qiyou_;
        if (((from_bitField2_ & 0x00080000) == 0x00080000)) {
          to_bitField2_ |= 0x00080000;
        }
        result.gang_ = gang_;
        if (((from_bitField2_ & 0x00100000) == 0x00100000)) {
          to_bitField2_ |= 0x00100000;
        }
        result.songmuban_ = songmuban_;
        if (((from_bitField2_ & 0x00200000) == 0x00200000)) {
          to_bitField2_ |= 0x00200000;
        }
        result.hunningtu_ = hunningtu_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.bitField2_ = to_bitField2_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS) {
          return mergeFrom((com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS other) {
        if (other == com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasEventName()) {
          bitField0_ |= 0x00000002;
          eventName_ = other.eventName_;
          onChanged();
        }
        if (other.hasEventUnlock()) {
          setEventUnlock(other.getEventUnlock());
        }
        if (other.hasEventDesc()) {
          bitField0_ |= 0x00000008;
          eventDesc_ = other.eventDesc_;
          onChanged();
        }
        if (other.hasEventNews()) {
          bitField0_ |= 0x00000010;
          eventNews_ = other.eventNews_;
          onChanged();
        }
        if (other.hasEventNewsdetail()) {
          bitField0_ |= 0x00000020;
          eventNewsdetail_ = other.eventNewsdetail_;
          onChanged();
        }
        if (other.hasEventDuration()) {
          setEventDuration(other.getEventDuration());
        }
        if (other.hasEventIcon()) {
          bitField0_ |= 0x00000080;
          eventIcon_ = other.eventIcon_;
          onChanged();
        }
        if (other.hasEventProb()) {
          setEventProb(other.getEventProb());
        }
        if (other.hasConProb()) {
          setConProb(other.getConProb());
        }
        if (other.hasInvaProb()) {
          setInvaProb(other.getInvaProb());
        }
        if (other.hasZombieAtk()) {
          setZombieAtk(other.getZombieAtk());
        }
        if (other.hasZombieDef()) {
          setZombieDef(other.getZombieDef());
        }
        if (other.hasZombieHp()) {
          setZombieHp(other.getZombieHp());
        }
        if (other.hasZombieNum()) {
          setZombieNum(other.getZombieNum());
        }
        if (other.hasHealth()) {
          setHealth(other.getHealth());
        }
        if (other.hasMood()) {
          setMood(other.getMood());
        }
        if (other.hasDamiBldgcap()) {
          setDamiBldgcap(other.getDamiBldgcap());
        }
        if (other.hasShucaiBldgcap()) {
          setShucaiBldgcap(other.getShucaiBldgcap());
        }
        if (other.hasShuiguoBldgcap()) {
          setShuiguoBldgcap(other.getShuiguoBldgcap());
        }
        if (other.hasJingBldgcap()) {
          setJingBldgcap(other.getJingBldgcap());
        }
        if (other.hasLushuiBldgcap()) {
          setLushuiBldgcap(other.getLushuiBldgcap());
        }
        if (other.hasSongshuBldgcap()) {
          setSongshuBldgcap(other.getSongshuBldgcap());
        }
        if (other.hasDamiBldgspd()) {
          setDamiBldgspd(other.getDamiBldgspd());
        }
        if (other.hasShucaiBldgspd()) {
          setShucaiBldgspd(other.getShucaiBldgspd());
        }
        if (other.hasShuiguoBldgspd()) {
          setShuiguoBldgspd(other.getShuiguoBldgspd());
        }
        if (other.hasJingBldgspd()) {
          setJingBldgspd(other.getJingBldgspd());
        }
        if (other.hasLushuiBldgspd()) {
          setLushuiBldgspd(other.getLushuiBldgspd());
        }
        if (other.hasSongshuBldgspd()) {
          setSongshuBldgspd(other.getSongshuBldgspd());
        }
        if (other.hasFengliBldgspd()) {
          setFengliBldgspd(other.getFengliBldgspd());
        }
        if (other.hasWuxiandianBldg()) {
          setWuxiandianBldg(other.getWuxiandianBldg());
        }
        if (other.hasLeidaBldg()) {
          setLeidaBldg(other.getLeidaBldg());
        }
        if (other.hasCarBldgspd()) {
          setCarBldgspd(other.getCarBldgspd());
        }
        if (other.hasTaxCoeff()) {
          setTaxCoeff(other.getTaxCoeff());
        }
        if (other.hasDami()) {
          setDami(other.getDami());
        }
        if (other.hasShucai()) {
          setShucai(other.getShucai());
        }
        if (other.hasShuiguo()) {
          setShuiguo(other.getShuiguo());
        }
        if (other.hasHuafei()) {
          setHuafei(other.getHuafei());
        }
        if (other.hasShui()) {
          setShui(other.getShui());
        }
        if (other.hasSongmu()) {
          setSongmu(other.getSongmu());
        }
        if (other.hasShuini()) {
          setShuini(other.getShuini());
        }
        if (other.hasCao()) {
          setCao(other.getCao());
        }
        if (other.hasYuanyou()) {
          setYuanyou(other.getYuanyou());
        }
        if (other.hasTie()) {
          setTie(other.getTie());
        }
        if (other.hasJijiubao()) {
          setJijiubao(other.getJijiubao());
        }
        if (other.hasRizhi()) {
          setRizhi(other.getRizhi());
        }
        if (other.hasJiqiangtuzhi()) {
          setJiqiangtuzhi(other.getJiqiangtuzhi());
        }
        if (other.hasJujituzhi()) {
          setJujituzhi(other.getJujituzhi());
        }
        if (other.hasJipaotuzhi()) {
          setJipaotuzhi(other.getJipaotuzhi());
        }
        if (other.hasYuanlongping()) {
          setYuanlongping(other.getYuanlongping());
        }
        if (other.hasHuafeigongye()) {
          setHuafeigongye(other.getHuafeigongye());
        }
        if (other.hasYangzhu()) {
          setYangzhu(other.getYangzhu());
        }
        if (other.hasCangchu()) {
          setCangchu(other.getCangchu());
        }
        if (other.hasTesila()) {
          setTesila(other.getTesila());
        }
        if (other.hasLuokefeile()) {
          setLuokefeile(other.getLuokefeile());
        }
        if (other.hasKanaiji()) {
          setKanaiji(other.getKanaiji());
        }
        if (other.hasLuban()) {
          setLuban(other.getLuban());
        }
        if (other.hasTumu()) {
          setTumu(other.getTumu());
        }
        if (other.hasFangdao()) {
          setFangdao(other.getFangdao());
        }
        if (other.hasMakeqin()) {
          setMakeqin(other.getMakeqin());
        }
        if (other.hasWodefendou()) {
          setWodefendou(other.getWodefendou());
        }
        if (other.hasJiatelin()) {
          setJiatelin(other.getJiatelin());
        }
        if (other.hasWbaleite()) {
          setWbaleite(other.getWbaleite());
        }
        if (other.hasGuanren()) {
          setGuanren(other.getGuanren());
        }
        if (other.hasToukui1()) {
          setToukui1(other.getToukui1());
        }
        if (other.hasToukui2()) {
          setToukui2(other.getToukui2());
        }
        if (other.hasToukui3()) {
          setToukui3(other.getToukui3());
        }
        if (other.hasShouqiang1()) {
          setShouqiang1(other.getShouqiang1());
        }
        if (other.hasBuqiang1()) {
          setBuqiang1(other.getBuqiang1());
        }
        if (other.hasQingjiqiang1()) {
          setQingjiqiang1(other.getQingjiqiang1());
        }
        if (other.hasFangdanyi1()) {
          setFangdanyi1(other.getFangdanyi1());
        }
        if (other.hasFangdanyi2()) {
          setFangdanyi2(other.getFangdanyi2());
        }
        if (other.hasFangdanyi3()) {
          setFangdanyi3(other.getFangdanyi3());
        }
        if (other.hasKuzi1()) {
          setKuzi1(other.getKuzi1());
        }
        if (other.hasKuzi2()) {
          setKuzi2(other.getKuzi2());
        }
        if (other.hasKuzi3()) {
          setKuzi3(other.getKuzi3());
        }
        if (other.hasXiezi1()) {
          setXiezi1(other.getXiezi1());
        }
        if (other.hasXiezi2()) {
          setXiezi2(other.getXiezi2());
        }
        if (other.hasXiezi3()) {
          setXiezi3(other.getXiezi3());
        }
        if (other.hasKuangquanshui()) {
          setKuangquanshui(other.getKuangquanshui());
        }
        if (other.hasSiliao()) {
          setSiliao(other.getSiliao());
        }
        if (other.hasZhurou()) {
          setZhurou(other.getZhurou());
        }
        if (other.hasQiyou()) {
          setQiyou(other.getQiyou());
        }
        if (other.hasGang()) {
          setGang(other.getGang());
        }
        if (other.hasSongmuban()) {
          setSongmuban(other.getSongmuban());
        }
        if (other.hasHunningtu()) {
          setHunningtu(other.getHunningtu());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;

      private int id_ ;
      /**
       * <code>required int32 id = 1 [default = 0];</code>
       *
       * <pre>
       ** id 
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1 [default = 0];</code>
       *
       * <pre>
       ** id 
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1 [default = 0];</code>
       *
       * <pre>
       ** id 
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1 [default = 0];</code>
       *
       * <pre>
       ** id 
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object eventName_ = "";
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public boolean hasEventName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public java.lang.String getEventName() {
        java.lang.Object ref = eventName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEventNameBytes() {
        java.lang.Object ref = eventName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public Builder setEventName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        eventName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public Builder clearEventName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventName_ = getDefaultInstance().getEventName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_name = 2 [default = ""];</code>
       *
       * <pre>
       ** 事件名称 
       * </pre>
       */
      public Builder setEventNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        eventName_ = value;
        onChanged();
        return this;
      }

      private int eventUnlock_ ;
      /**
       * <code>optional int32 event_unlock = 3 [default = 0];</code>
       *
       * <pre>
       ** 庄园多少级可起作用和可见 
       * </pre>
       */
      public boolean hasEventUnlock() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 event_unlock = 3 [default = 0];</code>
       *
       * <pre>
       ** 庄园多少级可起作用和可见 
       * </pre>
       */
      public int getEventUnlock() {
        return eventUnlock_;
      }
      /**
       * <code>optional int32 event_unlock = 3 [default = 0];</code>
       *
       * <pre>
       ** 庄园多少级可起作用和可见 
       * </pre>
       */
      public Builder setEventUnlock(int value) {
        bitField0_ |= 0x00000004;
        eventUnlock_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_unlock = 3 [default = 0];</code>
       *
       * <pre>
       ** 庄园多少级可起作用和可见 
       * </pre>
       */
      public Builder clearEventUnlock() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventUnlock_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object eventDesc_ = "";
      /**
       * <code>optional string event_desc = 4 [default = ""];</code>
       *
       * <pre>
       ** 事件buff描述 
       * </pre>
       */
      public boolean hasEventDesc() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string event_desc = 4 [default = ""];</code>
       *
       * <pre>
       ** 事件buff描述 
       * </pre>
       */
      public java.lang.String getEventDesc() {
        java.lang.Object ref = eventDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventDesc_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_desc = 4 [default = ""];</code>
       *
       * <pre>
       ** 事件buff描述 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEventDescBytes() {
        java.lang.Object ref = eventDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_desc = 4 [default = ""];</code>
       *
       * <pre>
       ** 事件buff描述 
       * </pre>
       */
      public Builder setEventDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        eventDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_desc = 4 [default = ""];</code>
       *
       * <pre>
       ** 事件buff描述 
       * </pre>
       */
      public Builder clearEventDesc() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventDesc_ = getDefaultInstance().getEventDesc();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_desc = 4 [default = ""];</code>
       *
       * <pre>
       ** 事件buff描述 
       * </pre>
       */
      public Builder setEventDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        eventDesc_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object eventNews_ = "";
      /**
       * <code>optional string event_news = 5 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内描述 
       * </pre>
       */
      public boolean hasEventNews() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string event_news = 5 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内描述 
       * </pre>
       */
      public java.lang.String getEventNews() {
        java.lang.Object ref = eventNews_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventNews_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_news = 5 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内描述 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEventNewsBytes() {
        java.lang.Object ref = eventNews_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventNews_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_news = 5 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内描述 
       * </pre>
       */
      public Builder setEventNews(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        eventNews_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_news = 5 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内描述 
       * </pre>
       */
      public Builder clearEventNews() {
        bitField0_ = (bitField0_ & ~0x00000010);
        eventNews_ = getDefaultInstance().getEventNews();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_news = 5 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内描述 
       * </pre>
       */
      public Builder setEventNewsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        eventNews_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object eventNewsdetail_ = "";
      /**
       * <code>optional string event_newsdetail = 6 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内分析 
       * </pre>
       */
      public boolean hasEventNewsdetail() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string event_newsdetail = 6 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内分析 
       * </pre>
       */
      public java.lang.String getEventNewsdetail() {
        java.lang.Object ref = eventNewsdetail_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventNewsdetail_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_newsdetail = 6 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内分析 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEventNewsdetailBytes() {
        java.lang.Object ref = eventNewsdetail_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventNewsdetail_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_newsdetail = 6 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内分析 
       * </pre>
       */
      public Builder setEventNewsdetail(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        eventNewsdetail_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_newsdetail = 6 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内分析 
       * </pre>
       */
      public Builder clearEventNewsdetail() {
        bitField0_ = (bitField0_ & ~0x00000020);
        eventNewsdetail_ = getDefaultInstance().getEventNewsdetail();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_newsdetail = 6 [default = ""];</code>
       *
       * <pre>
       ** 事件新闻界面内分析 
       * </pre>
       */
      public Builder setEventNewsdetailBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        eventNewsdetail_ = value;
        onChanged();
        return this;
      }

      private int eventDuration_ ;
      /**
       * <code>optional int32 event_duration = 7 [default = 0];</code>
       *
       * <pre>
       ** 持续时间（min） 
       * </pre>
       */
      public boolean hasEventDuration() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 event_duration = 7 [default = 0];</code>
       *
       * <pre>
       ** 持续时间（min） 
       * </pre>
       */
      public int getEventDuration() {
        return eventDuration_;
      }
      /**
       * <code>optional int32 event_duration = 7 [default = 0];</code>
       *
       * <pre>
       ** 持续时间（min） 
       * </pre>
       */
      public Builder setEventDuration(int value) {
        bitField0_ |= 0x00000040;
        eventDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_duration = 7 [default = 0];</code>
       *
       * <pre>
       ** 持续时间（min） 
       * </pre>
       */
      public Builder clearEventDuration() {
        bitField0_ = (bitField0_ & ~0x00000040);
        eventDuration_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object eventIcon_ = "";
      /**
       * <code>optional string event_icon = 8 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public boolean hasEventIcon() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string event_icon = 8 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public java.lang.String getEventIcon() {
        java.lang.Object ref = eventIcon_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventIcon_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_icon = 8 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEventIconBytes() {
        java.lang.Object ref = eventIcon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventIcon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_icon = 8 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public Builder setEventIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        eventIcon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_icon = 8 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public Builder clearEventIcon() {
        bitField0_ = (bitField0_ & ~0x00000080);
        eventIcon_ = getDefaultInstance().getEventIcon();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_icon = 8 [default = ""];</code>
       *
       * <pre>
       ** 图标名称 
       * </pre>
       */
      public Builder setEventIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        eventIcon_ = value;
        onChanged();
        return this;
      }

      private int eventProb_ ;
      /**
       * <code>optional int32 event_prob = 9 [default = 0];</code>
       *
       * <pre>
       ** 每分钟发生概率*100000 
       * </pre>
       */
      public boolean hasEventProb() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 event_prob = 9 [default = 0];</code>
       *
       * <pre>
       ** 每分钟发生概率*100000 
       * </pre>
       */
      public int getEventProb() {
        return eventProb_;
      }
      /**
       * <code>optional int32 event_prob = 9 [default = 0];</code>
       *
       * <pre>
       ** 每分钟发生概率*100000 
       * </pre>
       */
      public Builder setEventProb(int value) {
        bitField0_ |= 0x00000100;
        eventProb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_prob = 9 [default = 0];</code>
       *
       * <pre>
       ** 每分钟发生概率*100000 
       * </pre>
       */
      public Builder clearEventProb() {
        bitField0_ = (bitField0_ & ~0x00000100);
        eventProb_ = 0;
        onChanged();
        return this;
      }

      private int conProb_ ;
      /**
       * <code>optional int32 con_prob = 10 [default = 0];</code>
       *
       * <pre>
       ** 条件成立个人buff每分钟发生概率*100000 
       * </pre>
       */
      public boolean hasConProb() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 con_prob = 10 [default = 0];</code>
       *
       * <pre>
       ** 条件成立个人buff每分钟发生概率*100000 
       * </pre>
       */
      public int getConProb() {
        return conProb_;
      }
      /**
       * <code>optional int32 con_prob = 10 [default = 0];</code>
       *
       * <pre>
       ** 条件成立个人buff每分钟发生概率*100000 
       * </pre>
       */
      public Builder setConProb(int value) {
        bitField0_ |= 0x00000200;
        conProb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 con_prob = 10 [default = 0];</code>
       *
       * <pre>
       ** 条件成立个人buff每分钟发生概率*100000 
       * </pre>
       */
      public Builder clearConProb() {
        bitField0_ = (bitField0_ & ~0x00000200);
        conProb_ = 0;
        onChanged();
        return this;
      }

      private int invaProb_ ;
      /**
       * <code>optional int32 inva_prob = 11 [default = 0];</code>
       *
       * <pre>
       ** 僵尸入侵概率系数*100 
       * </pre>
       */
      public boolean hasInvaProb() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 inva_prob = 11 [default = 0];</code>
       *
       * <pre>
       ** 僵尸入侵概率系数*100 
       * </pre>
       */
      public int getInvaProb() {
        return invaProb_;
      }
      /**
       * <code>optional int32 inva_prob = 11 [default = 0];</code>
       *
       * <pre>
       ** 僵尸入侵概率系数*100 
       * </pre>
       */
      public Builder setInvaProb(int value) {
        bitField0_ |= 0x00000400;
        invaProb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 inva_prob = 11 [default = 0];</code>
       *
       * <pre>
       ** 僵尸入侵概率系数*100 
       * </pre>
       */
      public Builder clearInvaProb() {
        bitField0_ = (bitField0_ & ~0x00000400);
        invaProb_ = 0;
        onChanged();
        return this;
      }

      private int zombieAtk_ ;
      /**
       * <code>optional int32 zombie_atk = 12 [default = 0];</code>
       *
       * <pre>
       ** 攻击系数*100 
       * </pre>
       */
      public boolean hasZombieAtk() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 zombie_atk = 12 [default = 0];</code>
       *
       * <pre>
       ** 攻击系数*100 
       * </pre>
       */
      public int getZombieAtk() {
        return zombieAtk_;
      }
      /**
       * <code>optional int32 zombie_atk = 12 [default = 0];</code>
       *
       * <pre>
       ** 攻击系数*100 
       * </pre>
       */
      public Builder setZombieAtk(int value) {
        bitField0_ |= 0x00000800;
        zombieAtk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zombie_atk = 12 [default = 0];</code>
       *
       * <pre>
       ** 攻击系数*100 
       * </pre>
       */
      public Builder clearZombieAtk() {
        bitField0_ = (bitField0_ & ~0x00000800);
        zombieAtk_ = 0;
        onChanged();
        return this;
      }

      private int zombieDef_ ;
      /**
       * <code>optional int32 zombie_def = 13 [default = 0];</code>
       *
       * <pre>
       ** 防御系数*100 
       * </pre>
       */
      public boolean hasZombieDef() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 zombie_def = 13 [default = 0];</code>
       *
       * <pre>
       ** 防御系数*100 
       * </pre>
       */
      public int getZombieDef() {
        return zombieDef_;
      }
      /**
       * <code>optional int32 zombie_def = 13 [default = 0];</code>
       *
       * <pre>
       ** 防御系数*100 
       * </pre>
       */
      public Builder setZombieDef(int value) {
        bitField0_ |= 0x00001000;
        zombieDef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zombie_def = 13 [default = 0];</code>
       *
       * <pre>
       ** 防御系数*100 
       * </pre>
       */
      public Builder clearZombieDef() {
        bitField0_ = (bitField0_ & ~0x00001000);
        zombieDef_ = 0;
        onChanged();
        return this;
      }

      private int zombieHp_ ;
      /**
       * <code>optional int32 zombie_hp = 14 [default = 0];</code>
       *
       * <pre>
       ** 血量系数*100 
       * </pre>
       */
      public boolean hasZombieHp() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 zombie_hp = 14 [default = 0];</code>
       *
       * <pre>
       ** 血量系数*100 
       * </pre>
       */
      public int getZombieHp() {
        return zombieHp_;
      }
      /**
       * <code>optional int32 zombie_hp = 14 [default = 0];</code>
       *
       * <pre>
       ** 血量系数*100 
       * </pre>
       */
      public Builder setZombieHp(int value) {
        bitField0_ |= 0x00002000;
        zombieHp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zombie_hp = 14 [default = 0];</code>
       *
       * <pre>
       ** 血量系数*100 
       * </pre>
       */
      public Builder clearZombieHp() {
        bitField0_ = (bitField0_ & ~0x00002000);
        zombieHp_ = 0;
        onChanged();
        return this;
      }

      private int zombieNum_ ;
      /**
       * <code>optional int32 zombie_num = 15 [default = 0];</code>
       *
       * <pre>
       ** 僵尸数量系数*100 
       * </pre>
       */
      public boolean hasZombieNum() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 zombie_num = 15 [default = 0];</code>
       *
       * <pre>
       ** 僵尸数量系数*100 
       * </pre>
       */
      public int getZombieNum() {
        return zombieNum_;
      }
      /**
       * <code>optional int32 zombie_num = 15 [default = 0];</code>
       *
       * <pre>
       ** 僵尸数量系数*100 
       * </pre>
       */
      public Builder setZombieNum(int value) {
        bitField0_ |= 0x00004000;
        zombieNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zombie_num = 15 [default = 0];</code>
       *
       * <pre>
       ** 僵尸数量系数*100 
       * </pre>
       */
      public Builder clearZombieNum() {
        bitField0_ = (bitField0_ & ~0x00004000);
        zombieNum_ = 0;
        onChanged();
        return this;
      }

      private int health_ ;
      /**
       * <code>optional int32 health = 16 [default = 0];</code>
       *
       * <pre>
       ** 健康系数*100 
       * </pre>
       */
      public boolean hasHealth() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 health = 16 [default = 0];</code>
       *
       * <pre>
       ** 健康系数*100 
       * </pre>
       */
      public int getHealth() {
        return health_;
      }
      /**
       * <code>optional int32 health = 16 [default = 0];</code>
       *
       * <pre>
       ** 健康系数*100 
       * </pre>
       */
      public Builder setHealth(int value) {
        bitField0_ |= 0x00008000;
        health_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 health = 16 [default = 0];</code>
       *
       * <pre>
       ** 健康系数*100 
       * </pre>
       */
      public Builder clearHealth() {
        bitField0_ = (bitField0_ & ~0x00008000);
        health_ = 0;
        onChanged();
        return this;
      }

      private int mood_ ;
      /**
       * <code>optional int32 mood = 17 [default = 0];</code>
       *
       * <pre>
       ** 心情系数*100 
       * </pre>
       */
      public boolean hasMood() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 mood = 17 [default = 0];</code>
       *
       * <pre>
       ** 心情系数*100 
       * </pre>
       */
      public int getMood() {
        return mood_;
      }
      /**
       * <code>optional int32 mood = 17 [default = 0];</code>
       *
       * <pre>
       ** 心情系数*100 
       * </pre>
       */
      public Builder setMood(int value) {
        bitField0_ |= 0x00010000;
        mood_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mood = 17 [default = 0];</code>
       *
       * <pre>
       ** 心情系数*100 
       * </pre>
       */
      public Builder clearMood() {
        bitField0_ = (bitField0_ & ~0x00010000);
        mood_ = 0;
        onChanged();
        return this;
      }

      private int damiBldgcap_ ;
      /**
       * <code>optional int32 dami_bldgcap = 18 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场系数*100 
       * </pre>
       */
      public boolean hasDamiBldgcap() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 dami_bldgcap = 18 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场系数*100 
       * </pre>
       */
      public int getDamiBldgcap() {
        return damiBldgcap_;
      }
      /**
       * <code>optional int32 dami_bldgcap = 18 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场系数*100 
       * </pre>
       */
      public Builder setDamiBldgcap(int value) {
        bitField0_ |= 0x00020000;
        damiBldgcap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dami_bldgcap = 18 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场系数*100 
       * </pre>
       */
      public Builder clearDamiBldgcap() {
        bitField0_ = (bitField0_ & ~0x00020000);
        damiBldgcap_ = 0;
        onChanged();
        return this;
      }

      private int shucaiBldgcap_ ;
      /**
       * <code>optional int32 shucai_bldgcap = 19 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场系数*100 
       * </pre>
       */
      public boolean hasShucaiBldgcap() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 shucai_bldgcap = 19 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场系数*100 
       * </pre>
       */
      public int getShucaiBldgcap() {
        return shucaiBldgcap_;
      }
      /**
       * <code>optional int32 shucai_bldgcap = 19 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场系数*100 
       * </pre>
       */
      public Builder setShucaiBldgcap(int value) {
        bitField0_ |= 0x00040000;
        shucaiBldgcap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shucai_bldgcap = 19 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场系数*100 
       * </pre>
       */
      public Builder clearShucaiBldgcap() {
        bitField0_ = (bitField0_ & ~0x00040000);
        shucaiBldgcap_ = 0;
        onChanged();
        return this;
      }

      private int shuiguoBldgcap_ ;
      /**
       * <code>optional int32 shuiguo_bldgcap = 20 [default = 0];</code>
       *
       * <pre>
       ** 水果园系数*100 
       * </pre>
       */
      public boolean hasShuiguoBldgcap() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 shuiguo_bldgcap = 20 [default = 0];</code>
       *
       * <pre>
       ** 水果园系数*100 
       * </pre>
       */
      public int getShuiguoBldgcap() {
        return shuiguoBldgcap_;
      }
      /**
       * <code>optional int32 shuiguo_bldgcap = 20 [default = 0];</code>
       *
       * <pre>
       ** 水果园系数*100 
       * </pre>
       */
      public Builder setShuiguoBldgcap(int value) {
        bitField0_ |= 0x00080000;
        shuiguoBldgcap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shuiguo_bldgcap = 20 [default = 0];</code>
       *
       * <pre>
       ** 水果园系数*100 
       * </pre>
       */
      public Builder clearShuiguoBldgcap() {
        bitField0_ = (bitField0_ & ~0x00080000);
        shuiguoBldgcap_ = 0;
        onChanged();
        return this;
      }

      private int jingBldgcap_ ;
      /**
       * <code>optional int32 jing_bldgcap = 21 [default = 0];</code>
       *
       * <pre>
       ** 井系数*100 
       * </pre>
       */
      public boolean hasJingBldgcap() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 jing_bldgcap = 21 [default = 0];</code>
       *
       * <pre>
       ** 井系数*100 
       * </pre>
       */
      public int getJingBldgcap() {
        return jingBldgcap_;
      }
      /**
       * <code>optional int32 jing_bldgcap = 21 [default = 0];</code>
       *
       * <pre>
       ** 井系数*100 
       * </pre>
       */
      public Builder setJingBldgcap(int value) {
        bitField0_ |= 0x00100000;
        jingBldgcap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jing_bldgcap = 21 [default = 0];</code>
       *
       * <pre>
       ** 井系数*100 
       * </pre>
       */
      public Builder clearJingBldgcap() {
        bitField0_ = (bitField0_ & ~0x00100000);
        jingBldgcap_ = 0;
        onChanged();
        return this;
      }

      private int lushuiBldgcap_ ;
      /**
       * <code>optional int32 lushui_bldgcap = 22 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器系数*100 
       * </pre>
       */
      public boolean hasLushuiBldgcap() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 lushui_bldgcap = 22 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器系数*100 
       * </pre>
       */
      public int getLushuiBldgcap() {
        return lushuiBldgcap_;
      }
      /**
       * <code>optional int32 lushui_bldgcap = 22 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器系数*100 
       * </pre>
       */
      public Builder setLushuiBldgcap(int value) {
        bitField0_ |= 0x00200000;
        lushuiBldgcap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lushui_bldgcap = 22 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器系数*100 
       * </pre>
       */
      public Builder clearLushuiBldgcap() {
        bitField0_ = (bitField0_ & ~0x00200000);
        lushuiBldgcap_ = 0;
        onChanged();
        return this;
      }

      private int songshuBldgcap_ ;
      /**
       * <code>optional int32 songshu_bldgcap = 23 [default = 0];</code>
       *
       * <pre>
       ** 松树林系数*100 
       * </pre>
       */
      public boolean hasSongshuBldgcap() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 songshu_bldgcap = 23 [default = 0];</code>
       *
       * <pre>
       ** 松树林系数*100 
       * </pre>
       */
      public int getSongshuBldgcap() {
        return songshuBldgcap_;
      }
      /**
       * <code>optional int32 songshu_bldgcap = 23 [default = 0];</code>
       *
       * <pre>
       ** 松树林系数*100 
       * </pre>
       */
      public Builder setSongshuBldgcap(int value) {
        bitField0_ |= 0x00400000;
        songshuBldgcap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 songshu_bldgcap = 23 [default = 0];</code>
       *
       * <pre>
       ** 松树林系数*100 
       * </pre>
       */
      public Builder clearSongshuBldgcap() {
        bitField0_ = (bitField0_ & ~0x00400000);
        songshuBldgcap_ = 0;
        onChanged();
        return this;
      }

      private int damiBldgspd_ ;
      /**
       * <code>optional int32 dami_bldgspd = 24 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场产速系数*100 
       * </pre>
       */
      public boolean hasDamiBldgspd() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 dami_bldgspd = 24 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场产速系数*100 
       * </pre>
       */
      public int getDamiBldgspd() {
        return damiBldgspd_;
      }
      /**
       * <code>optional int32 dami_bldgspd = 24 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场产速系数*100 
       * </pre>
       */
      public Builder setDamiBldgspd(int value) {
        bitField0_ |= 0x00800000;
        damiBldgspd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dami_bldgspd = 24 [default = 0];</code>
       *
       * <pre>
       ** 水稻种植场产速系数*100 
       * </pre>
       */
      public Builder clearDamiBldgspd() {
        bitField0_ = (bitField0_ & ~0x00800000);
        damiBldgspd_ = 0;
        onChanged();
        return this;
      }

      private int shucaiBldgspd_ ;
      /**
       * <code>optional int32 shucai_bldgspd = 25 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场产速系数*100 
       * </pre>
       */
      public boolean hasShucaiBldgspd() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 shucai_bldgspd = 25 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场产速系数*100 
       * </pre>
       */
      public int getShucaiBldgspd() {
        return shucaiBldgspd_;
      }
      /**
       * <code>optional int32 shucai_bldgspd = 25 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场产速系数*100 
       * </pre>
       */
      public Builder setShucaiBldgspd(int value) {
        bitField0_ |= 0x01000000;
        shucaiBldgspd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shucai_bldgspd = 25 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜种植场产速系数*100 
       * </pre>
       */
      public Builder clearShucaiBldgspd() {
        bitField0_ = (bitField0_ & ~0x01000000);
        shucaiBldgspd_ = 0;
        onChanged();
        return this;
      }

      private int shuiguoBldgspd_ ;
      /**
       * <code>optional int32 shuiguo_bldgspd = 26 [default = 0];</code>
       *
       * <pre>
       ** 水果园产速系数*100 
       * </pre>
       */
      public boolean hasShuiguoBldgspd() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 shuiguo_bldgspd = 26 [default = 0];</code>
       *
       * <pre>
       ** 水果园产速系数*100 
       * </pre>
       */
      public int getShuiguoBldgspd() {
        return shuiguoBldgspd_;
      }
      /**
       * <code>optional int32 shuiguo_bldgspd = 26 [default = 0];</code>
       *
       * <pre>
       ** 水果园产速系数*100 
       * </pre>
       */
      public Builder setShuiguoBldgspd(int value) {
        bitField0_ |= 0x02000000;
        shuiguoBldgspd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shuiguo_bldgspd = 26 [default = 0];</code>
       *
       * <pre>
       ** 水果园产速系数*100 
       * </pre>
       */
      public Builder clearShuiguoBldgspd() {
        bitField0_ = (bitField0_ & ~0x02000000);
        shuiguoBldgspd_ = 0;
        onChanged();
        return this;
      }

      private int jingBldgspd_ ;
      /**
       * <code>optional int32 jing_bldgspd = 27 [default = 0];</code>
       *
       * <pre>
       ** 井产速系数*100 
       * </pre>
       */
      public boolean hasJingBldgspd() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 jing_bldgspd = 27 [default = 0];</code>
       *
       * <pre>
       ** 井产速系数*100 
       * </pre>
       */
      public int getJingBldgspd() {
        return jingBldgspd_;
      }
      /**
       * <code>optional int32 jing_bldgspd = 27 [default = 0];</code>
       *
       * <pre>
       ** 井产速系数*100 
       * </pre>
       */
      public Builder setJingBldgspd(int value) {
        bitField0_ |= 0x04000000;
        jingBldgspd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jing_bldgspd = 27 [default = 0];</code>
       *
       * <pre>
       ** 井产速系数*100 
       * </pre>
       */
      public Builder clearJingBldgspd() {
        bitField0_ = (bitField0_ & ~0x04000000);
        jingBldgspd_ = 0;
        onChanged();
        return this;
      }

      private int lushuiBldgspd_ ;
      /**
       * <code>optional int32 lushui_bldgspd = 28 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器产速系数*100 
       * </pre>
       */
      public boolean hasLushuiBldgspd() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 lushui_bldgspd = 28 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器产速系数*100 
       * </pre>
       */
      public int getLushuiBldgspd() {
        return lushuiBldgspd_;
      }
      /**
       * <code>optional int32 lushui_bldgspd = 28 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器产速系数*100 
       * </pre>
       */
      public Builder setLushuiBldgspd(int value) {
        bitField0_ |= 0x08000000;
        lushuiBldgspd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lushui_bldgspd = 28 [default = 0];</code>
       *
       * <pre>
       ** 露水收集器产速系数*100 
       * </pre>
       */
      public Builder clearLushuiBldgspd() {
        bitField0_ = (bitField0_ & ~0x08000000);
        lushuiBldgspd_ = 0;
        onChanged();
        return this;
      }

      private int songshuBldgspd_ ;
      /**
       * <code>optional int32 songshu_bldgspd = 29 [default = 0];</code>
       *
       * <pre>
       ** 松树林产速系数*100 
       * </pre>
       */
      public boolean hasSongshuBldgspd() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 songshu_bldgspd = 29 [default = 0];</code>
       *
       * <pre>
       ** 松树林产速系数*100 
       * </pre>
       */
      public int getSongshuBldgspd() {
        return songshuBldgspd_;
      }
      /**
       * <code>optional int32 songshu_bldgspd = 29 [default = 0];</code>
       *
       * <pre>
       ** 松树林产速系数*100 
       * </pre>
       */
      public Builder setSongshuBldgspd(int value) {
        bitField0_ |= 0x10000000;
        songshuBldgspd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 songshu_bldgspd = 29 [default = 0];</code>
       *
       * <pre>
       ** 松树林产速系数*100 
       * </pre>
       */
      public Builder clearSongshuBldgspd() {
        bitField0_ = (bitField0_ & ~0x10000000);
        songshuBldgspd_ = 0;
        onChanged();
        return this;
      }

      private int fengliBldgspd_ ;
      /**
       * <code>optional int32 fengli_bldgspd = 30 [default = 0];</code>
       *
       * <pre>
       ** 风力发电机（原太阳能）产速系数*100 
       * </pre>
       */
      public boolean hasFengliBldgspd() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 fengli_bldgspd = 30 [default = 0];</code>
       *
       * <pre>
       ** 风力发电机（原太阳能）产速系数*100 
       * </pre>
       */
      public int getFengliBldgspd() {
        return fengliBldgspd_;
      }
      /**
       * <code>optional int32 fengli_bldgspd = 30 [default = 0];</code>
       *
       * <pre>
       ** 风力发电机（原太阳能）产速系数*100 
       * </pre>
       */
      public Builder setFengliBldgspd(int value) {
        bitField0_ |= 0x20000000;
        fengliBldgspd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fengli_bldgspd = 30 [default = 0];</code>
       *
       * <pre>
       ** 风力发电机（原太阳能）产速系数*100 
       * </pre>
       */
      public Builder clearFengliBldgspd() {
        bitField0_ = (bitField0_ & ~0x20000000);
        fengliBldgspd_ = 0;
        onChanged();
        return this;
      }

      private int wuxiandianBldg_ ;
      /**
       * <code>optional int32 wuxiandian_bldg = 31 [default = 0];</code>
       *
       * <pre>
       ** 无线电提前接收系数*100 
       * </pre>
       */
      public boolean hasWuxiandianBldg() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 wuxiandian_bldg = 31 [default = 0];</code>
       *
       * <pre>
       ** 无线电提前接收系数*100 
       * </pre>
       */
      public int getWuxiandianBldg() {
        return wuxiandianBldg_;
      }
      /**
       * <code>optional int32 wuxiandian_bldg = 31 [default = 0];</code>
       *
       * <pre>
       ** 无线电提前接收系数*100 
       * </pre>
       */
      public Builder setWuxiandianBldg(int value) {
        bitField0_ |= 0x40000000;
        wuxiandianBldg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wuxiandian_bldg = 31 [default = 0];</code>
       *
       * <pre>
       ** 无线电提前接收系数*100 
       * </pre>
       */
      public Builder clearWuxiandianBldg() {
        bitField0_ = (bitField0_ & ~0x40000000);
        wuxiandianBldg_ = 0;
        onChanged();
        return this;
      }

      private int leidaBldg_ ;
      /**
       * <code>optional int32 leida_bldg = 32 [default = 0];</code>
       *
       * <pre>
       ** 雷达提前接收系数*100 
       * </pre>
       */
      public boolean hasLeidaBldg() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 leida_bldg = 32 [default = 0];</code>
       *
       * <pre>
       ** 雷达提前接收系数*100 
       * </pre>
       */
      public int getLeidaBldg() {
        return leidaBldg_;
      }
      /**
       * <code>optional int32 leida_bldg = 32 [default = 0];</code>
       *
       * <pre>
       ** 雷达提前接收系数*100 
       * </pre>
       */
      public Builder setLeidaBldg(int value) {
        bitField0_ |= 0x80000000;
        leidaBldg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 leida_bldg = 32 [default = 0];</code>
       *
       * <pre>
       ** 雷达提前接收系数*100 
       * </pre>
       */
      public Builder clearLeidaBldg() {
        bitField0_ = (bitField0_ & ~0x80000000);
        leidaBldg_ = 0;
        onChanged();
        return this;
      }

      private int carBldgspd_ ;
      /**
       * <code>optional int32 car_bldgspd = 33 [default = 0];</code>
       *
       * <pre>
       ** 车辆速度系数*100 
       * </pre>
       */
      public boolean hasCarBldgspd() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 car_bldgspd = 33 [default = 0];</code>
       *
       * <pre>
       ** 车辆速度系数*100 
       * </pre>
       */
      public int getCarBldgspd() {
        return carBldgspd_;
      }
      /**
       * <code>optional int32 car_bldgspd = 33 [default = 0];</code>
       *
       * <pre>
       ** 车辆速度系数*100 
       * </pre>
       */
      public Builder setCarBldgspd(int value) {
        bitField1_ |= 0x00000001;
        carBldgspd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 car_bldgspd = 33 [default = 0];</code>
       *
       * <pre>
       ** 车辆速度系数*100 
       * </pre>
       */
      public Builder clearCarBldgspd() {
        bitField1_ = (bitField1_ & ~0x00000001);
        carBldgspd_ = 0;
        onChanged();
        return this;
      }

      private int taxCoeff_ ;
      /**
       * <code>optional int32 tax_coeff = 34 [default = 0];</code>
       *
       * <pre>
       ** 交易税率系数*100 
       * </pre>
       */
      public boolean hasTaxCoeff() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 tax_coeff = 34 [default = 0];</code>
       *
       * <pre>
       ** 交易税率系数*100 
       * </pre>
       */
      public int getTaxCoeff() {
        return taxCoeff_;
      }
      /**
       * <code>optional int32 tax_coeff = 34 [default = 0];</code>
       *
       * <pre>
       ** 交易税率系数*100 
       * </pre>
       */
      public Builder setTaxCoeff(int value) {
        bitField1_ |= 0x00000002;
        taxCoeff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tax_coeff = 34 [default = 0];</code>
       *
       * <pre>
       ** 交易税率系数*100 
       * </pre>
       */
      public Builder clearTaxCoeff() {
        bitField1_ = (bitField1_ & ~0x00000002);
        taxCoeff_ = 0;
        onChanged();
        return this;
      }

      private int dami_ ;
      /**
       * <code>optional int32 dami = 35 [default = 0];</code>
       *
       * <pre>
       ** 大米*100 
       * </pre>
       */
      public boolean hasDami() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 dami = 35 [default = 0];</code>
       *
       * <pre>
       ** 大米*100 
       * </pre>
       */
      public int getDami() {
        return dami_;
      }
      /**
       * <code>optional int32 dami = 35 [default = 0];</code>
       *
       * <pre>
       ** 大米*100 
       * </pre>
       */
      public Builder setDami(int value) {
        bitField1_ |= 0x00000004;
        dami_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dami = 35 [default = 0];</code>
       *
       * <pre>
       ** 大米*100 
       * </pre>
       */
      public Builder clearDami() {
        bitField1_ = (bitField1_ & ~0x00000004);
        dami_ = 0;
        onChanged();
        return this;
      }

      private int shucai_ ;
      /**
       * <code>optional int32 shucai = 36 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜*100 
       * </pre>
       */
      public boolean hasShucai() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 shucai = 36 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜*100 
       * </pre>
       */
      public int getShucai() {
        return shucai_;
      }
      /**
       * <code>optional int32 shucai = 36 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜*100 
       * </pre>
       */
      public Builder setShucai(int value) {
        bitField1_ |= 0x00000008;
        shucai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shucai = 36 [default = 0];</code>
       *
       * <pre>
       ** 蔬菜*100 
       * </pre>
       */
      public Builder clearShucai() {
        bitField1_ = (bitField1_ & ~0x00000008);
        shucai_ = 0;
        onChanged();
        return this;
      }

      private int shuiguo_ ;
      /**
       * <code>optional int32 shuiguo = 37 [default = 0];</code>
       *
       * <pre>
       ** 水果*100 
       * </pre>
       */
      public boolean hasShuiguo() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 shuiguo = 37 [default = 0];</code>
       *
       * <pre>
       ** 水果*100 
       * </pre>
       */
      public int getShuiguo() {
        return shuiguo_;
      }
      /**
       * <code>optional int32 shuiguo = 37 [default = 0];</code>
       *
       * <pre>
       ** 水果*100 
       * </pre>
       */
      public Builder setShuiguo(int value) {
        bitField1_ |= 0x00000010;
        shuiguo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shuiguo = 37 [default = 0];</code>
       *
       * <pre>
       ** 水果*100 
       * </pre>
       */
      public Builder clearShuiguo() {
        bitField1_ = (bitField1_ & ~0x00000010);
        shuiguo_ = 0;
        onChanged();
        return this;
      }

      private int huafei_ ;
      /**
       * <code>optional int32 huafei = 38 [default = 0];</code>
       *
       * <pre>
       ** 化肥*100 
       * </pre>
       */
      public boolean hasHuafei() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 huafei = 38 [default = 0];</code>
       *
       * <pre>
       ** 化肥*100 
       * </pre>
       */
      public int getHuafei() {
        return huafei_;
      }
      /**
       * <code>optional int32 huafei = 38 [default = 0];</code>
       *
       * <pre>
       ** 化肥*100 
       * </pre>
       */
      public Builder setHuafei(int value) {
        bitField1_ |= 0x00000020;
        huafei_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huafei = 38 [default = 0];</code>
       *
       * <pre>
       ** 化肥*100 
       * </pre>
       */
      public Builder clearHuafei() {
        bitField1_ = (bitField1_ & ~0x00000020);
        huafei_ = 0;
        onChanged();
        return this;
      }

      private int shui_ ;
      /**
       * <code>optional int32 shui = 39 [default = 0];</code>
       *
       * <pre>
       ** 纯净水*100 
       * </pre>
       */
      public boolean hasShui() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 shui = 39 [default = 0];</code>
       *
       * <pre>
       ** 纯净水*100 
       * </pre>
       */
      public int getShui() {
        return shui_;
      }
      /**
       * <code>optional int32 shui = 39 [default = 0];</code>
       *
       * <pre>
       ** 纯净水*100 
       * </pre>
       */
      public Builder setShui(int value) {
        bitField1_ |= 0x00000040;
        shui_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shui = 39 [default = 0];</code>
       *
       * <pre>
       ** 纯净水*100 
       * </pre>
       */
      public Builder clearShui() {
        bitField1_ = (bitField1_ & ~0x00000040);
        shui_ = 0;
        onChanged();
        return this;
      }

      private int songmu_ ;
      /**
       * <code>optional int32 songmu = 40 [default = 0];</code>
       *
       * <pre>
       ** 松木*100 
       * </pre>
       */
      public boolean hasSongmu() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 songmu = 40 [default = 0];</code>
       *
       * <pre>
       ** 松木*100 
       * </pre>
       */
      public int getSongmu() {
        return songmu_;
      }
      /**
       * <code>optional int32 songmu = 40 [default = 0];</code>
       *
       * <pre>
       ** 松木*100 
       * </pre>
       */
      public Builder setSongmu(int value) {
        bitField1_ |= 0x00000080;
        songmu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 songmu = 40 [default = 0];</code>
       *
       * <pre>
       ** 松木*100 
       * </pre>
       */
      public Builder clearSongmu() {
        bitField1_ = (bitField1_ & ~0x00000080);
        songmu_ = 0;
        onChanged();
        return this;
      }

      private int shuini_ ;
      /**
       * <code>optional int32 shuini = 41 [default = 0];</code>
       *
       * <pre>
       ** 水泥*100 
       * </pre>
       */
      public boolean hasShuini() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 shuini = 41 [default = 0];</code>
       *
       * <pre>
       ** 水泥*100 
       * </pre>
       */
      public int getShuini() {
        return shuini_;
      }
      /**
       * <code>optional int32 shuini = 41 [default = 0];</code>
       *
       * <pre>
       ** 水泥*100 
       * </pre>
       */
      public Builder setShuini(int value) {
        bitField1_ |= 0x00000100;
        shuini_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shuini = 41 [default = 0];</code>
       *
       * <pre>
       ** 水泥*100 
       * </pre>
       */
      public Builder clearShuini() {
        bitField1_ = (bitField1_ & ~0x00000100);
        shuini_ = 0;
        onChanged();
        return this;
      }

      private int cao_ ;
      /**
       * <code>optional int32 cao = 42 [default = 0];</code>
       *
       * <pre>
       ** 草*100 
       * </pre>
       */
      public boolean hasCao() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 cao = 42 [default = 0];</code>
       *
       * <pre>
       ** 草*100 
       * </pre>
       */
      public int getCao() {
        return cao_;
      }
      /**
       * <code>optional int32 cao = 42 [default = 0];</code>
       *
       * <pre>
       ** 草*100 
       * </pre>
       */
      public Builder setCao(int value) {
        bitField1_ |= 0x00000200;
        cao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cao = 42 [default = 0];</code>
       *
       * <pre>
       ** 草*100 
       * </pre>
       */
      public Builder clearCao() {
        bitField1_ = (bitField1_ & ~0x00000200);
        cao_ = 0;
        onChanged();
        return this;
      }

      private int yuanyou_ ;
      /**
       * <code>optional int32 yuanyou = 43 [default = 0];</code>
       *
       * <pre>
       ** 原油*100 
       * </pre>
       */
      public boolean hasYuanyou() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 yuanyou = 43 [default = 0];</code>
       *
       * <pre>
       ** 原油*100 
       * </pre>
       */
      public int getYuanyou() {
        return yuanyou_;
      }
      /**
       * <code>optional int32 yuanyou = 43 [default = 0];</code>
       *
       * <pre>
       ** 原油*100 
       * </pre>
       */
      public Builder setYuanyou(int value) {
        bitField1_ |= 0x00000400;
        yuanyou_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 yuanyou = 43 [default = 0];</code>
       *
       * <pre>
       ** 原油*100 
       * </pre>
       */
      public Builder clearYuanyou() {
        bitField1_ = (bitField1_ & ~0x00000400);
        yuanyou_ = 0;
        onChanged();
        return this;
      }

      private int tie_ ;
      /**
       * <code>optional int32 tie = 44 [default = 0];</code>
       *
       * <pre>
       ** 铁*100 
       * </pre>
       */
      public boolean hasTie() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 tie = 44 [default = 0];</code>
       *
       * <pre>
       ** 铁*100 
       * </pre>
       */
      public int getTie() {
        return tie_;
      }
      /**
       * <code>optional int32 tie = 44 [default = 0];</code>
       *
       * <pre>
       ** 铁*100 
       * </pre>
       */
      public Builder setTie(int value) {
        bitField1_ |= 0x00000800;
        tie_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tie = 44 [default = 0];</code>
       *
       * <pre>
       ** 铁*100 
       * </pre>
       */
      public Builder clearTie() {
        bitField1_ = (bitField1_ & ~0x00000800);
        tie_ = 0;
        onChanged();
        return this;
      }

      private int jijiubao_ ;
      /**
       * <code>optional int32 jijiubao = 45 [default = 0];</code>
       *
       * <pre>
       ** 急救包*100 
       * </pre>
       */
      public boolean hasJijiubao() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 jijiubao = 45 [default = 0];</code>
       *
       * <pre>
       ** 急救包*100 
       * </pre>
       */
      public int getJijiubao() {
        return jijiubao_;
      }
      /**
       * <code>optional int32 jijiubao = 45 [default = 0];</code>
       *
       * <pre>
       ** 急救包*100 
       * </pre>
       */
      public Builder setJijiubao(int value) {
        bitField1_ |= 0x00001000;
        jijiubao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jijiubao = 45 [default = 0];</code>
       *
       * <pre>
       ** 急救包*100 
       * </pre>
       */
      public Builder clearJijiubao() {
        bitField1_ = (bitField1_ & ~0x00001000);
        jijiubao_ = 0;
        onChanged();
        return this;
      }

      private int rizhi_ ;
      /**
       * <code>optional int32 rizhi = 46 [default = 0];</code>
       *
       * <pre>
       ** 庄园日志*100 
       * </pre>
       */
      public boolean hasRizhi() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 rizhi = 46 [default = 0];</code>
       *
       * <pre>
       ** 庄园日志*100 
       * </pre>
       */
      public int getRizhi() {
        return rizhi_;
      }
      /**
       * <code>optional int32 rizhi = 46 [default = 0];</code>
       *
       * <pre>
       ** 庄园日志*100 
       * </pre>
       */
      public Builder setRizhi(int value) {
        bitField1_ |= 0x00002000;
        rizhi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rizhi = 46 [default = 0];</code>
       *
       * <pre>
       ** 庄园日志*100 
       * </pre>
       */
      public Builder clearRizhi() {
        bitField1_ = (bitField1_ & ~0x00002000);
        rizhi_ = 0;
        onChanged();
        return this;
      }

      private int jiqiangtuzhi_ ;
      /**
       * <code>optional int32 jiqiangtuzhi = 47 [default = 0];</code>
       *
       * <pre>
       ** 重机枪图纸*100 
       * </pre>
       */
      public boolean hasJiqiangtuzhi() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 jiqiangtuzhi = 47 [default = 0];</code>
       *
       * <pre>
       ** 重机枪图纸*100 
       * </pre>
       */
      public int getJiqiangtuzhi() {
        return jiqiangtuzhi_;
      }
      /**
       * <code>optional int32 jiqiangtuzhi = 47 [default = 0];</code>
       *
       * <pre>
       ** 重机枪图纸*100 
       * </pre>
       */
      public Builder setJiqiangtuzhi(int value) {
        bitField1_ |= 0x00004000;
        jiqiangtuzhi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jiqiangtuzhi = 47 [default = 0];</code>
       *
       * <pre>
       ** 重机枪图纸*100 
       * </pre>
       */
      public Builder clearJiqiangtuzhi() {
        bitField1_ = (bitField1_ & ~0x00004000);
        jiqiangtuzhi_ = 0;
        onChanged();
        return this;
      }

      private int jujituzhi_ ;
      /**
       * <code>optional int32 jujituzhi = 48 [default = 0];</code>
       *
       * <pre>
       ** 狙击枪图纸*100 
       * </pre>
       */
      public boolean hasJujituzhi() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 jujituzhi = 48 [default = 0];</code>
       *
       * <pre>
       ** 狙击枪图纸*100 
       * </pre>
       */
      public int getJujituzhi() {
        return jujituzhi_;
      }
      /**
       * <code>optional int32 jujituzhi = 48 [default = 0];</code>
       *
       * <pre>
       ** 狙击枪图纸*100 
       * </pre>
       */
      public Builder setJujituzhi(int value) {
        bitField1_ |= 0x00008000;
        jujituzhi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jujituzhi = 48 [default = 0];</code>
       *
       * <pre>
       ** 狙击枪图纸*100 
       * </pre>
       */
      public Builder clearJujituzhi() {
        bitField1_ = (bitField1_ & ~0x00008000);
        jujituzhi_ = 0;
        onChanged();
        return this;
      }

      private int jipaotuzhi_ ;
      /**
       * <code>optional int32 jipaotuzhi = 49 [default = 0];</code>
       *
       * <pre>
       ** 机炮设计图*100 
       * </pre>
       */
      public boolean hasJipaotuzhi() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 jipaotuzhi = 49 [default = 0];</code>
       *
       * <pre>
       ** 机炮设计图*100 
       * </pre>
       */
      public int getJipaotuzhi() {
        return jipaotuzhi_;
      }
      /**
       * <code>optional int32 jipaotuzhi = 49 [default = 0];</code>
       *
       * <pre>
       ** 机炮设计图*100 
       * </pre>
       */
      public Builder setJipaotuzhi(int value) {
        bitField1_ |= 0x00010000;
        jipaotuzhi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jipaotuzhi = 49 [default = 0];</code>
       *
       * <pre>
       ** 机炮设计图*100 
       * </pre>
       */
      public Builder clearJipaotuzhi() {
        bitField1_ = (bitField1_ & ~0x00010000);
        jipaotuzhi_ = 0;
        onChanged();
        return this;
      }

      private int yuanlongping_ ;
      /**
       * <code>optional int32 yuanlongping = 50 [default = 0];</code>
       *
       * <pre>
       ** 《袁隆平传》*100 
       * </pre>
       */
      public boolean hasYuanlongping() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 yuanlongping = 50 [default = 0];</code>
       *
       * <pre>
       ** 《袁隆平传》*100 
       * </pre>
       */
      public int getYuanlongping() {
        return yuanlongping_;
      }
      /**
       * <code>optional int32 yuanlongping = 50 [default = 0];</code>
       *
       * <pre>
       ** 《袁隆平传》*100 
       * </pre>
       */
      public Builder setYuanlongping(int value) {
        bitField1_ |= 0x00020000;
        yuanlongping_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 yuanlongping = 50 [default = 0];</code>
       *
       * <pre>
       ** 《袁隆平传》*100 
       * </pre>
       */
      public Builder clearYuanlongping() {
        bitField1_ = (bitField1_ & ~0x00020000);
        yuanlongping_ = 0;
        onChanged();
        return this;
      }

      private int huafeigongye_ ;
      /**
       * <code>optional int32 huafeigongye = 51 [default = 0];</code>
       *
       * <pre>
       ** 《化肥工业概论》*100 
       * </pre>
       */
      public boolean hasHuafeigongye() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 huafeigongye = 51 [default = 0];</code>
       *
       * <pre>
       ** 《化肥工业概论》*100 
       * </pre>
       */
      public int getHuafeigongye() {
        return huafeigongye_;
      }
      /**
       * <code>optional int32 huafeigongye = 51 [default = 0];</code>
       *
       * <pre>
       ** 《化肥工业概论》*100 
       * </pre>
       */
      public Builder setHuafeigongye(int value) {
        bitField1_ |= 0x00040000;
        huafeigongye_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huafeigongye = 51 [default = 0];</code>
       *
       * <pre>
       ** 《化肥工业概论》*100 
       * </pre>
       */
      public Builder clearHuafeigongye() {
        bitField1_ = (bitField1_ & ~0x00040000);
        huafeigongye_ = 0;
        onChanged();
        return this;
      }

      private int yangzhu_ ;
      /**
       * <code>optional int32 yangzhu = 52 [default = 0];</code>
       *
       * <pre>
       ** 《论如何养猪》*100 
       * </pre>
       */
      public boolean hasYangzhu() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 yangzhu = 52 [default = 0];</code>
       *
       * <pre>
       ** 《论如何养猪》*100 
       * </pre>
       */
      public int getYangzhu() {
        return yangzhu_;
      }
      /**
       * <code>optional int32 yangzhu = 52 [default = 0];</code>
       *
       * <pre>
       ** 《论如何养猪》*100 
       * </pre>
       */
      public Builder setYangzhu(int value) {
        bitField1_ |= 0x00080000;
        yangzhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 yangzhu = 52 [default = 0];</code>
       *
       * <pre>
       ** 《论如何养猪》*100 
       * </pre>
       */
      public Builder clearYangzhu() {
        bitField1_ = (bitField1_ & ~0x00080000);
        yangzhu_ = 0;
        onChanged();
        return this;
      }

      private int cangchu_ ;
      /**
       * <code>optional int32 cangchu = 53 [default = 0];</code>
       *
       * <pre>
       ** 《仓储管理》*100 
       * </pre>
       */
      public boolean hasCangchu() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 cangchu = 53 [default = 0];</code>
       *
       * <pre>
       ** 《仓储管理》*100 
       * </pre>
       */
      public int getCangchu() {
        return cangchu_;
      }
      /**
       * <code>optional int32 cangchu = 53 [default = 0];</code>
       *
       * <pre>
       ** 《仓储管理》*100 
       * </pre>
       */
      public Builder setCangchu(int value) {
        bitField1_ |= 0x00100000;
        cangchu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cangchu = 53 [default = 0];</code>
       *
       * <pre>
       ** 《仓储管理》*100 
       * </pre>
       */
      public Builder clearCangchu() {
        bitField1_ = (bitField1_ & ~0x00100000);
        cangchu_ = 0;
        onChanged();
        return this;
      }

      private int tesila_ ;
      /**
       * <code>optional int32 tesila = 54 [default = 0];</code>
       *
       * <pre>
       ** 《特斯拉传》*100 
       * </pre>
       */
      public boolean hasTesila() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 tesila = 54 [default = 0];</code>
       *
       * <pre>
       ** 《特斯拉传》*100 
       * </pre>
       */
      public int getTesila() {
        return tesila_;
      }
      /**
       * <code>optional int32 tesila = 54 [default = 0];</code>
       *
       * <pre>
       ** 《特斯拉传》*100 
       * </pre>
       */
      public Builder setTesila(int value) {
        bitField1_ |= 0x00200000;
        tesila_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tesila = 54 [default = 0];</code>
       *
       * <pre>
       ** 《特斯拉传》*100 
       * </pre>
       */
      public Builder clearTesila() {
        bitField1_ = (bitField1_ & ~0x00200000);
        tesila_ = 0;
        onChanged();
        return this;
      }

      private int luokefeile_ ;
      /**
       * <code>optional int32 luokefeile = 55 [default = 0];</code>
       *
       * <pre>
       ** 《洛克菲勒传》*100 
       * </pre>
       */
      public boolean hasLuokefeile() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 luokefeile = 55 [default = 0];</code>
       *
       * <pre>
       ** 《洛克菲勒传》*100 
       * </pre>
       */
      public int getLuokefeile() {
        return luokefeile_;
      }
      /**
       * <code>optional int32 luokefeile = 55 [default = 0];</code>
       *
       * <pre>
       ** 《洛克菲勒传》*100 
       * </pre>
       */
      public Builder setLuokefeile(int value) {
        bitField1_ |= 0x00400000;
        luokefeile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 luokefeile = 55 [default = 0];</code>
       *
       * <pre>
       ** 《洛克菲勒传》*100 
       * </pre>
       */
      public Builder clearLuokefeile() {
        bitField1_ = (bitField1_ & ~0x00400000);
        luokefeile_ = 0;
        onChanged();
        return this;
      }

      private int kanaiji_ ;
      /**
       * <code>optional int32 kanaiji = 56 [default = 0];</code>
       *
       * <pre>
       ** 《卡耐基传》*100 
       * </pre>
       */
      public boolean hasKanaiji() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 kanaiji = 56 [default = 0];</code>
       *
       * <pre>
       ** 《卡耐基传》*100 
       * </pre>
       */
      public int getKanaiji() {
        return kanaiji_;
      }
      /**
       * <code>optional int32 kanaiji = 56 [default = 0];</code>
       *
       * <pre>
       ** 《卡耐基传》*100 
       * </pre>
       */
      public Builder setKanaiji(int value) {
        bitField1_ |= 0x00800000;
        kanaiji_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kanaiji = 56 [default = 0];</code>
       *
       * <pre>
       ** 《卡耐基传》*100 
       * </pre>
       */
      public Builder clearKanaiji() {
        bitField1_ = (bitField1_ & ~0x00800000);
        kanaiji_ = 0;
        onChanged();
        return this;
      }

      private int luban_ ;
      /**
       * <code>optional int32 luban = 57 [default = 0];</code>
       *
       * <pre>
       ** 《鲁班传》*100 
       * </pre>
       */
      public boolean hasLuban() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 luban = 57 [default = 0];</code>
       *
       * <pre>
       ** 《鲁班传》*100 
       * </pre>
       */
      public int getLuban() {
        return luban_;
      }
      /**
       * <code>optional int32 luban = 57 [default = 0];</code>
       *
       * <pre>
       ** 《鲁班传》*100 
       * </pre>
       */
      public Builder setLuban(int value) {
        bitField1_ |= 0x01000000;
        luban_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 luban = 57 [default = 0];</code>
       *
       * <pre>
       ** 《鲁班传》*100 
       * </pre>
       */
      public Builder clearLuban() {
        bitField1_ = (bitField1_ & ~0x01000000);
        luban_ = 0;
        onChanged();
        return this;
      }

      private int tumu_ ;
      /**
       * <code>optional int32 tumu = 58 [default = 0];</code>
       *
       * <pre>
       ** 《土木工程概论》*100 
       * </pre>
       */
      public boolean hasTumu() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 tumu = 58 [default = 0];</code>
       *
       * <pre>
       ** 《土木工程概论》*100 
       * </pre>
       */
      public int getTumu() {
        return tumu_;
      }
      /**
       * <code>optional int32 tumu = 58 [default = 0];</code>
       *
       * <pre>
       ** 《土木工程概论》*100 
       * </pre>
       */
      public Builder setTumu(int value) {
        bitField1_ |= 0x02000000;
        tumu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tumu = 58 [default = 0];</code>
       *
       * <pre>
       ** 《土木工程概论》*100 
       * </pre>
       */
      public Builder clearTumu() {
        bitField1_ = (bitField1_ & ~0x02000000);
        tumu_ = 0;
        onChanged();
        return this;
      }

      private int fangdao_ ;
      /**
       * <code>optional int32 fangdao = 59 [default = 0];</code>
       *
       * <pre>
       ** 《防盗门技术》*100 
       * </pre>
       */
      public boolean hasFangdao() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 fangdao = 59 [default = 0];</code>
       *
       * <pre>
       ** 《防盗门技术》*100 
       * </pre>
       */
      public int getFangdao() {
        return fangdao_;
      }
      /**
       * <code>optional int32 fangdao = 59 [default = 0];</code>
       *
       * <pre>
       ** 《防盗门技术》*100 
       * </pre>
       */
      public Builder setFangdao(int value) {
        bitField1_ |= 0x04000000;
        fangdao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fangdao = 59 [default = 0];</code>
       *
       * <pre>
       ** 《防盗门技术》*100 
       * </pre>
       */
      public Builder clearFangdao() {
        bitField1_ = (bitField1_ & ~0x04000000);
        fangdao_ = 0;
        onChanged();
        return this;
      }

      private int makeqin_ ;
      /**
       * <code>optional int32 makeqin = 60 [default = 0];</code>
       *
       * <pre>
       ** 《马克沁传》*100 
       * </pre>
       */
      public boolean hasMakeqin() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 makeqin = 60 [default = 0];</code>
       *
       * <pre>
       ** 《马克沁传》*100 
       * </pre>
       */
      public int getMakeqin() {
        return makeqin_;
      }
      /**
       * <code>optional int32 makeqin = 60 [default = 0];</code>
       *
       * <pre>
       ** 《马克沁传》*100 
       * </pre>
       */
      public Builder setMakeqin(int value) {
        bitField1_ |= 0x08000000;
        makeqin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 makeqin = 60 [default = 0];</code>
       *
       * <pre>
       ** 《马克沁传》*100 
       * </pre>
       */
      public Builder clearMakeqin() {
        bitField1_ = (bitField1_ & ~0x08000000);
        makeqin_ = 0;
        onChanged();
        return this;
      }

      private int wodefendou_ ;
      /**
       * <code>optional int32 wodefendou = 61 [default = 0];</code>
       *
       * <pre>
       ** 《我的奋斗》*100 
       * </pre>
       */
      public boolean hasWodefendou() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 wodefendou = 61 [default = 0];</code>
       *
       * <pre>
       ** 《我的奋斗》*100 
       * </pre>
       */
      public int getWodefendou() {
        return wodefendou_;
      }
      /**
       * <code>optional int32 wodefendou = 61 [default = 0];</code>
       *
       * <pre>
       ** 《我的奋斗》*100 
       * </pre>
       */
      public Builder setWodefendou(int value) {
        bitField1_ |= 0x10000000;
        wodefendou_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wodefendou = 61 [default = 0];</code>
       *
       * <pre>
       ** 《我的奋斗》*100 
       * </pre>
       */
      public Builder clearWodefendou() {
        bitField1_ = (bitField1_ & ~0x10000000);
        wodefendou_ = 0;
        onChanged();
        return this;
      }

      private int jiatelin_ ;
      /**
       * <code>optional int32 jiatelin = 62 [default = 0];</code>
       *
       * <pre>
       ** 《加特林传》*100 
       * </pre>
       */
      public boolean hasJiatelin() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 jiatelin = 62 [default = 0];</code>
       *
       * <pre>
       ** 《加特林传》*100 
       * </pre>
       */
      public int getJiatelin() {
        return jiatelin_;
      }
      /**
       * <code>optional int32 jiatelin = 62 [default = 0];</code>
       *
       * <pre>
       ** 《加特林传》*100 
       * </pre>
       */
      public Builder setJiatelin(int value) {
        bitField1_ |= 0x20000000;
        jiatelin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jiatelin = 62 [default = 0];</code>
       *
       * <pre>
       ** 《加特林传》*100 
       * </pre>
       */
      public Builder clearJiatelin() {
        bitField1_ = (bitField1_ & ~0x20000000);
        jiatelin_ = 0;
        onChanged();
        return this;
      }

      private int wbaleite_ ;
      /**
       * <code>optional int32 wbaleite = 63 [default = 0];</code>
       *
       * <pre>
       ** 《巴雷特的笔记》*100 
       * </pre>
       */
      public boolean hasWbaleite() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 wbaleite = 63 [default = 0];</code>
       *
       * <pre>
       ** 《巴雷特的笔记》*100 
       * </pre>
       */
      public int getWbaleite() {
        return wbaleite_;
      }
      /**
       * <code>optional int32 wbaleite = 63 [default = 0];</code>
       *
       * <pre>
       ** 《巴雷特的笔记》*100 
       * </pre>
       */
      public Builder setWbaleite(int value) {
        bitField1_ |= 0x40000000;
        wbaleite_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wbaleite = 63 [default = 0];</code>
       *
       * <pre>
       ** 《巴雷特的笔记》*100 
       * </pre>
       */
      public Builder clearWbaleite() {
        bitField1_ = (bitField1_ & ~0x40000000);
        wbaleite_ = 0;
        onChanged();
        return this;
      }

      private int guanren_ ;
      /**
       * <code>optional int32 guanren = 64 [default = 0];</code>
       *
       * <pre>
       ** 《官人吃鸡指南》*100 
       * </pre>
       */
      public boolean hasGuanren() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 guanren = 64 [default = 0];</code>
       *
       * <pre>
       ** 《官人吃鸡指南》*100 
       * </pre>
       */
      public int getGuanren() {
        return guanren_;
      }
      /**
       * <code>optional int32 guanren = 64 [default = 0];</code>
       *
       * <pre>
       ** 《官人吃鸡指南》*100 
       * </pre>
       */
      public Builder setGuanren(int value) {
        bitField1_ |= 0x80000000;
        guanren_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 guanren = 64 [default = 0];</code>
       *
       * <pre>
       ** 《官人吃鸡指南》*100 
       * </pre>
       */
      public Builder clearGuanren() {
        bitField1_ = (bitField1_ & ~0x80000000);
        guanren_ = 0;
        onChanged();
        return this;
      }

      private int toukui1_ ;
      /**
       * <code>optional int32 toukui1 = 65 [default = 0];</code>
       *
       * <pre>
       ** 1级头盔*100 
       * </pre>
       */
      public boolean hasToukui1() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 toukui1 = 65 [default = 0];</code>
       *
       * <pre>
       ** 1级头盔*100 
       * </pre>
       */
      public int getToukui1() {
        return toukui1_;
      }
      /**
       * <code>optional int32 toukui1 = 65 [default = 0];</code>
       *
       * <pre>
       ** 1级头盔*100 
       * </pre>
       */
      public Builder setToukui1(int value) {
        bitField2_ |= 0x00000001;
        toukui1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 toukui1 = 65 [default = 0];</code>
       *
       * <pre>
       ** 1级头盔*100 
       * </pre>
       */
      public Builder clearToukui1() {
        bitField2_ = (bitField2_ & ~0x00000001);
        toukui1_ = 0;
        onChanged();
        return this;
      }

      private int toukui2_ ;
      /**
       * <code>optional int32 toukui2 = 66 [default = 0];</code>
       *
       * <pre>
       ** 2级头盔*100 
       * </pre>
       */
      public boolean hasToukui2() {
        return ((bitField2_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 toukui2 = 66 [default = 0];</code>
       *
       * <pre>
       ** 2级头盔*100 
       * </pre>
       */
      public int getToukui2() {
        return toukui2_;
      }
      /**
       * <code>optional int32 toukui2 = 66 [default = 0];</code>
       *
       * <pre>
       ** 2级头盔*100 
       * </pre>
       */
      public Builder setToukui2(int value) {
        bitField2_ |= 0x00000002;
        toukui2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 toukui2 = 66 [default = 0];</code>
       *
       * <pre>
       ** 2级头盔*100 
       * </pre>
       */
      public Builder clearToukui2() {
        bitField2_ = (bitField2_ & ~0x00000002);
        toukui2_ = 0;
        onChanged();
        return this;
      }

      private int toukui3_ ;
      /**
       * <code>optional int32 toukui3 = 67 [default = 0];</code>
       *
       * <pre>
       ** 3级头盔*100 
       * </pre>
       */
      public boolean hasToukui3() {
        return ((bitField2_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 toukui3 = 67 [default = 0];</code>
       *
       * <pre>
       ** 3级头盔*100 
       * </pre>
       */
      public int getToukui3() {
        return toukui3_;
      }
      /**
       * <code>optional int32 toukui3 = 67 [default = 0];</code>
       *
       * <pre>
       ** 3级头盔*100 
       * </pre>
       */
      public Builder setToukui3(int value) {
        bitField2_ |= 0x00000004;
        toukui3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 toukui3 = 67 [default = 0];</code>
       *
       * <pre>
       ** 3级头盔*100 
       * </pre>
       */
      public Builder clearToukui3() {
        bitField2_ = (bitField2_ & ~0x00000004);
        toukui3_ = 0;
        onChanged();
        return this;
      }

      private int shouqiang1_ ;
      /**
       * <code>optional int32 shouqiang1 = 68 [default = 0];</code>
       *
       * <pre>
       ** 手枪*100 
       * </pre>
       */
      public boolean hasShouqiang1() {
        return ((bitField2_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 shouqiang1 = 68 [default = 0];</code>
       *
       * <pre>
       ** 手枪*100 
       * </pre>
       */
      public int getShouqiang1() {
        return shouqiang1_;
      }
      /**
       * <code>optional int32 shouqiang1 = 68 [default = 0];</code>
       *
       * <pre>
       ** 手枪*100 
       * </pre>
       */
      public Builder setShouqiang1(int value) {
        bitField2_ |= 0x00000008;
        shouqiang1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shouqiang1 = 68 [default = 0];</code>
       *
       * <pre>
       ** 手枪*100 
       * </pre>
       */
      public Builder clearShouqiang1() {
        bitField2_ = (bitField2_ & ~0x00000008);
        shouqiang1_ = 0;
        onChanged();
        return this;
      }

      private int buqiang1_ ;
      /**
       * <code>optional int32 buqiang1 = 69 [default = 0];</code>
       *
       * <pre>
       ** 步枪*100 
       * </pre>
       */
      public boolean hasBuqiang1() {
        return ((bitField2_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 buqiang1 = 69 [default = 0];</code>
       *
       * <pre>
       ** 步枪*100 
       * </pre>
       */
      public int getBuqiang1() {
        return buqiang1_;
      }
      /**
       * <code>optional int32 buqiang1 = 69 [default = 0];</code>
       *
       * <pre>
       ** 步枪*100 
       * </pre>
       */
      public Builder setBuqiang1(int value) {
        bitField2_ |= 0x00000010;
        buqiang1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 buqiang1 = 69 [default = 0];</code>
       *
       * <pre>
       ** 步枪*100 
       * </pre>
       */
      public Builder clearBuqiang1() {
        bitField2_ = (bitField2_ & ~0x00000010);
        buqiang1_ = 0;
        onChanged();
        return this;
      }

      private int qingjiqiang1_ ;
      /**
       * <code>optional int32 qingjiqiang1 = 70 [default = 0];</code>
       *
       * <pre>
       ** 轻机枪*100 
       * </pre>
       */
      public boolean hasQingjiqiang1() {
        return ((bitField2_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 qingjiqiang1 = 70 [default = 0];</code>
       *
       * <pre>
       ** 轻机枪*100 
       * </pre>
       */
      public int getQingjiqiang1() {
        return qingjiqiang1_;
      }
      /**
       * <code>optional int32 qingjiqiang1 = 70 [default = 0];</code>
       *
       * <pre>
       ** 轻机枪*100 
       * </pre>
       */
      public Builder setQingjiqiang1(int value) {
        bitField2_ |= 0x00000020;
        qingjiqiang1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qingjiqiang1 = 70 [default = 0];</code>
       *
       * <pre>
       ** 轻机枪*100 
       * </pre>
       */
      public Builder clearQingjiqiang1() {
        bitField2_ = (bitField2_ & ~0x00000020);
        qingjiqiang1_ = 0;
        onChanged();
        return this;
      }

      private int fangdanyi1_ ;
      /**
       * <code>optional int32 fangdanyi1 = 71 [default = 0];</code>
       *
       * <pre>
       ** 1级防弹衣*100 
       * </pre>
       */
      public boolean hasFangdanyi1() {
        return ((bitField2_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 fangdanyi1 = 71 [default = 0];</code>
       *
       * <pre>
       ** 1级防弹衣*100 
       * </pre>
       */
      public int getFangdanyi1() {
        return fangdanyi1_;
      }
      /**
       * <code>optional int32 fangdanyi1 = 71 [default = 0];</code>
       *
       * <pre>
       ** 1级防弹衣*100 
       * </pre>
       */
      public Builder setFangdanyi1(int value) {
        bitField2_ |= 0x00000040;
        fangdanyi1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fangdanyi1 = 71 [default = 0];</code>
       *
       * <pre>
       ** 1级防弹衣*100 
       * </pre>
       */
      public Builder clearFangdanyi1() {
        bitField2_ = (bitField2_ & ~0x00000040);
        fangdanyi1_ = 0;
        onChanged();
        return this;
      }

      private int fangdanyi2_ ;
      /**
       * <code>optional int32 fangdanyi2 = 72 [default = 0];</code>
       *
       * <pre>
       ** 2级防弹衣*100 
       * </pre>
       */
      public boolean hasFangdanyi2() {
        return ((bitField2_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 fangdanyi2 = 72 [default = 0];</code>
       *
       * <pre>
       ** 2级防弹衣*100 
       * </pre>
       */
      public int getFangdanyi2() {
        return fangdanyi2_;
      }
      /**
       * <code>optional int32 fangdanyi2 = 72 [default = 0];</code>
       *
       * <pre>
       ** 2级防弹衣*100 
       * </pre>
       */
      public Builder setFangdanyi2(int value) {
        bitField2_ |= 0x00000080;
        fangdanyi2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fangdanyi2 = 72 [default = 0];</code>
       *
       * <pre>
       ** 2级防弹衣*100 
       * </pre>
       */
      public Builder clearFangdanyi2() {
        bitField2_ = (bitField2_ & ~0x00000080);
        fangdanyi2_ = 0;
        onChanged();
        return this;
      }

      private int fangdanyi3_ ;
      /**
       * <code>optional int32 fangdanyi3 = 73 [default = 0];</code>
       *
       * <pre>
       ** 3级防弹衣*100 
       * </pre>
       */
      public boolean hasFangdanyi3() {
        return ((bitField2_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 fangdanyi3 = 73 [default = 0];</code>
       *
       * <pre>
       ** 3级防弹衣*100 
       * </pre>
       */
      public int getFangdanyi3() {
        return fangdanyi3_;
      }
      /**
       * <code>optional int32 fangdanyi3 = 73 [default = 0];</code>
       *
       * <pre>
       ** 3级防弹衣*100 
       * </pre>
       */
      public Builder setFangdanyi3(int value) {
        bitField2_ |= 0x00000100;
        fangdanyi3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fangdanyi3 = 73 [default = 0];</code>
       *
       * <pre>
       ** 3级防弹衣*100 
       * </pre>
       */
      public Builder clearFangdanyi3() {
        bitField2_ = (bitField2_ & ~0x00000100);
        fangdanyi3_ = 0;
        onChanged();
        return this;
      }

      private int kuzi1_ ;
      /**
       * <code>optional int32 kuzi1 = 74 [default = 0];</code>
       *
       * <pre>
       ** 1级作训裤*100 
       * </pre>
       */
      public boolean hasKuzi1() {
        return ((bitField2_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 kuzi1 = 74 [default = 0];</code>
       *
       * <pre>
       ** 1级作训裤*100 
       * </pre>
       */
      public int getKuzi1() {
        return kuzi1_;
      }
      /**
       * <code>optional int32 kuzi1 = 74 [default = 0];</code>
       *
       * <pre>
       ** 1级作训裤*100 
       * </pre>
       */
      public Builder setKuzi1(int value) {
        bitField2_ |= 0x00000200;
        kuzi1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kuzi1 = 74 [default = 0];</code>
       *
       * <pre>
       ** 1级作训裤*100 
       * </pre>
       */
      public Builder clearKuzi1() {
        bitField2_ = (bitField2_ & ~0x00000200);
        kuzi1_ = 0;
        onChanged();
        return this;
      }

      private int kuzi2_ ;
      /**
       * <code>optional int32 kuzi2 = 75 [default = 0];</code>
       *
       * <pre>
       ** 2级作训裤*100 
       * </pre>
       */
      public boolean hasKuzi2() {
        return ((bitField2_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 kuzi2 = 75 [default = 0];</code>
       *
       * <pre>
       ** 2级作训裤*100 
       * </pre>
       */
      public int getKuzi2() {
        return kuzi2_;
      }
      /**
       * <code>optional int32 kuzi2 = 75 [default = 0];</code>
       *
       * <pre>
       ** 2级作训裤*100 
       * </pre>
       */
      public Builder setKuzi2(int value) {
        bitField2_ |= 0x00000400;
        kuzi2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kuzi2 = 75 [default = 0];</code>
       *
       * <pre>
       ** 2级作训裤*100 
       * </pre>
       */
      public Builder clearKuzi2() {
        bitField2_ = (bitField2_ & ~0x00000400);
        kuzi2_ = 0;
        onChanged();
        return this;
      }

      private int kuzi3_ ;
      /**
       * <code>optional int32 kuzi3 = 76 [default = 0];</code>
       *
       * <pre>
       ** 3级作训裤*100 
       * </pre>
       */
      public boolean hasKuzi3() {
        return ((bitField2_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 kuzi3 = 76 [default = 0];</code>
       *
       * <pre>
       ** 3级作训裤*100 
       * </pre>
       */
      public int getKuzi3() {
        return kuzi3_;
      }
      /**
       * <code>optional int32 kuzi3 = 76 [default = 0];</code>
       *
       * <pre>
       ** 3级作训裤*100 
       * </pre>
       */
      public Builder setKuzi3(int value) {
        bitField2_ |= 0x00000800;
        kuzi3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kuzi3 = 76 [default = 0];</code>
       *
       * <pre>
       ** 3级作训裤*100 
       * </pre>
       */
      public Builder clearKuzi3() {
        bitField2_ = (bitField2_ & ~0x00000800);
        kuzi3_ = 0;
        onChanged();
        return this;
      }

      private int xiezi1_ ;
      /**
       * <code>optional int32 xiezi1 = 77 [default = 0];</code>
       *
       * <pre>
       ** 1级越野靴*100 
       * </pre>
       */
      public boolean hasXiezi1() {
        return ((bitField2_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 xiezi1 = 77 [default = 0];</code>
       *
       * <pre>
       ** 1级越野靴*100 
       * </pre>
       */
      public int getXiezi1() {
        return xiezi1_;
      }
      /**
       * <code>optional int32 xiezi1 = 77 [default = 0];</code>
       *
       * <pre>
       ** 1级越野靴*100 
       * </pre>
       */
      public Builder setXiezi1(int value) {
        bitField2_ |= 0x00001000;
        xiezi1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiezi1 = 77 [default = 0];</code>
       *
       * <pre>
       ** 1级越野靴*100 
       * </pre>
       */
      public Builder clearXiezi1() {
        bitField2_ = (bitField2_ & ~0x00001000);
        xiezi1_ = 0;
        onChanged();
        return this;
      }

      private int xiezi2_ ;
      /**
       * <code>optional int32 xiezi2 = 78 [default = 0];</code>
       *
       * <pre>
       ** 2级越野靴*100 
       * </pre>
       */
      public boolean hasXiezi2() {
        return ((bitField2_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 xiezi2 = 78 [default = 0];</code>
       *
       * <pre>
       ** 2级越野靴*100 
       * </pre>
       */
      public int getXiezi2() {
        return xiezi2_;
      }
      /**
       * <code>optional int32 xiezi2 = 78 [default = 0];</code>
       *
       * <pre>
       ** 2级越野靴*100 
       * </pre>
       */
      public Builder setXiezi2(int value) {
        bitField2_ |= 0x00002000;
        xiezi2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiezi2 = 78 [default = 0];</code>
       *
       * <pre>
       ** 2级越野靴*100 
       * </pre>
       */
      public Builder clearXiezi2() {
        bitField2_ = (bitField2_ & ~0x00002000);
        xiezi2_ = 0;
        onChanged();
        return this;
      }

      private int xiezi3_ ;
      /**
       * <code>optional int32 xiezi3 = 79 [default = 0];</code>
       *
       * <pre>
       ** 3级越野靴*100 
       * </pre>
       */
      public boolean hasXiezi3() {
        return ((bitField2_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 xiezi3 = 79 [default = 0];</code>
       *
       * <pre>
       ** 3级越野靴*100 
       * </pre>
       */
      public int getXiezi3() {
        return xiezi3_;
      }
      /**
       * <code>optional int32 xiezi3 = 79 [default = 0];</code>
       *
       * <pre>
       ** 3级越野靴*100 
       * </pre>
       */
      public Builder setXiezi3(int value) {
        bitField2_ |= 0x00004000;
        xiezi3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiezi3 = 79 [default = 0];</code>
       *
       * <pre>
       ** 3级越野靴*100 
       * </pre>
       */
      public Builder clearXiezi3() {
        bitField2_ = (bitField2_ & ~0x00004000);
        xiezi3_ = 0;
        onChanged();
        return this;
      }

      private int kuangquanshui_ ;
      /**
       * <code>optional int32 kuangquanshui = 80 [default = 0];</code>
       *
       * <pre>
       ** 矿物质水*100 
       * </pre>
       */
      public boolean hasKuangquanshui() {
        return ((bitField2_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 kuangquanshui = 80 [default = 0];</code>
       *
       * <pre>
       ** 矿物质水*100 
       * </pre>
       */
      public int getKuangquanshui() {
        return kuangquanshui_;
      }
      /**
       * <code>optional int32 kuangquanshui = 80 [default = 0];</code>
       *
       * <pre>
       ** 矿物质水*100 
       * </pre>
       */
      public Builder setKuangquanshui(int value) {
        bitField2_ |= 0x00008000;
        kuangquanshui_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kuangquanshui = 80 [default = 0];</code>
       *
       * <pre>
       ** 矿物质水*100 
       * </pre>
       */
      public Builder clearKuangquanshui() {
        bitField2_ = (bitField2_ & ~0x00008000);
        kuangquanshui_ = 0;
        onChanged();
        return this;
      }

      private int siliao_ ;
      /**
       * <code>optional int32 siliao = 81 [default = 0];</code>
       *
       * <pre>
       ** 饲料*100 
       * </pre>
       */
      public boolean hasSiliao() {
        return ((bitField2_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 siliao = 81 [default = 0];</code>
       *
       * <pre>
       ** 饲料*100 
       * </pre>
       */
      public int getSiliao() {
        return siliao_;
      }
      /**
       * <code>optional int32 siliao = 81 [default = 0];</code>
       *
       * <pre>
       ** 饲料*100 
       * </pre>
       */
      public Builder setSiliao(int value) {
        bitField2_ |= 0x00010000;
        siliao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 siliao = 81 [default = 0];</code>
       *
       * <pre>
       ** 饲料*100 
       * </pre>
       */
      public Builder clearSiliao() {
        bitField2_ = (bitField2_ & ~0x00010000);
        siliao_ = 0;
        onChanged();
        return this;
      }

      private int zhurou_ ;
      /**
       * <code>optional int32 zhurou = 82 [default = 0];</code>
       *
       * <pre>
       ** 猪肉*100 
       * </pre>
       */
      public boolean hasZhurou() {
        return ((bitField2_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 zhurou = 82 [default = 0];</code>
       *
       * <pre>
       ** 猪肉*100 
       * </pre>
       */
      public int getZhurou() {
        return zhurou_;
      }
      /**
       * <code>optional int32 zhurou = 82 [default = 0];</code>
       *
       * <pre>
       ** 猪肉*100 
       * </pre>
       */
      public Builder setZhurou(int value) {
        bitField2_ |= 0x00020000;
        zhurou_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zhurou = 82 [default = 0];</code>
       *
       * <pre>
       ** 猪肉*100 
       * </pre>
       */
      public Builder clearZhurou() {
        bitField2_ = (bitField2_ & ~0x00020000);
        zhurou_ = 0;
        onChanged();
        return this;
      }

      private int qiyou_ ;
      /**
       * <code>optional int32 qiyou = 83 [default = 0];</code>
       *
       * <pre>
       ** 汽油*100 
       * </pre>
       */
      public boolean hasQiyou() {
        return ((bitField2_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 qiyou = 83 [default = 0];</code>
       *
       * <pre>
       ** 汽油*100 
       * </pre>
       */
      public int getQiyou() {
        return qiyou_;
      }
      /**
       * <code>optional int32 qiyou = 83 [default = 0];</code>
       *
       * <pre>
       ** 汽油*100 
       * </pre>
       */
      public Builder setQiyou(int value) {
        bitField2_ |= 0x00040000;
        qiyou_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qiyou = 83 [default = 0];</code>
       *
       * <pre>
       ** 汽油*100 
       * </pre>
       */
      public Builder clearQiyou() {
        bitField2_ = (bitField2_ & ~0x00040000);
        qiyou_ = 0;
        onChanged();
        return this;
      }

      private int gang_ ;
      /**
       * <code>optional int32 gang = 84 [default = 0];</code>
       *
       * <pre>
       ** 钢*100 
       * </pre>
       */
      public boolean hasGang() {
        return ((bitField2_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 gang = 84 [default = 0];</code>
       *
       * <pre>
       ** 钢*100 
       * </pre>
       */
      public int getGang() {
        return gang_;
      }
      /**
       * <code>optional int32 gang = 84 [default = 0];</code>
       *
       * <pre>
       ** 钢*100 
       * </pre>
       */
      public Builder setGang(int value) {
        bitField2_ |= 0x00080000;
        gang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gang = 84 [default = 0];</code>
       *
       * <pre>
       ** 钢*100 
       * </pre>
       */
      public Builder clearGang() {
        bitField2_ = (bitField2_ & ~0x00080000);
        gang_ = 0;
        onChanged();
        return this;
      }

      private int songmuban_ ;
      /**
       * <code>optional int32 songmuban = 85 [default = 0];</code>
       *
       * <pre>
       ** 松木板*100 
       * </pre>
       */
      public boolean hasSongmuban() {
        return ((bitField2_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 songmuban = 85 [default = 0];</code>
       *
       * <pre>
       ** 松木板*100 
       * </pre>
       */
      public int getSongmuban() {
        return songmuban_;
      }
      /**
       * <code>optional int32 songmuban = 85 [default = 0];</code>
       *
       * <pre>
       ** 松木板*100 
       * </pre>
       */
      public Builder setSongmuban(int value) {
        bitField2_ |= 0x00100000;
        songmuban_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 songmuban = 85 [default = 0];</code>
       *
       * <pre>
       ** 松木板*100 
       * </pre>
       */
      public Builder clearSongmuban() {
        bitField2_ = (bitField2_ & ~0x00100000);
        songmuban_ = 0;
        onChanged();
        return this;
      }

      private int hunningtu_ ;
      /**
       * <code>optional int32 hunningtu = 86 [default = 0];</code>
       *
       * <pre>
       ** 混凝土*100 
       * </pre>
       */
      public boolean hasHunningtu() {
        return ((bitField2_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 hunningtu = 86 [default = 0];</code>
       *
       * <pre>
       ** 混凝土*100 
       * </pre>
       */
      public int getHunningtu() {
        return hunningtu_;
      }
      /**
       * <code>optional int32 hunningtu = 86 [default = 0];</code>
       *
       * <pre>
       ** 混凝土*100 
       * </pre>
       */
      public Builder setHunningtu(int value) {
        bitField2_ |= 0x00200000;
        hunningtu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hunningtu = 86 [default = 0];</code>
       *
       * <pre>
       ** 混凝土*100 
       * </pre>
       */
      public Builder clearHunningtu() {
        bitField2_ = (bitField2_ & ~0x00200000);
        hunningtu_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.framework.resource.data.WORLD_EVENTS)
    }

    static {
      defaultInstance = new WORLD_EVENTS(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.game.framework.resource.data.WORLD_EVENTS)
  }

  public interface WORLD_EVENTS_ARRAYOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.framework.resource.data.WORLD_EVENTS_ARRAY)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> 
        getItemsList();
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS getItems(int index);
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    java.util.List<? extends com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.game.framework.resource.data.WORLD_EVENTS_ARRAY}
   */
  public static final class WORLD_EVENTS_ARRAY extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.game.framework.resource.data.WORLD_EVENTS_ARRAY)
      WORLD_EVENTS_ARRAYOrBuilder {
    // Use WORLD_EVENTS_ARRAY.newBuilder() to construct.
    private WORLD_EVENTS_ARRAY(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WORLD_EVENTS_ARRAY(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WORLD_EVENTS_ARRAY defaultInstance;
    public static WORLD_EVENTS_ARRAY getDefaultInstance() {
      return defaultInstance;
    }

    public WORLD_EVENTS_ARRAY getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WORLD_EVENTS_ARRAY(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                items_ = new java.util.ArrayList<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(input.readMessage(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.class, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.Builder.class);
    }

    public static com.google.protobuf.Parser<WORLD_EVENTS_ARRAY> PARSER =
        new com.google.protobuf.AbstractParser<WORLD_EVENTS_ARRAY>() {
      public WORLD_EVENTS_ARRAY parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WORLD_EVENTS_ARRAY(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WORLD_EVENTS_ARRAY> getParserForType() {
      return PARSER;
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> items_;
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    public java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    public java.util.List<? extends com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
     */
    public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private void initFields() {
      items_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getItemsCount(); i++) {
        if (!getItems(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.game.framework.resource.data.WORLD_EVENTS_ARRAY}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.framework.resource.data.WORLD_EVENTS_ARRAY)
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAYOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.class, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.Builder.class);
      }

      // Construct using com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.game.framework.resource.data.WorldEventsBytes.internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor;
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY getDefaultInstanceForType() {
        return com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.getDefaultInstance();
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY build() {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY buildPartial() {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY result = new com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY) {
          return mergeFrom((com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY other) {
        if (other == com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getItemsCount(); i++) {
          if (!getItems(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS_ARRAY) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = new java.util.ArrayList<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder setItems(
          int index, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder setItems(
          int index, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder addItems(com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder addItems(
          int index, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder addItems(
          com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder addItems(
          int index, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public java.util.List<? extends com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.getDefaultInstance());
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.getDefaultInstance());
      }
      /**
       * <code>repeated .com.game.framework.resource.data.WORLD_EVENTS items = 1;</code>
       */
      public java.util.List<com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTS.Builder, com.game.framework.resource.data.WorldEventsBytes.WORLD_EVENTSOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.game.framework.resource.data.WORLD_EVENTS_ARRAY)
    }

    static {
      defaultInstance = new WORLD_EVENTS_ARRAY(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.game.framework.resource.data.WORLD_EVENTS_ARRAY)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_game_framework_resource_data_WORLD_EVENTS_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036proto/world_events_bytes.proto\022 com.ga" +
      "me.framework.resource.data\"\341\016\n\014WORLD_EVE" +
      "NTS\022\r\n\002id\030\001 \002(\005:\0010\022\024\n\nevent_name\030\002 \001(\t:\000" +
      "\022\027\n\014event_unlock\030\003 \001(\005:\0010\022\024\n\nevent_desc\030" +
      "\004 \001(\t:\000\022\024\n\nevent_news\030\005 \001(\t:\000\022\032\n\020event_n" +
      "ewsdetail\030\006 \001(\t:\000\022\031\n\016event_duration\030\007 \001(" +
      "\005:\0010\022\024\n\nevent_icon\030\010 \001(\t:\000\022\025\n\nevent_prob" +
      "\030\t \001(\005:\0010\022\023\n\010con_prob\030\n \001(\005:\0010\022\024\n\tinva_p" +
      "rob\030\013 \001(\005:\0010\022\025\n\nzombie_atk\030\014 \001(\005:\0010\022\025\n\nz" +
      "ombie_def\030\r \001(\005:\0010\022\024\n\tzombie_hp\030\016 \001(\005:\0010",
      "\022\025\n\nzombie_num\030\017 \001(\005:\0010\022\021\n\006health\030\020 \001(\005:" +
      "\0010\022\017\n\004mood\030\021 \001(\005:\0010\022\027\n\014dami_bldgcap\030\022 \001(" +
      "\005:\0010\022\031\n\016shucai_bldgcap\030\023 \001(\005:\0010\022\032\n\017shuig" +
      "uo_bldgcap\030\024 \001(\005:\0010\022\027\n\014jing_bldgcap\030\025 \001(" +
      "\005:\0010\022\031\n\016lushui_bldgcap\030\026 \001(\005:\0010\022\032\n\017songs" +
      "hu_bldgcap\030\027 \001(\005:\0010\022\027\n\014dami_bldgspd\030\030 \001(" +
      "\005:\0010\022\031\n\016shucai_bldgspd\030\031 \001(\005:\0010\022\032\n\017shuig" +
      "uo_bldgspd\030\032 \001(\005:\0010\022\027\n\014jing_bldgspd\030\033 \001(" +
      "\005:\0010\022\031\n\016lushui_bldgspd\030\034 \001(\005:\0010\022\032\n\017songs" +
      "hu_bldgspd\030\035 \001(\005:\0010\022\031\n\016fengli_bldgspd\030\036 ",
      "\001(\005:\0010\022\032\n\017wuxiandian_bldg\030\037 \001(\005:\0010\022\025\n\nle" +
      "ida_bldg\030  \001(\005:\0010\022\026\n\013car_bldgspd\030! \001(\005:\001" +
      "0\022\024\n\ttax_coeff\030\" \001(\005:\0010\022\017\n\004dami\030# \001(\005:\0010" +
      "\022\021\n\006shucai\030$ \001(\005:\0010\022\022\n\007shuiguo\030% \001(\005:\0010\022" +
      "\021\n\006huafei\030& \001(\005:\0010\022\017\n\004shui\030\' \001(\005:\0010\022\021\n\006s" +
      "ongmu\030( \001(\005:\0010\022\021\n\006shuini\030) \001(\005:\0010\022\016\n\003cao" +
      "\030* \001(\005:\0010\022\022\n\007yuanyou\030+ \001(\005:\0010\022\016\n\003tie\030, \001" +
      "(\005:\0010\022\023\n\010jijiubao\030- \001(\005:\0010\022\020\n\005rizhi\030. \001(" +
      "\005:\0010\022\027\n\014jiqiangtuzhi\030/ \001(\005:\0010\022\024\n\tjujituz" +
      "hi\0300 \001(\005:\0010\022\025\n\njipaotuzhi\0301 \001(\005:\0010\022\027\n\014yu",
      "anlongping\0302 \001(\005:\0010\022\027\n\014huafeigongye\0303 \001(" +
      "\005:\0010\022\022\n\007yangzhu\0304 \001(\005:\0010\022\022\n\007cangchu\0305 \001(" +
      "\005:\0010\022\021\n\006tesila\0306 \001(\005:\0010\022\025\n\nluokefeile\0307 " +
      "\001(\005:\0010\022\022\n\007kanaiji\0308 \001(\005:\0010\022\020\n\005luban\0309 \001(" +
      "\005:\0010\022\017\n\004tumu\030: \001(\005:\0010\022\022\n\007fangdao\030; \001(\005:\001" +
      "0\022\022\n\007makeqin\030< \001(\005:\0010\022\025\n\nwodefendou\030= \001(" +
      "\005:\0010\022\023\n\010jiatelin\030> \001(\005:\0010\022\023\n\010wbaleite\030? " +
      "\001(\005:\0010\022\022\n\007guanren\030@ \001(\005:\0010\022\022\n\007toukui1\030A " +
      "\001(\005:\0010\022\022\n\007toukui2\030B \001(\005:\0010\022\022\n\007toukui3\030C " +
      "\001(\005:\0010\022\025\n\nshouqiang1\030D \001(\005:\0010\022\023\n\010buqiang",
      "1\030E \001(\005:\0010\022\027\n\014qingjiqiang1\030F \001(\005:\0010\022\025\n\nf" +
      "angdanyi1\030G \001(\005:\0010\022\025\n\nfangdanyi2\030H \001(\005:\001" +
      "0\022\025\n\nfangdanyi3\030I \001(\005:\0010\022\020\n\005kuzi1\030J \001(\005:" +
      "\0010\022\020\n\005kuzi2\030K \001(\005:\0010\022\020\n\005kuzi3\030L \001(\005:\0010\022\021" +
      "\n\006xiezi1\030M \001(\005:\0010\022\021\n\006xiezi2\030N \001(\005:\0010\022\021\n\006" +
      "xiezi3\030O \001(\005:\0010\022\030\n\rkuangquanshui\030P \001(\005:\001" +
      "0\022\021\n\006siliao\030Q \001(\005:\0010\022\021\n\006zhurou\030R \001(\005:\0010\022" +
      "\020\n\005qiyou\030S \001(\005:\0010\022\017\n\004gang\030T \001(\005:\0010\022\024\n\tso" +
      "ngmuban\030U \001(\005:\0010\022\024\n\thunningtu\030V \001(\005:\0010\"S" +
      "\n\022WORLD_EVENTS_ARRAY\022=\n\005items\030\001 \003(\0132..co",
      "m.game.framework.resource.data.WORLD_EVE" +
      "NTS"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_game_framework_resource_data_WORLD_EVENTS_descriptor,
        new java.lang.String[] { "Id", "EventName", "EventUnlock", "EventDesc", "EventNews", "EventNewsdetail", "EventDuration", "EventIcon", "EventProb", "ConProb", "InvaProb", "ZombieAtk", "ZombieDef", "ZombieHp", "ZombieNum", "Health", "Mood", "DamiBldgcap", "ShucaiBldgcap", "ShuiguoBldgcap", "JingBldgcap", "LushuiBldgcap", "SongshuBldgcap", "DamiBldgspd", "ShucaiBldgspd", "ShuiguoBldgspd", "JingBldgspd", "LushuiBldgspd", "SongshuBldgspd", "FengliBldgspd", "WuxiandianBldg", "LeidaBldg", "CarBldgspd", "TaxCoeff", "Dami", "Shucai", "Shuiguo", "Huafei", "Shui", "Songmu", "Shuini", "Cao", "Yuanyou", "Tie", "Jijiubao", "Rizhi", "Jiqiangtuzhi", "Jujituzhi", "Jipaotuzhi", "Yuanlongping", "Huafeigongye", "Yangzhu", "Cangchu", "Tesila", "Luokefeile", "Kanaiji", "Luban", "Tumu", "Fangdao", "Makeqin", "Wodefendou", "Jiatelin", "Wbaleite", "Guanren", "Toukui1", "Toukui2", "Toukui3", "Shouqiang1", "Buqiang1", "Qingjiqiang1", "Fangdanyi1", "Fangdanyi2", "Fangdanyi3", "Kuzi1", "Kuzi2", "Kuzi3", "Xiezi1", "Xiezi2", "Xiezi3", "Kuangquanshui", "Siliao", "Zhurou", "Qiyou", "Gang", "Songmuban", "Hunningtu", });
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_game_framework_resource_data_WORLD_EVENTS_ARRAY_descriptor,
        new java.lang.String[] { "Items", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
