// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: database.proto

package com.game.framework.protocol;

public final class Database {
  private Database() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface UserResourceOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 rice = 1;
    /**
     * <code>optional int32 rice = 1;</code>
     *
     * <pre>
     * 大米
     * </pre>
     */
    boolean hasRice();
    /**
     * <code>optional int32 rice = 1;</code>
     *
     * <pre>
     * 大米
     * </pre>
     */
    int getRice();

    // optional int32 vegetables = 2;
    /**
     * <code>optional int32 vegetables = 2;</code>
     *
     * <pre>
     * 蔬菜
     * </pre>
     */
    boolean hasVegetables();
    /**
     * <code>optional int32 vegetables = 2;</code>
     *
     * <pre>
     * 蔬菜
     * </pre>
     */
    int getVegetables();

    // optional int32 fruit = 3;
    /**
     * <code>optional int32 fruit = 3;</code>
     *
     * <pre>
     * 水果
     * </pre>
     */
    boolean hasFruit();
    /**
     * <code>optional int32 fruit = 3;</code>
     *
     * <pre>
     * 水果
     * </pre>
     */
    int getFruit();

    // optional int32 grass = 4;
    /**
     * <code>optional int32 grass = 4;</code>
     *
     * <pre>
     * 草
     * </pre>
     */
    boolean hasGrass();
    /**
     * <code>optional int32 grass = 4;</code>
     *
     * <pre>
     * 草
     * </pre>
     */
    int getGrass();

    // optional int32 pigFood = 5;
    /**
     * <code>optional int32 pigFood = 5;</code>
     *
     * <pre>
     * 猪饲料
     * </pre>
     */
    boolean hasPigFood();
    /**
     * <code>optional int32 pigFood = 5;</code>
     *
     * <pre>
     * 猪饲料
     * </pre>
     */
    int getPigFood();

    // optional int32 pork = 6;
    /**
     * <code>optional int32 pork = 6;</code>
     *
     * <pre>
     * 猪肉
     * </pre>
     */
    boolean hasPork();
    /**
     * <code>optional int32 pork = 6;</code>
     *
     * <pre>
     * 猪肉
     * </pre>
     */
    int getPork();

    // optional int32 crude = 7;
    /**
     * <code>optional int32 crude = 7;</code>
     *
     * <pre>
     * 原油
     * </pre>
     */
    boolean hasCrude();
    /**
     * <code>optional int32 crude = 7;</code>
     *
     * <pre>
     * 原油
     * </pre>
     */
    int getCrude();

    // optional int32 gasoline = 8;
    /**
     * <code>optional int32 gasoline = 8;</code>
     *
     * <pre>
     * 汽油
     * </pre>
     */
    boolean hasGasoline();
    /**
     * <code>optional int32 gasoline = 8;</code>
     *
     * <pre>
     * 汽油
     * </pre>
     */
    int getGasoline();

    // optional int32 iron = 9;
    /**
     * <code>optional int32 iron = 9;</code>
     *
     * <pre>
     * 铁
     * </pre>
     */
    boolean hasIron();
    /**
     * <code>optional int32 iron = 9;</code>
     *
     * <pre>
     * 铁
     * </pre>
     */
    int getIron();

    // optional int32 steel = 10;
    /**
     * <code>optional int32 steel = 10;</code>
     *
     * <pre>
     * 钢
     * </pre>
     */
    boolean hasSteel();
    /**
     * <code>optional int32 steel = 10;</code>
     *
     * <pre>
     * 钢
     * </pre>
     */
    int getSteel();

    // optional int32 pine = 11;
    /**
     * <code>optional int32 pine = 11;</code>
     *
     * <pre>
     * 松木
     * </pre>
     */
    boolean hasPine();
    /**
     * <code>optional int32 pine = 11;</code>
     *
     * <pre>
     * 松木
     * </pre>
     */
    int getPine();

    // optional int32 whiteBirch = 12;
    /**
     * <code>optional int32 whiteBirch = 12;</code>
     *
     * <pre>
     * 白桦木
     * </pre>
     */
    boolean hasWhiteBirch();
    /**
     * <code>optional int32 whiteBirch = 12;</code>
     *
     * <pre>
     * 白桦木
     * </pre>
     */
    int getWhiteBirch();

    // optional int32 ironBirch = 13;
    /**
     * <code>optional int32 ironBirch = 13;</code>
     *
     * <pre>
     * 铁桦木
     * </pre>
     */
    boolean hasIronBirch();
    /**
     * <code>optional int32 ironBirch = 13;</code>
     *
     * <pre>
     * 铁桦木
     * </pre>
     */
    int getIronBirch();

    // optional int32 pineBoard = 14;
    /**
     * <code>optional int32 pineBoard = 14;</code>
     *
     * <pre>
     * 松木板
     * </pre>
     */
    boolean hasPineBoard();
    /**
     * <code>optional int32 pineBoard = 14;</code>
     *
     * <pre>
     * 松木板
     * </pre>
     */
    int getPineBoard();

    // optional int32 whiteBirchBoard = 15;
    /**
     * <code>optional int32 whiteBirchBoard = 15;</code>
     *
     * <pre>
     * 白桦木板
     * </pre>
     */
    boolean hasWhiteBirchBoard();
    /**
     * <code>optional int32 whiteBirchBoard = 15;</code>
     *
     * <pre>
     * 白桦木板
     * </pre>
     */
    int getWhiteBirchBoard();

    // optional int32 ironBirchBoard = 16;
    /**
     * <code>optional int32 ironBirchBoard = 16;</code>
     *
     * <pre>
     * 铁桦木板
     * </pre>
     */
    boolean hasIronBirchBoard();
    /**
     * <code>optional int32 ironBirchBoard = 16;</code>
     *
     * <pre>
     * 铁桦木板
     * </pre>
     */
    int getIronBirchBoard();

    // optional int32 pureWater = 17;
    /**
     * <code>optional int32 pureWater = 17;</code>
     *
     * <pre>
     * 纯净水
     * </pre>
     */
    boolean hasPureWater();
    /**
     * <code>optional int32 pureWater = 17;</code>
     *
     * <pre>
     * 纯净水
     * </pre>
     */
    int getPureWater();

    // optional int32 mineralWater = 18;
    /**
     * <code>optional int32 mineralWater = 18;</code>
     *
     * <pre>
     * 矿物质水
     * </pre>
     */
    boolean hasMineralWater();
    /**
     * <code>optional int32 mineralWater = 18;</code>
     *
     * <pre>
     * 矿物质水
     * </pre>
     */
    int getMineralWater();

    // optional int32 electricity = 19;
    /**
     * <code>optional int32 electricity = 19;</code>
     *
     * <pre>
     * 电力
     * </pre>
     */
    boolean hasElectricity();
    /**
     * <code>optional int32 electricity = 19;</code>
     *
     * <pre>
     * 电力
     * </pre>
     */
    int getElectricity();

    // optional int32 bullet = 20;
    /**
     * <code>optional int32 bullet = 20;</code>
     *
     * <pre>
     * 子弹
     * </pre>
     */
    boolean hasBullet();
    /**
     * <code>optional int32 bullet = 20;</code>
     *
     * <pre>
     * 子弹
     * </pre>
     */
    int getBullet();
  }
  /**
   * Protobuf type {@code com.game.framework.protocol.UserResource}
   */
  public static final class UserResource extends
      com.google.protobuf.GeneratedMessage
      implements UserResourceOrBuilder {
    // Use UserResource.newBuilder() to construct.
    private UserResource(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UserResource(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UserResource defaultInstance;
    public static UserResource getDefaultInstance() {
      return defaultInstance;
    }

    public UserResource getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UserResource(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rice_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              vegetables_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fruit_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              grass_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              pigFood_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              pork_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              crude_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              gasoline_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              iron_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              steel_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              pine_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              whiteBirch_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              ironBirch_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              pineBoard_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              whiteBirchBoard_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              ironBirchBoard_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              pureWater_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              mineralWater_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              electricity_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              bullet_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_UserResource_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_UserResource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.game.framework.protocol.Database.UserResource.class, com.game.framework.protocol.Database.UserResource.Builder.class);
    }

    public static com.google.protobuf.Parser<UserResource> PARSER =
        new com.google.protobuf.AbstractParser<UserResource>() {
      public UserResource parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserResource(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserResource> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 rice = 1;
    public static final int RICE_FIELD_NUMBER = 1;
    private int rice_;
    /**
     * <code>optional int32 rice = 1;</code>
     *
     * <pre>
     * 大米
     * </pre>
     */
    public boolean hasRice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 rice = 1;</code>
     *
     * <pre>
     * 大米
     * </pre>
     */
    public int getRice() {
      return rice_;
    }

    // optional int32 vegetables = 2;
    public static final int VEGETABLES_FIELD_NUMBER = 2;
    private int vegetables_;
    /**
     * <code>optional int32 vegetables = 2;</code>
     *
     * <pre>
     * 蔬菜
     * </pre>
     */
    public boolean hasVegetables() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 vegetables = 2;</code>
     *
     * <pre>
     * 蔬菜
     * </pre>
     */
    public int getVegetables() {
      return vegetables_;
    }

    // optional int32 fruit = 3;
    public static final int FRUIT_FIELD_NUMBER = 3;
    private int fruit_;
    /**
     * <code>optional int32 fruit = 3;</code>
     *
     * <pre>
     * 水果
     * </pre>
     */
    public boolean hasFruit() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 fruit = 3;</code>
     *
     * <pre>
     * 水果
     * </pre>
     */
    public int getFruit() {
      return fruit_;
    }

    // optional int32 grass = 4;
    public static final int GRASS_FIELD_NUMBER = 4;
    private int grass_;
    /**
     * <code>optional int32 grass = 4;</code>
     *
     * <pre>
     * 草
     * </pre>
     */
    public boolean hasGrass() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 grass = 4;</code>
     *
     * <pre>
     * 草
     * </pre>
     */
    public int getGrass() {
      return grass_;
    }

    // optional int32 pigFood = 5;
    public static final int PIGFOOD_FIELD_NUMBER = 5;
    private int pigFood_;
    /**
     * <code>optional int32 pigFood = 5;</code>
     *
     * <pre>
     * 猪饲料
     * </pre>
     */
    public boolean hasPigFood() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 pigFood = 5;</code>
     *
     * <pre>
     * 猪饲料
     * </pre>
     */
    public int getPigFood() {
      return pigFood_;
    }

    // optional int32 pork = 6;
    public static final int PORK_FIELD_NUMBER = 6;
    private int pork_;
    /**
     * <code>optional int32 pork = 6;</code>
     *
     * <pre>
     * 猪肉
     * </pre>
     */
    public boolean hasPork() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 pork = 6;</code>
     *
     * <pre>
     * 猪肉
     * </pre>
     */
    public int getPork() {
      return pork_;
    }

    // optional int32 crude = 7;
    public static final int CRUDE_FIELD_NUMBER = 7;
    private int crude_;
    /**
     * <code>optional int32 crude = 7;</code>
     *
     * <pre>
     * 原油
     * </pre>
     */
    public boolean hasCrude() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 crude = 7;</code>
     *
     * <pre>
     * 原油
     * </pre>
     */
    public int getCrude() {
      return crude_;
    }

    // optional int32 gasoline = 8;
    public static final int GASOLINE_FIELD_NUMBER = 8;
    private int gasoline_;
    /**
     * <code>optional int32 gasoline = 8;</code>
     *
     * <pre>
     * 汽油
     * </pre>
     */
    public boolean hasGasoline() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 gasoline = 8;</code>
     *
     * <pre>
     * 汽油
     * </pre>
     */
    public int getGasoline() {
      return gasoline_;
    }

    // optional int32 iron = 9;
    public static final int IRON_FIELD_NUMBER = 9;
    private int iron_;
    /**
     * <code>optional int32 iron = 9;</code>
     *
     * <pre>
     * 铁
     * </pre>
     */
    public boolean hasIron() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 iron = 9;</code>
     *
     * <pre>
     * 铁
     * </pre>
     */
    public int getIron() {
      return iron_;
    }

    // optional int32 steel = 10;
    public static final int STEEL_FIELD_NUMBER = 10;
    private int steel_;
    /**
     * <code>optional int32 steel = 10;</code>
     *
     * <pre>
     * 钢
     * </pre>
     */
    public boolean hasSteel() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 steel = 10;</code>
     *
     * <pre>
     * 钢
     * </pre>
     */
    public int getSteel() {
      return steel_;
    }

    // optional int32 pine = 11;
    public static final int PINE_FIELD_NUMBER = 11;
    private int pine_;
    /**
     * <code>optional int32 pine = 11;</code>
     *
     * <pre>
     * 松木
     * </pre>
     */
    public boolean hasPine() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 pine = 11;</code>
     *
     * <pre>
     * 松木
     * </pre>
     */
    public int getPine() {
      return pine_;
    }

    // optional int32 whiteBirch = 12;
    public static final int WHITEBIRCH_FIELD_NUMBER = 12;
    private int whiteBirch_;
    /**
     * <code>optional int32 whiteBirch = 12;</code>
     *
     * <pre>
     * 白桦木
     * </pre>
     */
    public boolean hasWhiteBirch() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 whiteBirch = 12;</code>
     *
     * <pre>
     * 白桦木
     * </pre>
     */
    public int getWhiteBirch() {
      return whiteBirch_;
    }

    // optional int32 ironBirch = 13;
    public static final int IRONBIRCH_FIELD_NUMBER = 13;
    private int ironBirch_;
    /**
     * <code>optional int32 ironBirch = 13;</code>
     *
     * <pre>
     * 铁桦木
     * </pre>
     */
    public boolean hasIronBirch() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 ironBirch = 13;</code>
     *
     * <pre>
     * 铁桦木
     * </pre>
     */
    public int getIronBirch() {
      return ironBirch_;
    }

    // optional int32 pineBoard = 14;
    public static final int PINEBOARD_FIELD_NUMBER = 14;
    private int pineBoard_;
    /**
     * <code>optional int32 pineBoard = 14;</code>
     *
     * <pre>
     * 松木板
     * </pre>
     */
    public boolean hasPineBoard() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 pineBoard = 14;</code>
     *
     * <pre>
     * 松木板
     * </pre>
     */
    public int getPineBoard() {
      return pineBoard_;
    }

    // optional int32 whiteBirchBoard = 15;
    public static final int WHITEBIRCHBOARD_FIELD_NUMBER = 15;
    private int whiteBirchBoard_;
    /**
     * <code>optional int32 whiteBirchBoard = 15;</code>
     *
     * <pre>
     * 白桦木板
     * </pre>
     */
    public boolean hasWhiteBirchBoard() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 whiteBirchBoard = 15;</code>
     *
     * <pre>
     * 白桦木板
     * </pre>
     */
    public int getWhiteBirchBoard() {
      return whiteBirchBoard_;
    }

    // optional int32 ironBirchBoard = 16;
    public static final int IRONBIRCHBOARD_FIELD_NUMBER = 16;
    private int ironBirchBoard_;
    /**
     * <code>optional int32 ironBirchBoard = 16;</code>
     *
     * <pre>
     * 铁桦木板
     * </pre>
     */
    public boolean hasIronBirchBoard() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 ironBirchBoard = 16;</code>
     *
     * <pre>
     * 铁桦木板
     * </pre>
     */
    public int getIronBirchBoard() {
      return ironBirchBoard_;
    }

    // optional int32 pureWater = 17;
    public static final int PUREWATER_FIELD_NUMBER = 17;
    private int pureWater_;
    /**
     * <code>optional int32 pureWater = 17;</code>
     *
     * <pre>
     * 纯净水
     * </pre>
     */
    public boolean hasPureWater() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 pureWater = 17;</code>
     *
     * <pre>
     * 纯净水
     * </pre>
     */
    public int getPureWater() {
      return pureWater_;
    }

    // optional int32 mineralWater = 18;
    public static final int MINERALWATER_FIELD_NUMBER = 18;
    private int mineralWater_;
    /**
     * <code>optional int32 mineralWater = 18;</code>
     *
     * <pre>
     * 矿物质水
     * </pre>
     */
    public boolean hasMineralWater() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 mineralWater = 18;</code>
     *
     * <pre>
     * 矿物质水
     * </pre>
     */
    public int getMineralWater() {
      return mineralWater_;
    }

    // optional int32 electricity = 19;
    public static final int ELECTRICITY_FIELD_NUMBER = 19;
    private int electricity_;
    /**
     * <code>optional int32 electricity = 19;</code>
     *
     * <pre>
     * 电力
     * </pre>
     */
    public boolean hasElectricity() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 electricity = 19;</code>
     *
     * <pre>
     * 电力
     * </pre>
     */
    public int getElectricity() {
      return electricity_;
    }

    // optional int32 bullet = 20;
    public static final int BULLET_FIELD_NUMBER = 20;
    private int bullet_;
    /**
     * <code>optional int32 bullet = 20;</code>
     *
     * <pre>
     * 子弹
     * </pre>
     */
    public boolean hasBullet() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 bullet = 20;</code>
     *
     * <pre>
     * 子弹
     * </pre>
     */
    public int getBullet() {
      return bullet_;
    }

    private void initFields() {
      rice_ = 0;
      vegetables_ = 0;
      fruit_ = 0;
      grass_ = 0;
      pigFood_ = 0;
      pork_ = 0;
      crude_ = 0;
      gasoline_ = 0;
      iron_ = 0;
      steel_ = 0;
      pine_ = 0;
      whiteBirch_ = 0;
      ironBirch_ = 0;
      pineBoard_ = 0;
      whiteBirchBoard_ = 0;
      ironBirchBoard_ = 0;
      pureWater_ = 0;
      mineralWater_ = 0;
      electricity_ = 0;
      bullet_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rice_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, vegetables_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, fruit_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, grass_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, pigFood_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, pork_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, crude_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, gasoline_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, iron_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, steel_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, pine_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, whiteBirch_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, ironBirch_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, pineBoard_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, whiteBirchBoard_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, ironBirchBoard_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, pureWater_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, mineralWater_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, electricity_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, bullet_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rice_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, vegetables_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, fruit_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, grass_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, pigFood_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, pork_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, crude_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, gasoline_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, iron_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, steel_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, pine_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, whiteBirch_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, ironBirch_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, pineBoard_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, whiteBirchBoard_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, ironBirchBoard_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, pureWater_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, mineralWater_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, electricity_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, bullet_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.game.framework.protocol.Database.UserResource parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.protocol.Database.UserResource parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.UserResource parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.protocol.Database.UserResource parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.UserResource parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.protocol.Database.UserResource parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.UserResource parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.game.framework.protocol.Database.UserResource parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.UserResource parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.protocol.Database.UserResource parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.game.framework.protocol.Database.UserResource prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.game.framework.protocol.UserResource}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.game.framework.protocol.Database.UserResourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_UserResource_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_UserResource_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.game.framework.protocol.Database.UserResource.class, com.game.framework.protocol.Database.UserResource.Builder.class);
      }

      // Construct using com.game.framework.protocol.Database.UserResource.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        vegetables_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fruit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        grass_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        pigFood_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        pork_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        crude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        gasoline_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        iron_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        steel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        pine_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        whiteBirch_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        ironBirch_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        pineBoard_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        whiteBirchBoard_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        ironBirchBoard_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        pureWater_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        mineralWater_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        electricity_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        bullet_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_UserResource_descriptor;
      }

      public com.game.framework.protocol.Database.UserResource getDefaultInstanceForType() {
        return com.game.framework.protocol.Database.UserResource.getDefaultInstance();
      }

      public com.game.framework.protocol.Database.UserResource build() {
        com.game.framework.protocol.Database.UserResource result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.game.framework.protocol.Database.UserResource buildPartial() {
        com.game.framework.protocol.Database.UserResource result = new com.game.framework.protocol.Database.UserResource(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rice_ = rice_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.vegetables_ = vegetables_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fruit_ = fruit_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.grass_ = grass_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.pigFood_ = pigFood_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.pork_ = pork_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.crude_ = crude_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.gasoline_ = gasoline_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.iron_ = iron_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.steel_ = steel_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.pine_ = pine_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.whiteBirch_ = whiteBirch_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.ironBirch_ = ironBirch_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.pineBoard_ = pineBoard_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.whiteBirchBoard_ = whiteBirchBoard_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.ironBirchBoard_ = ironBirchBoard_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.pureWater_ = pureWater_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.mineralWater_ = mineralWater_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.electricity_ = electricity_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.bullet_ = bullet_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.game.framework.protocol.Database.UserResource) {
          return mergeFrom((com.game.framework.protocol.Database.UserResource)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.game.framework.protocol.Database.UserResource other) {
        if (other == com.game.framework.protocol.Database.UserResource.getDefaultInstance()) return this;
        if (other.hasRice()) {
          setRice(other.getRice());
        }
        if (other.hasVegetables()) {
          setVegetables(other.getVegetables());
        }
        if (other.hasFruit()) {
          setFruit(other.getFruit());
        }
        if (other.hasGrass()) {
          setGrass(other.getGrass());
        }
        if (other.hasPigFood()) {
          setPigFood(other.getPigFood());
        }
        if (other.hasPork()) {
          setPork(other.getPork());
        }
        if (other.hasCrude()) {
          setCrude(other.getCrude());
        }
        if (other.hasGasoline()) {
          setGasoline(other.getGasoline());
        }
        if (other.hasIron()) {
          setIron(other.getIron());
        }
        if (other.hasSteel()) {
          setSteel(other.getSteel());
        }
        if (other.hasPine()) {
          setPine(other.getPine());
        }
        if (other.hasWhiteBirch()) {
          setWhiteBirch(other.getWhiteBirch());
        }
        if (other.hasIronBirch()) {
          setIronBirch(other.getIronBirch());
        }
        if (other.hasPineBoard()) {
          setPineBoard(other.getPineBoard());
        }
        if (other.hasWhiteBirchBoard()) {
          setWhiteBirchBoard(other.getWhiteBirchBoard());
        }
        if (other.hasIronBirchBoard()) {
          setIronBirchBoard(other.getIronBirchBoard());
        }
        if (other.hasPureWater()) {
          setPureWater(other.getPureWater());
        }
        if (other.hasMineralWater()) {
          setMineralWater(other.getMineralWater());
        }
        if (other.hasElectricity()) {
          setElectricity(other.getElectricity());
        }
        if (other.hasBullet()) {
          setBullet(other.getBullet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.game.framework.protocol.Database.UserResource parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.game.framework.protocol.Database.UserResource) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 rice = 1;
      private int rice_ ;
      /**
       * <code>optional int32 rice = 1;</code>
       *
       * <pre>
       * 大米
       * </pre>
       */
      public boolean hasRice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 rice = 1;</code>
       *
       * <pre>
       * 大米
       * </pre>
       */
      public int getRice() {
        return rice_;
      }
      /**
       * <code>optional int32 rice = 1;</code>
       *
       * <pre>
       * 大米
       * </pre>
       */
      public Builder setRice(int value) {
        bitField0_ |= 0x00000001;
        rice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rice = 1;</code>
       *
       * <pre>
       * 大米
       * </pre>
       */
      public Builder clearRice() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rice_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vegetables = 2;
      private int vegetables_ ;
      /**
       * <code>optional int32 vegetables = 2;</code>
       *
       * <pre>
       * 蔬菜
       * </pre>
       */
      public boolean hasVegetables() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 vegetables = 2;</code>
       *
       * <pre>
       * 蔬菜
       * </pre>
       */
      public int getVegetables() {
        return vegetables_;
      }
      /**
       * <code>optional int32 vegetables = 2;</code>
       *
       * <pre>
       * 蔬菜
       * </pre>
       */
      public Builder setVegetables(int value) {
        bitField0_ |= 0x00000002;
        vegetables_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vegetables = 2;</code>
       *
       * <pre>
       * 蔬菜
       * </pre>
       */
      public Builder clearVegetables() {
        bitField0_ = (bitField0_ & ~0x00000002);
        vegetables_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fruit = 3;
      private int fruit_ ;
      /**
       * <code>optional int32 fruit = 3;</code>
       *
       * <pre>
       * 水果
       * </pre>
       */
      public boolean hasFruit() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 fruit = 3;</code>
       *
       * <pre>
       * 水果
       * </pre>
       */
      public int getFruit() {
        return fruit_;
      }
      /**
       * <code>optional int32 fruit = 3;</code>
       *
       * <pre>
       * 水果
       * </pre>
       */
      public Builder setFruit(int value) {
        bitField0_ |= 0x00000004;
        fruit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fruit = 3;</code>
       *
       * <pre>
       * 水果
       * </pre>
       */
      public Builder clearFruit() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fruit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 grass = 4;
      private int grass_ ;
      /**
       * <code>optional int32 grass = 4;</code>
       *
       * <pre>
       * 草
       * </pre>
       */
      public boolean hasGrass() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 grass = 4;</code>
       *
       * <pre>
       * 草
       * </pre>
       */
      public int getGrass() {
        return grass_;
      }
      /**
       * <code>optional int32 grass = 4;</code>
       *
       * <pre>
       * 草
       * </pre>
       */
      public Builder setGrass(int value) {
        bitField0_ |= 0x00000008;
        grass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 grass = 4;</code>
       *
       * <pre>
       * 草
       * </pre>
       */
      public Builder clearGrass() {
        bitField0_ = (bitField0_ & ~0x00000008);
        grass_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pigFood = 5;
      private int pigFood_ ;
      /**
       * <code>optional int32 pigFood = 5;</code>
       *
       * <pre>
       * 猪饲料
       * </pre>
       */
      public boolean hasPigFood() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 pigFood = 5;</code>
       *
       * <pre>
       * 猪饲料
       * </pre>
       */
      public int getPigFood() {
        return pigFood_;
      }
      /**
       * <code>optional int32 pigFood = 5;</code>
       *
       * <pre>
       * 猪饲料
       * </pre>
       */
      public Builder setPigFood(int value) {
        bitField0_ |= 0x00000010;
        pigFood_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pigFood = 5;</code>
       *
       * <pre>
       * 猪饲料
       * </pre>
       */
      public Builder clearPigFood() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pigFood_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pork = 6;
      private int pork_ ;
      /**
       * <code>optional int32 pork = 6;</code>
       *
       * <pre>
       * 猪肉
       * </pre>
       */
      public boolean hasPork() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 pork = 6;</code>
       *
       * <pre>
       * 猪肉
       * </pre>
       */
      public int getPork() {
        return pork_;
      }
      /**
       * <code>optional int32 pork = 6;</code>
       *
       * <pre>
       * 猪肉
       * </pre>
       */
      public Builder setPork(int value) {
        bitField0_ |= 0x00000020;
        pork_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pork = 6;</code>
       *
       * <pre>
       * 猪肉
       * </pre>
       */
      public Builder clearPork() {
        bitField0_ = (bitField0_ & ~0x00000020);
        pork_ = 0;
        onChanged();
        return this;
      }

      // optional int32 crude = 7;
      private int crude_ ;
      /**
       * <code>optional int32 crude = 7;</code>
       *
       * <pre>
       * 原油
       * </pre>
       */
      public boolean hasCrude() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 crude = 7;</code>
       *
       * <pre>
       * 原油
       * </pre>
       */
      public int getCrude() {
        return crude_;
      }
      /**
       * <code>optional int32 crude = 7;</code>
       *
       * <pre>
       * 原油
       * </pre>
       */
      public Builder setCrude(int value) {
        bitField0_ |= 0x00000040;
        crude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 crude = 7;</code>
       *
       * <pre>
       * 原油
       * </pre>
       */
      public Builder clearCrude() {
        bitField0_ = (bitField0_ & ~0x00000040);
        crude_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gasoline = 8;
      private int gasoline_ ;
      /**
       * <code>optional int32 gasoline = 8;</code>
       *
       * <pre>
       * 汽油
       * </pre>
       */
      public boolean hasGasoline() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 gasoline = 8;</code>
       *
       * <pre>
       * 汽油
       * </pre>
       */
      public int getGasoline() {
        return gasoline_;
      }
      /**
       * <code>optional int32 gasoline = 8;</code>
       *
       * <pre>
       * 汽油
       * </pre>
       */
      public Builder setGasoline(int value) {
        bitField0_ |= 0x00000080;
        gasoline_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gasoline = 8;</code>
       *
       * <pre>
       * 汽油
       * </pre>
       */
      public Builder clearGasoline() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gasoline_ = 0;
        onChanged();
        return this;
      }

      // optional int32 iron = 9;
      private int iron_ ;
      /**
       * <code>optional int32 iron = 9;</code>
       *
       * <pre>
       * 铁
       * </pre>
       */
      public boolean hasIron() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 iron = 9;</code>
       *
       * <pre>
       * 铁
       * </pre>
       */
      public int getIron() {
        return iron_;
      }
      /**
       * <code>optional int32 iron = 9;</code>
       *
       * <pre>
       * 铁
       * </pre>
       */
      public Builder setIron(int value) {
        bitField0_ |= 0x00000100;
        iron_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 iron = 9;</code>
       *
       * <pre>
       * 铁
       * </pre>
       */
      public Builder clearIron() {
        bitField0_ = (bitField0_ & ~0x00000100);
        iron_ = 0;
        onChanged();
        return this;
      }

      // optional int32 steel = 10;
      private int steel_ ;
      /**
       * <code>optional int32 steel = 10;</code>
       *
       * <pre>
       * 钢
       * </pre>
       */
      public boolean hasSteel() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 steel = 10;</code>
       *
       * <pre>
       * 钢
       * </pre>
       */
      public int getSteel() {
        return steel_;
      }
      /**
       * <code>optional int32 steel = 10;</code>
       *
       * <pre>
       * 钢
       * </pre>
       */
      public Builder setSteel(int value) {
        bitField0_ |= 0x00000200;
        steel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 steel = 10;</code>
       *
       * <pre>
       * 钢
       * </pre>
       */
      public Builder clearSteel() {
        bitField0_ = (bitField0_ & ~0x00000200);
        steel_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pine = 11;
      private int pine_ ;
      /**
       * <code>optional int32 pine = 11;</code>
       *
       * <pre>
       * 松木
       * </pre>
       */
      public boolean hasPine() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 pine = 11;</code>
       *
       * <pre>
       * 松木
       * </pre>
       */
      public int getPine() {
        return pine_;
      }
      /**
       * <code>optional int32 pine = 11;</code>
       *
       * <pre>
       * 松木
       * </pre>
       */
      public Builder setPine(int value) {
        bitField0_ |= 0x00000400;
        pine_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pine = 11;</code>
       *
       * <pre>
       * 松木
       * </pre>
       */
      public Builder clearPine() {
        bitField0_ = (bitField0_ & ~0x00000400);
        pine_ = 0;
        onChanged();
        return this;
      }

      // optional int32 whiteBirch = 12;
      private int whiteBirch_ ;
      /**
       * <code>optional int32 whiteBirch = 12;</code>
       *
       * <pre>
       * 白桦木
       * </pre>
       */
      public boolean hasWhiteBirch() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 whiteBirch = 12;</code>
       *
       * <pre>
       * 白桦木
       * </pre>
       */
      public int getWhiteBirch() {
        return whiteBirch_;
      }
      /**
       * <code>optional int32 whiteBirch = 12;</code>
       *
       * <pre>
       * 白桦木
       * </pre>
       */
      public Builder setWhiteBirch(int value) {
        bitField0_ |= 0x00000800;
        whiteBirch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 whiteBirch = 12;</code>
       *
       * <pre>
       * 白桦木
       * </pre>
       */
      public Builder clearWhiteBirch() {
        bitField0_ = (bitField0_ & ~0x00000800);
        whiteBirch_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ironBirch = 13;
      private int ironBirch_ ;
      /**
       * <code>optional int32 ironBirch = 13;</code>
       *
       * <pre>
       * 铁桦木
       * </pre>
       */
      public boolean hasIronBirch() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 ironBirch = 13;</code>
       *
       * <pre>
       * 铁桦木
       * </pre>
       */
      public int getIronBirch() {
        return ironBirch_;
      }
      /**
       * <code>optional int32 ironBirch = 13;</code>
       *
       * <pre>
       * 铁桦木
       * </pre>
       */
      public Builder setIronBirch(int value) {
        bitField0_ |= 0x00001000;
        ironBirch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ironBirch = 13;</code>
       *
       * <pre>
       * 铁桦木
       * </pre>
       */
      public Builder clearIronBirch() {
        bitField0_ = (bitField0_ & ~0x00001000);
        ironBirch_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pineBoard = 14;
      private int pineBoard_ ;
      /**
       * <code>optional int32 pineBoard = 14;</code>
       *
       * <pre>
       * 松木板
       * </pre>
       */
      public boolean hasPineBoard() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 pineBoard = 14;</code>
       *
       * <pre>
       * 松木板
       * </pre>
       */
      public int getPineBoard() {
        return pineBoard_;
      }
      /**
       * <code>optional int32 pineBoard = 14;</code>
       *
       * <pre>
       * 松木板
       * </pre>
       */
      public Builder setPineBoard(int value) {
        bitField0_ |= 0x00002000;
        pineBoard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pineBoard = 14;</code>
       *
       * <pre>
       * 松木板
       * </pre>
       */
      public Builder clearPineBoard() {
        bitField0_ = (bitField0_ & ~0x00002000);
        pineBoard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 whiteBirchBoard = 15;
      private int whiteBirchBoard_ ;
      /**
       * <code>optional int32 whiteBirchBoard = 15;</code>
       *
       * <pre>
       * 白桦木板
       * </pre>
       */
      public boolean hasWhiteBirchBoard() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 whiteBirchBoard = 15;</code>
       *
       * <pre>
       * 白桦木板
       * </pre>
       */
      public int getWhiteBirchBoard() {
        return whiteBirchBoard_;
      }
      /**
       * <code>optional int32 whiteBirchBoard = 15;</code>
       *
       * <pre>
       * 白桦木板
       * </pre>
       */
      public Builder setWhiteBirchBoard(int value) {
        bitField0_ |= 0x00004000;
        whiteBirchBoard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 whiteBirchBoard = 15;</code>
       *
       * <pre>
       * 白桦木板
       * </pre>
       */
      public Builder clearWhiteBirchBoard() {
        bitField0_ = (bitField0_ & ~0x00004000);
        whiteBirchBoard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ironBirchBoard = 16;
      private int ironBirchBoard_ ;
      /**
       * <code>optional int32 ironBirchBoard = 16;</code>
       *
       * <pre>
       * 铁桦木板
       * </pre>
       */
      public boolean hasIronBirchBoard() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 ironBirchBoard = 16;</code>
       *
       * <pre>
       * 铁桦木板
       * </pre>
       */
      public int getIronBirchBoard() {
        return ironBirchBoard_;
      }
      /**
       * <code>optional int32 ironBirchBoard = 16;</code>
       *
       * <pre>
       * 铁桦木板
       * </pre>
       */
      public Builder setIronBirchBoard(int value) {
        bitField0_ |= 0x00008000;
        ironBirchBoard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ironBirchBoard = 16;</code>
       *
       * <pre>
       * 铁桦木板
       * </pre>
       */
      public Builder clearIronBirchBoard() {
        bitField0_ = (bitField0_ & ~0x00008000);
        ironBirchBoard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pureWater = 17;
      private int pureWater_ ;
      /**
       * <code>optional int32 pureWater = 17;</code>
       *
       * <pre>
       * 纯净水
       * </pre>
       */
      public boolean hasPureWater() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 pureWater = 17;</code>
       *
       * <pre>
       * 纯净水
       * </pre>
       */
      public int getPureWater() {
        return pureWater_;
      }
      /**
       * <code>optional int32 pureWater = 17;</code>
       *
       * <pre>
       * 纯净水
       * </pre>
       */
      public Builder setPureWater(int value) {
        bitField0_ |= 0x00010000;
        pureWater_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pureWater = 17;</code>
       *
       * <pre>
       * 纯净水
       * </pre>
       */
      public Builder clearPureWater() {
        bitField0_ = (bitField0_ & ~0x00010000);
        pureWater_ = 0;
        onChanged();
        return this;
      }

      // optional int32 mineralWater = 18;
      private int mineralWater_ ;
      /**
       * <code>optional int32 mineralWater = 18;</code>
       *
       * <pre>
       * 矿物质水
       * </pre>
       */
      public boolean hasMineralWater() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 mineralWater = 18;</code>
       *
       * <pre>
       * 矿物质水
       * </pre>
       */
      public int getMineralWater() {
        return mineralWater_;
      }
      /**
       * <code>optional int32 mineralWater = 18;</code>
       *
       * <pre>
       * 矿物质水
       * </pre>
       */
      public Builder setMineralWater(int value) {
        bitField0_ |= 0x00020000;
        mineralWater_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mineralWater = 18;</code>
       *
       * <pre>
       * 矿物质水
       * </pre>
       */
      public Builder clearMineralWater() {
        bitField0_ = (bitField0_ & ~0x00020000);
        mineralWater_ = 0;
        onChanged();
        return this;
      }

      // optional int32 electricity = 19;
      private int electricity_ ;
      /**
       * <code>optional int32 electricity = 19;</code>
       *
       * <pre>
       * 电力
       * </pre>
       */
      public boolean hasElectricity() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 electricity = 19;</code>
       *
       * <pre>
       * 电力
       * </pre>
       */
      public int getElectricity() {
        return electricity_;
      }
      /**
       * <code>optional int32 electricity = 19;</code>
       *
       * <pre>
       * 电力
       * </pre>
       */
      public Builder setElectricity(int value) {
        bitField0_ |= 0x00040000;
        electricity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 electricity = 19;</code>
       *
       * <pre>
       * 电力
       * </pre>
       */
      public Builder clearElectricity() {
        bitField0_ = (bitField0_ & ~0x00040000);
        electricity_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bullet = 20;
      private int bullet_ ;
      /**
       * <code>optional int32 bullet = 20;</code>
       *
       * <pre>
       * 子弹
       * </pre>
       */
      public boolean hasBullet() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 bullet = 20;</code>
       *
       * <pre>
       * 子弹
       * </pre>
       */
      public int getBullet() {
        return bullet_;
      }
      /**
       * <code>optional int32 bullet = 20;</code>
       *
       * <pre>
       * 子弹
       * </pre>
       */
      public Builder setBullet(int value) {
        bitField0_ |= 0x00080000;
        bullet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bullet = 20;</code>
       *
       * <pre>
       * 子弹
       * </pre>
       */
      public Builder clearBullet() {
        bitField0_ = (bitField0_ & ~0x00080000);
        bullet_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.framework.protocol.UserResource)
    }

    static {
      defaultInstance = new UserResource(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.game.framework.protocol.UserResource)
  }

  public interface BuildingStateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .com.game.framework.protocol.Upgrade upgrade = 1;
    /**
     * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
     */
    boolean hasUpgrade();
    /**
     * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
     */
    com.game.framework.protocol.Database.Upgrade getUpgrade();
    /**
     * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
     */
    com.game.framework.protocol.Database.UpgradeOrBuilder getUpgradeOrBuilder();
  }
  /**
   * Protobuf type {@code com.game.framework.protocol.BuildingState}
   */
  public static final class BuildingState extends
      com.google.protobuf.GeneratedMessage
      implements BuildingStateOrBuilder {
    // Use BuildingState.newBuilder() to construct.
    private BuildingState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BuildingState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BuildingState defaultInstance;
    public static BuildingState getDefaultInstance() {
      return defaultInstance;
    }

    public BuildingState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BuildingState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.game.framework.protocol.Database.Upgrade.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = upgrade_.toBuilder();
              }
              upgrade_ = input.readMessage(com.game.framework.protocol.Database.Upgrade.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(upgrade_);
                upgrade_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_BuildingState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_BuildingState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.game.framework.protocol.Database.BuildingState.class, com.game.framework.protocol.Database.BuildingState.Builder.class);
    }

    public static com.google.protobuf.Parser<BuildingState> PARSER =
        new com.google.protobuf.AbstractParser<BuildingState>() {
      public BuildingState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BuildingState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BuildingState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .com.game.framework.protocol.Upgrade upgrade = 1;
    public static final int UPGRADE_FIELD_NUMBER = 1;
    private com.game.framework.protocol.Database.Upgrade upgrade_;
    /**
     * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
     */
    public boolean hasUpgrade() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
     */
    public com.game.framework.protocol.Database.Upgrade getUpgrade() {
      return upgrade_;
    }
    /**
     * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
     */
    public com.game.framework.protocol.Database.UpgradeOrBuilder getUpgradeOrBuilder() {
      return upgrade_;
    }

    private void initFields() {
      upgrade_ = com.game.framework.protocol.Database.Upgrade.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, upgrade_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, upgrade_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.game.framework.protocol.Database.BuildingState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.protocol.Database.BuildingState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.BuildingState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.protocol.Database.BuildingState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.BuildingState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.protocol.Database.BuildingState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.BuildingState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.game.framework.protocol.Database.BuildingState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.BuildingState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.protocol.Database.BuildingState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.game.framework.protocol.Database.BuildingState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.game.framework.protocol.BuildingState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.game.framework.protocol.Database.BuildingStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_BuildingState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_BuildingState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.game.framework.protocol.Database.BuildingState.class, com.game.framework.protocol.Database.BuildingState.Builder.class);
      }

      // Construct using com.game.framework.protocol.Database.BuildingState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUpgradeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (upgradeBuilder_ == null) {
          upgrade_ = com.game.framework.protocol.Database.Upgrade.getDefaultInstance();
        } else {
          upgradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_BuildingState_descriptor;
      }

      public com.game.framework.protocol.Database.BuildingState getDefaultInstanceForType() {
        return com.game.framework.protocol.Database.BuildingState.getDefaultInstance();
      }

      public com.game.framework.protocol.Database.BuildingState build() {
        com.game.framework.protocol.Database.BuildingState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.game.framework.protocol.Database.BuildingState buildPartial() {
        com.game.framework.protocol.Database.BuildingState result = new com.game.framework.protocol.Database.BuildingState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (upgradeBuilder_ == null) {
          result.upgrade_ = upgrade_;
        } else {
          result.upgrade_ = upgradeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.game.framework.protocol.Database.BuildingState) {
          return mergeFrom((com.game.framework.protocol.Database.BuildingState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.game.framework.protocol.Database.BuildingState other) {
        if (other == com.game.framework.protocol.Database.BuildingState.getDefaultInstance()) return this;
        if (other.hasUpgrade()) {
          mergeUpgrade(other.getUpgrade());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.game.framework.protocol.Database.BuildingState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.game.framework.protocol.Database.BuildingState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .com.game.framework.protocol.Upgrade upgrade = 1;
      private com.game.framework.protocol.Database.Upgrade upgrade_ = com.game.framework.protocol.Database.Upgrade.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.game.framework.protocol.Database.Upgrade, com.game.framework.protocol.Database.Upgrade.Builder, com.game.framework.protocol.Database.UpgradeOrBuilder> upgradeBuilder_;
      /**
       * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
       */
      public boolean hasUpgrade() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
       */
      public com.game.framework.protocol.Database.Upgrade getUpgrade() {
        if (upgradeBuilder_ == null) {
          return upgrade_;
        } else {
          return upgradeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
       */
      public Builder setUpgrade(com.game.framework.protocol.Database.Upgrade value) {
        if (upgradeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          upgrade_ = value;
          onChanged();
        } else {
          upgradeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
       */
      public Builder setUpgrade(
          com.game.framework.protocol.Database.Upgrade.Builder builderForValue) {
        if (upgradeBuilder_ == null) {
          upgrade_ = builderForValue.build();
          onChanged();
        } else {
          upgradeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
       */
      public Builder mergeUpgrade(com.game.framework.protocol.Database.Upgrade value) {
        if (upgradeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              upgrade_ != com.game.framework.protocol.Database.Upgrade.getDefaultInstance()) {
            upgrade_ =
              com.game.framework.protocol.Database.Upgrade.newBuilder(upgrade_).mergeFrom(value).buildPartial();
          } else {
            upgrade_ = value;
          }
          onChanged();
        } else {
          upgradeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
       */
      public Builder clearUpgrade() {
        if (upgradeBuilder_ == null) {
          upgrade_ = com.game.framework.protocol.Database.Upgrade.getDefaultInstance();
          onChanged();
        } else {
          upgradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
       */
      public com.game.framework.protocol.Database.Upgrade.Builder getUpgradeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getUpgradeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
       */
      public com.game.framework.protocol.Database.UpgradeOrBuilder getUpgradeOrBuilder() {
        if (upgradeBuilder_ != null) {
          return upgradeBuilder_.getMessageOrBuilder();
        } else {
          return upgrade_;
        }
      }
      /**
       * <code>optional .com.game.framework.protocol.Upgrade upgrade = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.game.framework.protocol.Database.Upgrade, com.game.framework.protocol.Database.Upgrade.Builder, com.game.framework.protocol.Database.UpgradeOrBuilder> 
          getUpgradeFieldBuilder() {
        if (upgradeBuilder_ == null) {
          upgradeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.game.framework.protocol.Database.Upgrade, com.game.framework.protocol.Database.Upgrade.Builder, com.game.framework.protocol.Database.UpgradeOrBuilder>(
                  upgrade_,
                  getParentForChildren(),
                  isClean());
          upgrade_ = null;
        }
        return upgradeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.game.framework.protocol.BuildingState)
    }

    static {
      defaultInstance = new BuildingState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.game.framework.protocol.BuildingState)
  }

  public interface UpgradeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool upgrading = 1;
    /**
     * <code>optional bool upgrading = 1;</code>
     *
     * <pre>
     * 是否在升级中
     * </pre>
     */
    boolean hasUpgrading();
    /**
     * <code>optional bool upgrading = 1;</code>
     *
     * <pre>
     * 是否在升级中
     * </pre>
     */
    boolean getUpgrading();

    // optional int64 uid = 2;
    /**
     * <code>optional int64 uid = 2;</code>
     *
     * <pre>
     * 升级人
     * </pre>
     */
    boolean hasUid();
    /**
     * <code>optional int64 uid = 2;</code>
     *
     * <pre>
     * 升级人
     * </pre>
     */
    long getUid();
  }
  /**
   * Protobuf type {@code com.game.framework.protocol.Upgrade}
   */
  public static final class Upgrade extends
      com.google.protobuf.GeneratedMessage
      implements UpgradeOrBuilder {
    // Use Upgrade.newBuilder() to construct.
    private Upgrade(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Upgrade(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Upgrade defaultInstance;
    public static Upgrade getDefaultInstance() {
      return defaultInstance;
    }

    public Upgrade getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Upgrade(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              upgrading_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              uid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_Upgrade_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_Upgrade_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.game.framework.protocol.Database.Upgrade.class, com.game.framework.protocol.Database.Upgrade.Builder.class);
    }

    public static com.google.protobuf.Parser<Upgrade> PARSER =
        new com.google.protobuf.AbstractParser<Upgrade>() {
      public Upgrade parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Upgrade(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Upgrade> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool upgrading = 1;
    public static final int UPGRADING_FIELD_NUMBER = 1;
    private boolean upgrading_;
    /**
     * <code>optional bool upgrading = 1;</code>
     *
     * <pre>
     * 是否在升级中
     * </pre>
     */
    public boolean hasUpgrading() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool upgrading = 1;</code>
     *
     * <pre>
     * 是否在升级中
     * </pre>
     */
    public boolean getUpgrading() {
      return upgrading_;
    }

    // optional int64 uid = 2;
    public static final int UID_FIELD_NUMBER = 2;
    private long uid_;
    /**
     * <code>optional int64 uid = 2;</code>
     *
     * <pre>
     * 升级人
     * </pre>
     */
    public boolean hasUid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 uid = 2;</code>
     *
     * <pre>
     * 升级人
     * </pre>
     */
    public long getUid() {
      return uid_;
    }

    private void initFields() {
      upgrading_ = false;
      uid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, upgrading_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, uid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, upgrading_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, uid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.game.framework.protocol.Database.Upgrade parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.protocol.Database.Upgrade parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.Upgrade parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.framework.protocol.Database.Upgrade parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.Upgrade parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.protocol.Database.Upgrade parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.Upgrade parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.game.framework.protocol.Database.Upgrade parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.game.framework.protocol.Database.Upgrade parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.game.framework.protocol.Database.Upgrade parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.game.framework.protocol.Database.Upgrade prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.game.framework.protocol.Upgrade}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.game.framework.protocol.Database.UpgradeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_Upgrade_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_Upgrade_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.game.framework.protocol.Database.Upgrade.class, com.game.framework.protocol.Database.Upgrade.Builder.class);
      }

      // Construct using com.game.framework.protocol.Database.Upgrade.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        upgrading_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        uid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.game.framework.protocol.Database.internal_static_com_game_framework_protocol_Upgrade_descriptor;
      }

      public com.game.framework.protocol.Database.Upgrade getDefaultInstanceForType() {
        return com.game.framework.protocol.Database.Upgrade.getDefaultInstance();
      }

      public com.game.framework.protocol.Database.Upgrade build() {
        com.game.framework.protocol.Database.Upgrade result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.game.framework.protocol.Database.Upgrade buildPartial() {
        com.game.framework.protocol.Database.Upgrade result = new com.game.framework.protocol.Database.Upgrade(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.upgrading_ = upgrading_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uid_ = uid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.game.framework.protocol.Database.Upgrade) {
          return mergeFrom((com.game.framework.protocol.Database.Upgrade)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.game.framework.protocol.Database.Upgrade other) {
        if (other == com.game.framework.protocol.Database.Upgrade.getDefaultInstance()) return this;
        if (other.hasUpgrading()) {
          setUpgrading(other.getUpgrading());
        }
        if (other.hasUid()) {
          setUid(other.getUid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.game.framework.protocol.Database.Upgrade parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.game.framework.protocol.Database.Upgrade) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool upgrading = 1;
      private boolean upgrading_ ;
      /**
       * <code>optional bool upgrading = 1;</code>
       *
       * <pre>
       * 是否在升级中
       * </pre>
       */
      public boolean hasUpgrading() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool upgrading = 1;</code>
       *
       * <pre>
       * 是否在升级中
       * </pre>
       */
      public boolean getUpgrading() {
        return upgrading_;
      }
      /**
       * <code>optional bool upgrading = 1;</code>
       *
       * <pre>
       * 是否在升级中
       * </pre>
       */
      public Builder setUpgrading(boolean value) {
        bitField0_ |= 0x00000001;
        upgrading_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool upgrading = 1;</code>
       *
       * <pre>
       * 是否在升级中
       * </pre>
       */
      public Builder clearUpgrading() {
        bitField0_ = (bitField0_ & ~0x00000001);
        upgrading_ = false;
        onChanged();
        return this;
      }

      // optional int64 uid = 2;
      private long uid_ ;
      /**
       * <code>optional int64 uid = 2;</code>
       *
       * <pre>
       * 升级人
       * </pre>
       */
      public boolean hasUid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 uid = 2;</code>
       *
       * <pre>
       * 升级人
       * </pre>
       */
      public long getUid() {
        return uid_;
      }
      /**
       * <code>optional int64 uid = 2;</code>
       *
       * <pre>
       * 升级人
       * </pre>
       */
      public Builder setUid(long value) {
        bitField0_ |= 0x00000002;
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 uid = 2;</code>
       *
       * <pre>
       * 升级人
       * </pre>
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.framework.protocol.Upgrade)
    }

    static {
      defaultInstance = new Upgrade(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.game.framework.protocol.Upgrade)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_game_framework_protocol_UserResource_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_game_framework_protocol_UserResource_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_game_framework_protocol_BuildingState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_game_framework_protocol_BuildingState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_game_framework_protocol_Upgrade_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_game_framework_protocol_Upgrade_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016database.proto\022\033com.game.framework.pro" +
      "tocol\"\362\002\n\014UserResource\022\014\n\004rice\030\001 \001(\005\022\022\n\n" +
      "vegetables\030\002 \001(\005\022\r\n\005fruit\030\003 \001(\005\022\r\n\005grass" +
      "\030\004 \001(\005\022\017\n\007pigFood\030\005 \001(\005\022\014\n\004pork\030\006 \001(\005\022\r\n" +
      "\005crude\030\007 \001(\005\022\020\n\010gasoline\030\010 \001(\005\022\014\n\004iron\030\t" +
      " \001(\005\022\r\n\005steel\030\n \001(\005\022\014\n\004pine\030\013 \001(\005\022\022\n\nwhi" +
      "teBirch\030\014 \001(\005\022\021\n\tironBirch\030\r \001(\005\022\021\n\tpine" +
      "Board\030\016 \001(\005\022\027\n\017whiteBirchBoard\030\017 \001(\005\022\026\n\016" +
      "ironBirchBoard\030\020 \001(\005\022\021\n\tpureWater\030\021 \001(\005\022" +
      "\024\n\014mineralWater\030\022 \001(\005\022\023\n\013electricity\030\023 \001",
      "(\005\022\016\n\006bullet\030\024 \001(\005\"F\n\rBuildingState\0225\n\007u" +
      "pgrade\030\001 \001(\0132$.com.game.framework.protoc" +
      "ol.Upgrade\")\n\007Upgrade\022\021\n\tupgrading\030\001 \001(\010" +
      "\022\013\n\003uid\030\002 \001(\003B\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_game_framework_protocol_UserResource_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_game_framework_protocol_UserResource_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_game_framework_protocol_UserResource_descriptor,
              new java.lang.String[] { "Rice", "Vegetables", "Fruit", "Grass", "PigFood", "Pork", "Crude", "Gasoline", "Iron", "Steel", "Pine", "WhiteBirch", "IronBirch", "PineBoard", "WhiteBirchBoard", "IronBirchBoard", "PureWater", "MineralWater", "Electricity", "Bullet", });
          internal_static_com_game_framework_protocol_BuildingState_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_game_framework_protocol_BuildingState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_game_framework_protocol_BuildingState_descriptor,
              new java.lang.String[] { "Upgrade", });
          internal_static_com_game_framework_protocol_Upgrade_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_game_framework_protocol_Upgrade_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_game_framework_protocol_Upgrade_descriptor,
              new java.lang.String[] { "Upgrading", "Uid", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
